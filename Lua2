do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v65=v3(v1(v30,16));if v19 then local v72=v6(v65,v19);v19=nil;return v72;else return v65;end end end);local function v20(v31,v32,v33)if v33 then local v66=(v31/((2 + 0)^(v32-(1 + 0 + 0))))%((1871 -(476 + 1393))^(((v33-(1 + 0)) -(v32-(1 -0))) + (254 -(143 + 110))));return v66-(v66%(255 -(116 + 138)));else local v67=2^(v32-(1 + 0));return (((v31%(v67 + v67))>=v67) and (2 -1)) or (0 + 0);end end local function v21()local v38=1625 -(665 + 960);local v39;while true do if (v38==(3 -2)) then return v39;end if (v38==(0 -0)) then v39=v2(v16,v18,v18);v18=v18 + ((840 + 462) -(313 + 988));v38=1979 -(453 + 1525);end end end local function v22()local v40=0 + 0;local v41;local v42;while true do if (v40==(0 + 0)) then v41,v42=v2(v16,v18,v18 + (4 -(3 -1)));v18=v18 + (1936 -(181 + (4040 -2287)));v40=1;end if (v40==((1675 -975) -(20 + 679))) then return (v42 * 256) + v41;end end end local function v23()local v43,v44,v45,v46=v2(v16,v18,v18 + (973 -(782 + 188)));v18=v18 + (915 -((1968 -(521 + 1209)) + 673));return (v46 * 16777216) + (v45 * (111277 -45741)) + (v44 * 256) + v43;end local function v24()local v47=v23();local v48=v23();return (( -(6 -4) * v20(v48,5 + 27)) + (1 -0)) * ((2 + 0)^(v20(v48,347 -(141 + 185),1663 -(1108 + 524)) -(856 + 167))) * ((((v20(v48,702 -(425 + 276),1195 -(77 + 1098)) * ((1 + 1 + 0)^(962 -(44 + 886)))) + v47)/((2 -(1829 -(311 + 1518)))^(723 -(342 + 329)))) + (1220 -(378 + 607 + 234)));end local function v25(v34)local v49=0;local v50;local v51;while true do if (v49==(0 -0)) then v50=nil;if  not v34 then v34=v23();if (v34==(0 + 0)) then return "";end end v49=1466 -(859 + 606);end if (((1926 -(788 + 1131)) -5)==v49) then v51={};for v73=1, #v50 do v51[v73]=v3(v2(v4(v50,v73,v73)));end v49=127 -(17 + 107);end if (v49==((24 -19) -2)) then return v7(v51);end if ((339 -(105 + 233))==v49) then v50=v4(v16,v18,(v18 + v34) -((716 + 501) -(521 + 695)));v18=v18 + v34;v49=2;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v52==1) then local v68=1327 -(1109 + 218);while true do if (0~=v68) then else v55=nil;v56=nil;v68=1897 -(1133 + 763);end if (v68==(2 -1)) then v52=1 + 1;break;end end end if (v52==3) then local v69=0;while true do if (v69~=(0 -0)) then else v59=nil;v60=nil;v69=840 -(810 + 29);end if (v69==(1 + 0)) then v52=1443 -(259 + 1180);break;end end end if ((1 + 1)==v52) then local v70=0;while true do if (v70~=0) then else v57=nil;v58=nil;v70=3 -2;end if (v70~=(1162 -(401 + 760))) then else v52=3;break;end end end if (v52~=4) then else while true do if (v53~=1) then else local v80=0 -0;while true do if (v80==0) then v56=nil;v57=nil;v80=1;end if (1~=v80) then else v53=550 -(35 + 513);break;end end end if (v53==2) then local v81=0 -0;while true do if (v81==0) then v58=nil;v59=nil;v81=1 + 0;end if (v81==1) then v53=3;break;end end end if (0==v53) then local v82=1592 -(287 + 1305);while true do if (v82==0) then v54=0 -0;v55=nil;v82=1;end if (v82~=(1048 -(239 + 808))) then else v53=1731 -(1260 + 470);break;end end end if (v53==3) then v60=nil;while true do local v83=0 + 0;local v84;while true do if (0==v83) then v84=0;while true do if (v84~=(1001 -(584 + 416))) then else if ((1052 -(209 + 843))==v54) then local v104=706 -(105 + 601);local v105;local v106;while true do if (v104~=0) then else v105=0;v106=nil;v104=1 + 0;end if (v104~=1) then else while true do if (v105==(442 -(274 + 168))) then v106=940 -(305 + 635);while true do if (v106==0) then local v115=0 -0;local v116;while true do if ((0 + 0)==v115) then v116=1419 -(1106 + 313);while true do if (v116==(0 -0)) then v55={};v56={};v116=830 -(369 + 460);end if (v116==1) then v106=1;break;end end break;end end end if (v106~=1) then else v57={};v54=1;break;end end break;end end break;end end end if ((2 + 1)~=v54) then else local v107=0;local v108;while true do if (v107==(0 + 0)) then v108=0 -0;while true do local v114=0;while true do if (v114==(1491 -(166 + 1325))) then if (v108~=1) then else return v58;end if (v108~=0) then else local v117=0;while true do if (v117==(640 -(450 + 190))) then for v175=1,v23() do v56[v175-(3 -2)]=v28();end for v177=1,v23() do v57[v177]=v23();end v117=1;end if (v117==(1 -0)) then v108=1742 -(1730 + 11);break;end end end break;end end end break;end end end break;end if (v84==(608 -(352 + 256))) then local v103=0 + 0;while true do if (v103~=1) then else v84=1;break;end if (v103==0) then if (v54~=1) then else local v111=0 -0;while true do if (v111~=0) then else v58={v55,v56,nil,v57};v59=v23();v111=1;end if (v111==(2 -1)) then v60={};v54=2;break;end end end if (v54==(2 + 0)) then local v112=0 -0;local v113;while true do if (v112==(348 -(35 + 313))) then v113=0 + 0;while true do if (v113==(1 -0)) then for v119=1,v23() do local v120=0;local v121;local v122;while true do if (v120==(0 + 0)) then v121=0 -0;v122=nil;v120=3 -2;end if (v120==(2 -1)) then while true do if (v121~=0) then else v122=v21();if (v20(v122,1,1)==0) then local v246=0;local v247;local v248;local v249;local v250;local v251;while true do if (v246~=0) then else v247=0 -0;v248=nil;v246=1;end if ((2 -1)==v246) then v249=nil;v250=nil;v246=2;end if (v246==(7 -5)) then v251=nil;while true do if (v247==(0 -0)) then local v319=0;while true do if (v319==0) then v248=1670 -(1404 + 266);v249=nil;v319=1;end if (v319==1) then v247=3 -2;break;end end end if (v247~=(1 + 1)) then else while true do if (v248==0) then local v335=105 -(97 + 8);local v336;while true do if (v335==(0 -0)) then v336=0 + 0;while true do if ((1700 -(1529 + 171))==v336) then local v361=0 -0;while true do if (0==v361) then v249=v20(v122,2,3);v250=v20(v122,4,12 -6);v361=1;end if (v361==1) then v336=1;break;end end end if (v336==1) then v248=443 -(360 + 82);break;end end break;end end end if (v248~=2) then else local v337=0;local v338;local v339;while true do if (v337==(2 -1)) then while true do if (v338==0) then v339=0 -0;while true do if ((772 -(298 + 473))~=v339) then else v248=3;break;end if (v339==0) then local v364=1463 -(220 + 1243);while true do if (1==v364) then v339=369 -(73 + 295);break;end if (v364~=(0 + 0)) then else if (v20(v250,1041 -(967 + 73),2 -1)~=(865 -(789 + 75))) then else v251[7 -5]=v60[v251[5 -3]];end if (v20(v250,1 + 1,1327 -(420 + 905))==(2 -1)) then v251[7 -4]=v60[v251[393 -(28 + 362)]];end v364=1;end end end end break;end end break;end if ((0 -0)~=v337) then else v338=0;v339=nil;v337=1990 -(646 + 1343);end end end if (v248~=(723 -(397 + 325))) then else local v340=249 -(132 + 117);while true do if (v340==0) then local v355=0;while true do if (v355~=(2 -1)) then else v340=1 + 0;break;end if (v355==0) then v251={v22(),v22(),nil,nil};if (v249==(283 -(199 + 84))) then local v362=0;local v363;while true do if (0~=v362) then else v363=0 -0;while true do if (v363==0) then v251[2 + 1]=v22();v251[13 -9]=v22();break;end end break;end end elseif (v249==(1622 -(687 + 934))) then v251[1992 -(93 + 1896)]=v23();elseif (v249==(6 -4)) then v251[3]=v23() -((69 -(20 + 47))^16);elseif (v249==(912 -(378 + 531))) then local v373=0 -0;while true do if (v373==(0 + 0)) then v251[3]=v23() -(2^(4 + 12));v251[1 + 3]=v22();break;end end end v355=1;end end end if (v340==1) then v248=2;break;end end end if (v248==(474 -(76 + 395))) then if (v20(v250,1801 -(10 + 1788),3)==(1946 -(879 + 1066))) then v251[17 -13]=v60[v251[4]];end v55[v119]=v251;break;end end break;end if (1~=v247) then else local v320=0;while true do if (1==v320) then v247=2 + 0;break;end if ((0 + 0)==v320) then local v342=0;while true do if (v342~=(1 -0)) then else v320=1;break;end if (v342==(0 + 0)) then v250=nil;v251=nil;v342=1 + 0;end end end end end end break;end end end break;end end break;end end end v54=3;break;end if (v113==0) then for v123=1,v59 do local v124=1492 -(1100 + 392);local v125;local v126;local v127;local v128;while true do if ((1468 -(714 + 752))~=v124) then else while true do if (v125==(182 -(151 + 30))) then v128=nil;while true do if (v126~=1) then else if (v127==1) then v128=v21()~=0;elseif (v127==2) then v128=v24();elseif (v127~=(3 + 0)) then else v128=v25();end v60[v123]=v128;break;end if (v126==(0 + 0)) then local v266=290 -(150 + 140);while true do if (v266~=(1 -0)) then else v126=1;break;end if (v266~=0) then else v127=v21();v128=nil;v266=2 -1;end end end end break;end if (v125==0) then local v239=0;while true do if (v239==0) then v126=0;v127=nil;v239=1;end if (v239==1) then v125=2 -1;break;end end end end break;end if ((407 -(37 + 369))==v124) then v127=nil;v128=nil;v124=2;end if (v124==0) then v125=0 + 0;v126=nil;v124=1;end end end v58[3]=v21();v113=2 -1;end end break;end end end v103=2 -1;end end end end break;end end end break;end end break;end if (0~=v52) then else local v71=0 + 0;while true do if (v71==0) then v53=0 -0;v54=nil;v71=1;end if (1==v71) then v52=1;break;end end end end end local function v29(v35,v36,v37)local v61=0;local v62;local v63;local v64;while true do if (0==v61) then v62=v35[1];v63=v35[2];v61=1;end if (v61==1) then v64=v35[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v85=v62;local v86=Const;local v87=v63;local v88=v64;local v89=v27;local v90={};local v91={};local v92={};for v97=0,v78 do if ((v97>=v88) or ((2143 + 2510)<2924)) then v90[v97-v88]=v77[v97 + (807 -(458 + 348))];else v92[v97]=v77[v97 + 1 + 0];end end local v93=(v78-v88) + 1;local v94;local v95;while true do local v98=0 + 0;local v99;local v100;while true do if ((((2380 -(1076 + 105)) -949)<(3239 + 1718)) and (v98==0)) then v99=0 + 0;v100=nil;v98=747 -(328 + (1041 -623));end if ((((993 + 286) -661)<(1892 -(126 + 254))) and (v98==(2 -1))) then while true do if ((v99==(0 + 0)) or ((2646 + 1070)<(7 + 424))) then v100=1595 -(1534 + 61);while true do if ((3781==3781) and (v100==(1 + 0))) then if ((v95<=(1211 -(260 + 931))) or ((1232 + 103)<=(2222 -((74 -59) + 441 + 859)))) then if (((3795 -(618 + 56 + 1223))>=(627 + 401)) and (v95<=(3 + 6))) then if ((2394<=(10610 -6137)) and (v95<=4)) then if ((v95<=1) or ((5521 -3041)<=(3230 -2222))) then if (((2920 -(234 + 1536))<4859) and (v95>0)) then local v129=0 -0;local v130;local v131;while true do if (((8344 -4576)>(210 + 4)) and (v129==(1 -0))) then while true do if (((5391 -1560)>(4089 -(322 + 1))) and (v130==(1223 -(370 + 853)))) then v131=v94[2 + 0];do return v92[v131](v13(v92,v131 + ((1 + 2) -2),v76));end break;end end break;end if (((0 + 0)==v129) or ((822 + 1609)<=(3445 -2133))) then v130=(1201 -(414 + 787)) + 0;v131=nil;v129=1 + 0 + 0;end end elseif (((1050 + 575)>=(5172 -3764)) and (v92[v94[(847 + 615) -(603 + 857)]]==v94[12 -8])) then v75=v75 + 1;else v75=v94[1384 -((2038 -(834 + 558)) + 735)];end elseif ((v95<=(827 -(720 + (156 -51)))) or ((7669 -(5252 -(245 + 290)))>=(5089 -(50 + (848 -484))))) then local v132=0 + 0;local v133;local v134;while true do if ((v132==(1 -0)) or (1913>(6399 -3723))) then while true do if ((v133==((1670 -(60 + 167)) -(716 + 727))) or ((8475 -4151)<2570)) then v134=v94[2 + 0];v92[v134]=v92[v134](v13(v92,v134 + 1,v76));break;end end break;end if ((v132==(0 -0)) or (927>=3104)) then v133=0 + 0;v134=nil;v132=1 -0;end end elseif ((v95==(61 -(26 + 32))) or ((3323 -1550)<(4589 -2982))) then local v179=0;local v180;local v181;while true do if ((v179==(1 + 0)) or ((3311 -938)>(13138 -8327))) then while true do if ((v180==(1158 -(156 + 1002))) or ((1235 + 1559)>=(3338 + 517))) then v181=v94[2 + 0];v92[v181]=v92[v181](v13(v92,v181 + 1,v94[599 -(513 + 83)]));break;end end break;end if (((0 + (863 -(48 + 815)))==v179) or ((16131 -11513)>(334 + 4490))) then v180=1580 -(838 + 742);v181=nil;v179=1 + 0;end end else local v182=231 -(9 + 1 + 221);local v183;local v184;while true do if (((2015 -(226 + 356))<=(1258 + 315)) and (v182==(1 -0))) then while true do if ((v183==(0 -(0 + 0))) or ((5611 -((2761 -2002) + 501))<=(24 + 10 + 90))) then v184=v94[296 -(23 + 271)];v92[v184](v13(v92,v184 + 1 + 0,v76));break;end end break;end if (((482 -(92 + 9))==(312 + (1813 -(1217 + 527)))) and (v182==(0 -0))) then v183=0 + 0;v184=nil;v182=1;end end end elseif ((v95<=(10 -4)) or ((11985 -6999)<=((3960 -(245 + 1227)) -(236 + 258)))) then if (((4522 -(144 + 36 + 605))>=(4767 -(1526 + 40))) and (v95>(6 -1))) then local v135=1519 -((1393 -(76 + 1309)) + 1511);local v136;local v137;local v138;while true do if (((1157 + 3709)>(2254 -(812 + 196))) and (v135==(1 -0))) then v138=nil;while true do if ((((8423 -(681 + 25)) -5166)>(4309 -2874)) and (v136==(395 -(169 + 76 + 149)))) then v92[v137 + (1 -0)]=v138;v92[v137]=v138[v94[4 + (0 -0)]];break;end if ((v136==(0 -0)) or ((16014 -11274)<=(1361 -472))) then local v255=0 + 0;while true do if ((v255==(1 + 0)) or (4856==((11303 -(126 + 580)) -6226))) then v136=421 -(109 + 311);break;end if (((0 -0)==v255) or ((3311 -(1705 + 162))>2862)) then v137=v94[2 -(1752 -(1314 + 438))];v138=v92[v94[3 + 0]];v255=(4 -1) -2;end end end end break;end if (((12162 -(7756 + 530))>=(5188 -2902)) and (v135==(0 + 0))) then v136=(0 -0) -0;v137=nil;v135=4 -3;end end else local v139=1101 -(355 + 746);local v140;local v141;while true do if ((v139==(283 -(90 + (405 -(87 + 126))))) or ((4161 -(545 + 178))>(5052 -1605))) then for v240=1 + 0, #v91 do local v241=0 + 0;local v242;local v243;while true do if ((v241==(1 + 0)) or (1376>(6106 -(4833 -(1395 + 378))))) then while true do if (((3122 + 956)<(5283 -(982 + 154))) and (v242==(0 -0))) then v243=v91[v240];for v313=1763 -(472 + 1291), #v243 do local v314=0 -0;local v315;local v316;local v317;local v318;while true do if ((v314==(1751 -(685 + 1064))) or (((8760 -(329 + 1532)) -4463)==4536)) then while true do if ((v315==(0 + (0 -0))) or ((362 + 1005)<=(2753 -1551))) then v316=v243[v313];v317=v316[2 -(1 -0)];v315=1;end if ((((2729 -(612 + 406)) -(376 + 134))==(2714 -(538 + 975))) and ((2 -1)==v315)) then v318=v316[2];if (((v317==v92) and (v318>=v140)) or ((5463 -(1145 + 312))==(1400 + 490 + 1109))) then local v357=1400 -(307 + 1093);local v358;while true do if ((v357==(0 -0)) or ((1859 + 1227 + 559)==(5837 -(516 + 1362)))) then v358=0;while true do if (((1313 + 2424)==(2294 + 1443)) and (v358==(0 + 0))) then v141[v318]=v317[v318];v316[(1 -0) + 0]=v141;break;end end break;end end end break;end end break;end if (((0 -0)==v314) or ((5343 -3502)>(3318 -(4 + 1446)))) then v315=0 + (686 -(114 + 572));v316=nil;v314=(4 -3) -0;end if ((v314==(1595 -(117 + 1477))) or (((13610 -(641 + 272)) -8745)<1550)) then v317=nil;v318=nil;v314=4 -2;end end end break;end end break;end if ((v241==(0 + 0 + (0 -0))) or ((1639 -487)>1208)) then v242=0 + 0;v243=nil;v241=2 -1;end end end break;end if ((v139==(0 -0)) or ((5979 -(709 + 294))<(574 + 3103))) then local v236=0;while true do if ((((11573 -(1412 + 99)) -6823)>=(3487 -725)) and (v236==(0 -0))) then v140=v94[2 + 0];v141={};v236=359 -(281 + (1232 -(971 + 184)));end if ((v236==(1830 -(561 + 1268))) or ((4533 -2856)==1648)) then v139=3 -2;break;end end end end end elseif (((6240 -(1392 + 59))>=((7964 + 789) -6221)) and (v95<=(3 + 4))) then v92[v94[236 -(91 + 143)]][v94[9 -(520 -(465 + 49))]]=v92[v94[1284 -(165 + 1115)]];elseif ((4326==(4956 -(375 + 255))) and (v95>(1424 -(346 + 1070)))) then for v237=v94[1 + (2 -1)],v94[2 + (1444 -(1053 + 390))] do v92[v237]=nil;end else do return;end end elseif ((2583>(1943 -(854 + 356))) and (v95<=(20 -6))) then if (((5076 -1471)>=(6813 -3922)) and (v95<=(29 -18))) then if ((v95>10) or ((7174 -5641)<=(1109 -399))) then v92[v94[2 + (1010 -(905 + 105))]]=v92[v94[969 -(325 + 641)]][v92[v94[357 -(75 + 278)]]];else v92[v94[9 -7]]=v94[8 -5];end elseif ((v95<=(1 + 11)) or ((3872 -2190)>=(4148 -(652 + 723)))) then local v145=0;local v146;local v147;local v148;local v149;while true do if ((0==v145) or ((71 + 759)>=(1629 + 321))) then v146=0;v147=nil;v145=1578 -(1064 + 513);end if ((v145==1) or (924<=53)) then v148=nil;v149=nil;v145=2;end if ((v145==(1 + 1)) or ((2122 -(340 + 1010))>((1276 + 1578) -(15 + 387)))) then while true do if (((9470 -6361)<(2378 + 1860)) and (v146==(3 -2))) then v149=0;for v267=v147,v94[2 + (382 -(74 + 306))] do local v268=(718 + 84) -(505 + 297);local v269;while true do if ((v268==(0 + 0)) or ((2851 + (3489 -(176 + 1601)))<=(4395 -(282 + 631)))) then v269=0 + 0;while true do if ((724==(2642 -1918)) and ((0 -0)==v269)) then v149=v149 + (4 -3);v92[v267]=v148[v149];break;end end break;end end end break;end if (((3698 -(875 + 50))>=2412) and ((0 -0)==v146)) then v147=v94[2];v148={v92[v147](v13(v92,v147 + (2 -1),v76))};v146=1 + 0 + 0;end end break;end end elseif ((v95==((2415 -1136) -(258 + 1008))) or ((2055 + 1386 + 24)<(3225 -(396 + 20)))) then v92[v94[1 + 1]]=v92[v94[1462 -(101 + 1358)]][v94[4 + 0]];else local v186=0 + 0;local v187;local v188;local v189;local v190;local v191;while true do if ((v186==2) or (429>=1772)) then v191=nil;while true do if ((v187==(1256 -(395 + 860))) or ((1344 + 367)==(1987 + 1114))) then local v272=0 -(0 -0);while true do if (((6815 -3066)>(11313 -8236)) and (v272==(1 + 0))) then v187=608 -(170 + 436);break;end if ((v272==0) or ((857 -522)==(3732 -(265 + 5)))) then v76=(v190 + v188) -(3 -2);v191=0;v272=2 -1;end end end if ((v187==(3 -1)) or (4855<(342 + (5835 -1745)))) then for v284=v188,v76 do local v285=0 + 0;local v286;local v287;while true do if ((v285==(3 -(1491 -(1138 + 351)))) or ((1016 -(470 + 42))>(2964 -1378))) then while true do if (((659 + 450)==(729 + 380)) and (v286==(1608 -((423 -(44 + 155)) + 1384)))) then v287=0 + 0;while true do if (((425 -191)<(30 + 2210)) and (v287==0)) then v191=v191 + 1 + 0;v92[v284]=v189[v191];break;end end break;end end break;end if ((1134>954) and (v285==(0 + 0))) then v286=0;v287=nil;v285=2 -1;end end end break;end if ((v187==(0 + 0)) or (2122>(1295 + 3619))) then local v273=0;while true do if (((17809 -13141)<=(108 + 4786)) and (v273==1)) then v187=1;break;end if ((0==v273) or ((1899 + 886)==(263 + 2707))) then v188=v94[1 + 1];v189,v190=v89(v92[v188](v13(v92,v188 + 1,v76)));v273=1 -0;end end end end break;end if ((4343>=(2974 -(1103 + 193))) and (v186==(0 -0))) then v187=0 + 0;v188=nil;v186=1;end if (((1 + 0)==v186) or ((521 + 3334)<=(56 + 17))) then v189=nil;v190=nil;v186=2 + 0;end end end elseif ((v95<=((11 -7) + 13)) or ((3810 -1649)<=1761)) then if ((379<4003) and (v95<=15)) then v92[v94[1 + 1]]=v92[v94[167 -(142 + 22)]];elseif ((v95==(47 -31)) or ((1138 + 973)<((1284 -653) + 24))) then v92[v94[2]]=v36[v94[11 -8]];elseif ((((11999 + 7217) -14272)>495) and v92[v94[2 -0]]) then v75=v75 + (1161 -(723 + (569 -132)));else v75=v94[2 + 1];end elseif ((((3840 -(790 + 573)) -1251)<((4530 -2334) + 692)) and (v95<=(43 -(16 + 9)))) then v92[v94[(2 -0) + 0]]=v94[8 -5]~=(418 -((277 -190) + 331));elseif ((1284<=(4185 -((1863 -(411 + 242)) + 771))) and (v95>(42 -23))) then v92[v94[8 -6]]={};else local v194=(0 -0) -0;local v195;local v196;while true do if ((v194==(0 + 0)) or (((1399 -(21 + 529)) + 3063)<(5753 -3422))) then local v244=(0 -0) -0;while true do if ((v244==(2 -1)) or (483>795)) then v194=1 + 0 + 0;break;end if (((0 + 0)==v244) or ((6063 -(14 + 1499))==(1743 -1144))) then v195=302 -(202 + 100);v196=nil;v244=1;end end end if ((424<((15853 -12488) -(81 + 283 + 423))) and (1==v194)) then while true do if ((v195==0) or ((3204 -1287)>2774)) then v196=v94[5 -3];v92[v196]=v92[v196](v92[v196 + (1133 -((840 -523) + 815))]);break;end end break;end end end elseif ((v95<=(1500 -(1393 + 76))) or ((5357 -(438 + 532))<(2428 -(546 + 308)))) then if (((4641 -(70 + 346))<=(5507 -(259 + 488))) and (v95<=(23 + 2))) then if ((v95<=(15 + 7)) or ((2546 -(4 + 269))<(36 + 79))) then if ((4343>=2539) and (v95>(1952 -(1480 + 451)))) then v92[v94[2 + 0]]=v29(v87[v94[8 -5]],nil,v37);elseif ((v94[2 + 0]==v92[v94[10 -6]]) or (((140 + 3357) -(447 + 512))==(4050 -(19 + 120)))) then v75=v75 + (1 -0);else v75=v94[3];end elseif ((4703==(3164 + 1539)) and (v95<=(20 + 3))) then local v153=0;local v154;local v155;local v156;local v157;local v158;while true do if ((v153==(2 + (239 -(193 + 46)))) or ((1094 -293)==(1752 + 2481))) then v158=nil;while true do if ((v154==(1 + 0)) or ((4280 -(623 + 923))>=3976)) then v157=nil;v158=nil;v154=2 + 0;end if ((v154==(0 + 0)) or ((1599 + 527)<=286)) then local v256=0 + 0;while true do if (((8945 -5380)>(754 + 780)) and (((1439 -332) -(870 + 236))==v256)) then v154=342 -(78 + 263);break;end if (((16768 -12532)>(1335 + (1322 -(96 + 397)))) and (v256==(94 -((87 -47) + 54)))) then v155=0 + 0;v156=nil;v256=1809 -(913 + 895);end end end if ((v154==(4 -2)) or ((993 -546)>3336)) then while true do if ((v155==0) or ((2742 -(719 + 1062))>=(5037 -3051))) then local v288=(960 -(663 + 297)) -0;local v289;while true do if ((4398>=3047) and (v288==(0 + 0))) then v289=0 -0;while true do if (((3430 -(117 + 1061))>(2618 -(1616 + 146))) and (v289==(1338 -(797 + (1082 -541))))) then local v343=422 -(60 + 362);while true do if ((v343==(0 + (0 -0))) or ((4969 -(699 + 959))<=(1854 -(256 + 1127)))) then v156=v94[2 + 0];v157={v92[v156](v92[v156 + (1599 -(1451 + 147))])};v343=1;end if (((3005 -(89 + (634 -500)))==(6588 -3806)) and ((1 + 0)==v343)) then v289=1 -0;break;end end end if (((187 + 1114 + 21)==(1259 + 63)) and (v289==(463 -(137 + 325)))) then v155=1;break;end end break;end end end if (((1093 -(789 + 303))==v155) or ((6581 -(1509 + 205))<(1939 -((5383 -4305) + 433)))) then v158=0;for v303=v156,v94[4] do local v304=0;local v305;while true do if (((3883 -(221 + 92))==(15434 -11864)) and ((1002 -(65 + 937))==v304)) then v305=152 -(95 + 57);while true do if ((v305==0) or ((2468 + 2380)<(7315 -3373))) then v158=v158 + 1 + 0;v92[v303]=v157[v158];break;end end break;end end end break;end end break;end end break;end if ((v153==0) or (4860<=(916 + 173))) then v154=0 + 0;v155=nil;v153=675 -(514 + 160);end if ((((151 + 173) -(124 + 185 + 14))==v153) or (3863<(6712 -3358))) then v156=nil;v157=nil;v153=2 -0;end end elseif ((v95==24) or (((3791 -(484 + 84)) -(121 + 368))>(7714 -4151))) then v37[v94[(2125 -(846 + 865)) -(275 + 136)]]=v92[v94[2 + 0]];else v92[v94[1064 -(921 + 141)]]= #v92[v94[3]];end elseif (((5913 -(335 + 690))>(3188 -(921 + 277))) and (v95<=(71 -43))) then if ((((3104 -(186 + 1039)) + 419)==(4266 -(538 + 1430))) and (v95<=(1817 -(517 + 1274)))) then local v159=0 -0;local v160;local v161;local v162;local v163;while true do if (((1282 + 2482)>=(3601 -((523 -(56 + 449)) + 7))) and (v159==((4 -2) + 0))) then while true do if (((635 + 1 + 119)==(1801 -(695 + 351))) and ((2 -0)==v160)) then if (((3180 -(1518 + 424))<(14622 -10785)) and (v162>0)) then if ((v163<=v92[v161 + 1]) or ((2173 -1476)>=(11968 -7382))) then local v306=0;local v307;while true do if (((3973 -(3063 -(542 + 45)))==1497) and (v306==(68 -(27 + 41)))) then v307=1841 -(147 + 1694);while true do if ((v307==(0 -0)) or ((2552 -(313 + 486))>(369 + 1629))) then v75=v94[2 + 1];v92[v161 + 1 + 2]=v163;break;end end break;end end end elseif (((5718 -2557)>(2120 -1336)) and (v163>=v92[v161 + 1])) then local v308=0 + 0;local v309;while true do if ((146==146) and (v308==(0 + 0 + 0))) then v309=0;while true do if ((((10412 -(847 + 109)) -5784)>(3004 + 362)) and ((0 + 0)==v309)) then v75=v94[3 + 0];v92[v161 + (12 -9)]=v163;break;end end break;end end end break;end if ((v160==0) or ((556 + 814)==1752)) then local v257=0 + 0;while true do if (((0 -0)==v257) or ((2160 -1237)>(20162 -15931))) then v161=v94[7 -5];v162=v92[v161 + 2];v257=1 + 0;end if ((v257==(1 + 0)) or (2475<410)) then v160=1 -0;break;end end end if ((v160==(1417 -(510 + 906))) or ((4387 -(53 + 55 + 44))<(5156 -(1144 + 822)))) then local v258=1417 -(131 + 1286);while true do if (((5485 -(252 + 1179))>(2046 + 869)) and (v258==0)) then v163=v92[v161] + v162;v92[v161]=v163;v258=1 -0;end if (((1050 + 1830)==(459 + 2316 + 105)) and (v258==(825 -(214 + (1368 -(389 + 369)))))) then v160=2 + 0;break;end end end end break;end if (((2550 -(1071 + 724))==755) and ((1392 -(800 + 592))==v159)) then v160=478 -(456 + 22);v161=nil;v159=1;end if (((3263 -(879 + (3481 -2562)))<(5 + 118 + 1754)) and (v159==(853 -(647 + 205)))) then v162=nil;v163=nil;v159=4 -2;end end elseif ((2140>=(3427 -2063)) and (v95>(9 + 18))) then local v199=1342 -(169 + 1173);local v200;local v201;local v202;local v203;while true do if ((2475>=(333 + 2135)) and (v199==2)) then while true do if (((7413 -2833)>=2676) and (v200==0)) then local v275=0 + 0;while true do if ((v275==1) or ((5550 -3817)>4245)) then v200=429 -(41 + 387);break;end if ((v275==(0 -0)) or ((2271 -(83 + 898))>=3246)) then v201=v94[3 -1];v202=v92[v201];v275=1;end end end if ((v200==(1 + 0)) or (((171 + 920) -600)>(1939 -(551 + (921 -727))))) then v203=v92[v201 + ((739 -(592 + 141)) -4)];if ((4448>=(2638 -1783)) and (v203>(0 + 0))) then if ((3604>=(3176 -(276 + 271))) and (v202>v92[v201 + 1])) then v75=v94[1 + 2];else v92[v201 + (304 -(65 + 236))]=v202;end elseif ((369<=(3055 -(409 + 248))) and (v202<v92[v201 + 1 + 0])) then v75=v94[4 -1];else v92[v201 + (5 -2)]=v202;end break;end end break;end if ((v199==0) or ((7638 -(4958 -(260 + 199)))>=(6771 -2120))) then v200=0;v201=nil;v199=1917 -(5 + 1911);end if ((1==v199) or ((543 + 2621 + 691)<=(4690 -(1000 + 900)))) then v202=nil;v203=nil;v199=1 + 1;end end else v92[v94[5 -3]][v94[579 -((952 -475) + 99)]]=v94[2 + 2];end elseif (((3281 -(744 + 986))<(9115 -5375)) and (v95<=(5 + 24))) then v92[v94[2 + 0]]();elseif (((6473 -(765 + 1106))>2124) and (v95>(2009 -(1068 + 911)))) then v75=v94[3 -0];else local v205=0 -0;local v206;local v207;local v208;local v209;local v210;while true do if (((3017 -(748 + 1063))<4704) and (v205==((2 -1) -0))) then v208=nil;v209=nil;v205=9 -7;end if (((4080 -(855 + 469))<(2502 + 10 + 416)) and (v205==(3 -1))) then v210=nil;while true do if (((1741 -(349 + 620))<=3157) and (v206==(637 -(460 + 176)))) then local v276=1209 -(99 + 1110);while true do if ((v276==1) or (3961<(3540 -1593))) then v206=835 -(162 + 671);break;end if (((2900 -(825 + 1065))<=(2686 + 1541)) and (v276==(0 + 0 + 0))) then v76=(v209 + v207) -(274 -(192 + 11 + 70));v210=0;v276=985 -(375 + 609);end end end if ((v206==(0 + 0)) or ((2583 -((2258 -(475 + 422)) + 40))>=3199)) then local v277=1364 -(929 + 435);while true do if (((5391 -(334 + 603))>=(1173 + 1235)) and (v277==(24 -(5 + (467 -(442 + 7)))))) then v206=1 -(0 + 0);break;end if (((5822 -(22 + 1778))>(6971 -4985)) and (v277==(1286 -(653 + 633)))) then v207=v94[2];v208,v209=v89(v92[v207](v13(v92,v207 + ((664 -(305 + 357)) -1),v94[2 + 1])));v277=576 -(210 + 365);end end end if (((12494 -8127)>3548) and (v206==(1 + (2 -1)))) then for v291=v207,v76 do local v292=0 -0;local v293;while true do if ((914<(2778 -(55 + 1223))) and (v292==(0 + 0))) then v293=0;while true do if (((5755 -((1354 -(262 + 83)) + 731))>((5112 -3824) -(210 + 37))) and (v293==(1498 -(183 + 1315)))) then v210=v210 + (1920 -(1112 + 807));v92[v291]=v208[v210];break;end end break;end end end break;end end break;end if (((1055 + 3899)>=(3861 -(1317 + 516))) and (v205==(0 + (17 -(4 + 13))))) then v206=0 -0;v207=nil;v205=1;end end end elseif (((982 -(132 + 60))==(484 + 22 + 284)) and (v95<=36)) then if ((v95<=(1973 -(359 + 1581))) or ((611 + 2099)>=3385)) then if ((v95>32) or (370>=(2767 -(4 + 21)))) then local v164=0 + 0;local v165;local v166;while true do if (((2565 + 1132)>(1085 + 986)) and ((267 -(186 + 80))==v164)) then while true do if (((41 + 594)<=(1002 + 46)) and (v165==(0 -0))) then v166=v94[2 + 0];v92[v166]=v92[v166]();break;end end break;end if (((1415 -(165 + 247))<=(1409 + 1291)) and (v164==0)) then v165=0 + 0;v166=nil;v164=1338 -(717 + 620);end end elseif ( not v92[v94[1005 -(388 + 615)]] or ((12412 -7927)<=((3426 -(1085 + 12)) + 294))) then v75=v75 + 1 + 0;else v75=v94[8 -5];end elseif (((2136 + 991)==(11974 -8847)) and (v95<=(65 -31))) then local v167=0 + 0;local v168;local v169;while true do if ((v167==(1359 -(978 + 380))) or ((294 + 341)>=647)) then while true do if ((v168==(1494 -(983 + 511))) or ((6833 -4669)==(3140 + 626))) then v169=v94[8 -6];v92[v169](v92[v169 + (2 -1)]);break;end end break;end if (((846 + 1918)==(2570 + 146 + 48)) and ((0 + 0)==v167)) then v168=0 -0;v169=nil;v167=1;end end elseif (((2171 + 224)==(11822 -(7058 + 2369))) and (v95==(66 -31))) then local v211=0 -0;local v212;while true do if (((5541 -(61 + 1937))>(5068 -2630)) and ((0 + 0)==v211)) then v212=v94[2];do return v13(v92,v212,v76);end break;end end else local v213=0 + 0;local v214;local v215;local v216;local v217;while true do if ((v213==(2 -1)) or ((661 + 1091)>=(2510 + (6663 -4746)))) then v216=nil;v217=nil;v213=(1680 -(1025 + 654)) + 1;end if ((2962<=(20818 -15885)) and (v213==(2 + 0))) then while true do if ((v214==(0 + 0)) or ((1227 -646)<=(2174 -((501 -(20 + 239)) + (3932 -2563))))) then local v278=0 + 0;while true do if ((v278==(781 -(162 + 619))) or ((5318 -(1061 + 917))==3477)) then v215=v87[v94[1 + 2]];v216=nil;v278=2 -1;end if (((12637 -8683)==((6736 -(140 + 920)) -1722)) and (v278==1)) then v214=158 -(120 + 37);break;end end end if ((v214==(2 + 0)) or (3370==(4140 -((1868 -1446) + 128)))) then for v294=(1 + 3) -3,v94[(13 -9) + 0] do local v295=1203 -(980 + 223);local v296;local v297;while true do if (((2401 -(326 + 1000))==1075) and (v295==(0 -0))) then v296=156 -(37 + 119);v297=nil;v295=1 -0;end if (((7924 -5441)>=(4468 -3327)) and (v295==(3 -2))) then while true do if ((v296==0) or ((1639 -(799 + 428))>=1768)) then local v345=0 -0;while true do if (((628 + 2236)<=(5934 -(1092 + 453))) and ((1271 -(1184 + (160 -74)))==v345)) then v296=1 + 0;break;end if ((879==(1257 -(236 + 142))) and ((0 -0)==v345)) then v75=v75 + (2 -1);v297=v85[v75];v345=1;end end end if (((2184 + 2704)>=(3201 -(1037 + 752 + 126))) and (v296==((719 -234) -(92 + 2 + 390)))) then if ((v297[1052 -(726 + 325)]==(9 + 6)) or ((348 + 494)==(4397 -(424 + 53)))) then v217[v294-(3 -2)]={v92,v297[578 -((1757 -(957 + 512)) + 287)]};else v217[v294-(1 + 0)]={v36,v297[2 + 1]};end v91[ #v91 + 1]=v217;break;end end break;end end end v92[v94[750 -(543 + 116 + 89)]]=v29(v215,v216,v37);break;end if ((v214==1) or (4932==(2674 -(558 + 83)))) then local v280=0 + (1070 -(21 + 1049));while true do if ((v280==0) or (4492<=4083)) then v217={};v216=v10({},{__index=function(v323,v324)local v330=0 + 0;local v331;local v332;while true do if ((((5886 -(508 + 213)) -(1005 + 540))>=((15563 -11720) -(54 + 571))) and (v330==(2 -(1223 -(551 + 671))))) then while true do if ((((17064 -(230 + 77)) -(13187 -(393 + 925)))>=1691) and (v331==0)) then local v359=0;while true do if ((v359==0) or ((5120 -3510)<=266)) then v332=v217[v324];return v332[1311 -(719 + (1846 -(636 + 619)))][v332[755 -(307 + (2211 -(582 + 1183)))]];end end end end break;end if (((1247 -(487 + 760))==v330) or (2231>3172)) then v331=526 -(427 + 99);v332=nil;v330=1;end end end,__newindex=function(v325,v326,v327)local v333=1656 -(100 + 1556);local v334;while true do if (((944 + 895)>(1788 -(470 + 284))) and (v333==((1425 -(299 + 1126)) -0))) then v334=v217[v326];v334[(4267 -2396) -(1278 + 592)][v334[(5 + 0) -3]]=v327;break;end end end});v280=1 + 0;end if (((434 + 950 + 2615)>(127 + 1978)) and (v280==((1998 -(1771 + 225)) -1))) then v214=331 -(289 + 40);break;end end end end break;end if ((v213==(0 -0)) or ((5162 -(130 + 1642))>(4116 -((1422 -1120) + 66)))) then v214=0;v215=nil;v213=1277 -(1079 + 197);end end end elseif (((1753 + 2615)==(4937 -(334 + 235))) and (v95<=(32 + 7))) then if (((2770 + 897)>1164) and (v95<=(4 + 33))) then v92[v94[4 -2]]=v37[v94[7 -(1062 -(702 + 356))]];elseif (((1027 + 307)<=(604 + 3601)) and (v95>(90 -52))) then local v218=(0 -0) -0;local v219;local v220;while true do if (((18813 -14789)<=(5574 -(1149 + 355))) and (1==v218)) then while true do if (((659 + 1391)==2050) and (v219==0)) then v220=v94[1 + 1];v92[v220](v13(v92,v220 + ((704 -389) -(42 + 272)),v94[2 + 1]));break;end end break;end if (((2538 -(675 + 734))<=3691) and (v218==(743 -(291 + (1308 -(786 + 70)))))) then v219=0;v220=nil;v218=3 -2;end end else local v221=0 -0;local v222;local v223;local v224;local v225;local v226;while true do if ((3706>(197 + 49)) and (v221==(1 + 0))) then v224=nil;v225=nil;v221=1303 -(1125 + (789 -(168 + 445)));end if ((0==v221) or ((153 -92)>((1736 -(97 + 455)) + 589))) then v222=0 + 0;v223=nil;v221=228 -(18 + 209);end if ((v221==(110 -(37 + (1691 -(1495 + 125))))) or (((3129 + 1318) -(2764 -548))>(14930 -11152))) then v226=nil;while true do if ((v222==(1 + 1)) or ((5430 -(830 + 659))<(989 + 409))) then for v298=v223,v76 do local v299=(0 -0) + 0;local v300;while true do if ((v299==((0 + 0) -0)) or ((5495 -3051)>=4498)) then v300=830 -(270 + 560);while true do if ((v300==0) or (((4369 -(615 + 1252)) -(907 + 1008))>=(3650 -653))) then v226=v226 + (1132 -(675 + 456));v92[v298]=v224[v226];break;end end break;end end end break;end if ((v222==(3 -2)) or ((1898 -(1230 + 82))==(1 + (4750 -2506)))) then local v281=0 -0;while true do if (((0 -0)==v281) or ((2059 -1432)>(5980 -(719 + 1079)))) then v76=(v225 + v223) -(1 -0);v226=0;v281=1 + 0;end if ((v281==(2 -1)) or ((2148 + 1425)==(3233 + 1645))) then v222=3 -1;break;end end end if ((((3359 -1181) -(560 + 377 + 403))==(2799 -(171 + 1790))) and (v222==(590 -(323 + 267)))) then v223=v94[1 + 1];v224,v225=v89(v92[v223](v92[v223 + 1]));v222=1 -0;end end break;end end end elseif (((9094 -6662)>=(188 + 1758)) and (v95<=40)) then local v171=0 + 0;local v172;local v173;local v174;while true do if ((1040==(2228 -1188)) and ((0 + 0)==v171)) then v172=0;v173=nil;v171=1;end if ((2575>=373) and (v171==(1 + 0))) then v174=nil;while true do if ((2162<((907 -448) + 3834)) and (v172==(292 -((1234 -(541 + 534)) + 133)))) then local v260=525 -(317 + 208);while true do if ((((1199 -(23 + 151)) -686)<=((8721 -5862) + 711)) and ((0 -0)==v260)) then v173=v94[2];v174=v92[v173];v260=1;end if ((1807>((3862 -1283) -(216 + 1412))) and (v260==(1628 -(494 + 1133)))) then v172=2 -1;break;end end end if ((v172==(1 + 0)) or (((4748 -2024) + 1310)>4255)) then for v270=v173 + 1 + 0,v76 do v8(v174,v92[v270]);end break;end end break;end end elseif ((v95>(488 -(97 + 350))) or ((279 + 398)>(3608 -1471))) then local v227=0 + 0;local v228;local v229;local v230;local v231;local v232;local v233;while true do if (((3509 + 141)<=4797) and (v227==(164 -(153 + (20 -10))))) then v230=nil;v231=nil;v227=1 + 0 + 1;end if (((6446 -((1597 -(643 + 484)) + 1122))>666) and (v227==(7 -4))) then while true do if (((1625 -1004)<4188) and (v228==(1626 -(1247 + 377)))) then for v301=1 + 0,v230 do v92[v231 + v301]=v232[v301];end v233=v232[1 + 0];v228=4 -(1 -0);end if ((v228==((2036 -(578 + 402)) -(27 + 1028))) or (979==(3552 -2162))) then local v282=0;while true do if ((v282==(0 -0)) or ((7705 -4140)>=(5561 -(1181 + 634)))) then v231=v229 + (3 -1);v232={v92[v229](v92[v229 + (916 -(60 + 855))],v92[v231])};v282=1 + 0;end if ((v282==1) or (2419<(5529 -3955))) then v228=1 + 1;break;end end end if ((v228==(0 + 0)) or ((3317 -((1273 -(558 + 449)) + 734))==4915)) then local v283=1542 -(768 + (1647 -(241 + 632)));while true do if ((2500>(1166 + 274)) and ((1670 -(571 + 1098))==v283)) then v228=1 + 0 + 0;break;end if ((3719>(2286 -(385 + 40))) and (v283==(0 -0))) then v229=v94[4 -(1 + 1)];v230=v94[1160 -(440 + 716)];v283=1833 -(1038 + 794);end end end if ((4865>(12591 -9447)) and ((3 + (0 -0))==v228)) then if (v233 or ((4996 -(599 + 178))<(441 -261))) then local v310=0 -0;local v311;local v312;while true do if ((v310==(0 + 0)) or ((4630 -3207)<=(1671 -986))) then v311=859 -(629 + 230);v312=nil;v310=2 -1;end if ((1==v310) or (((1102 + 93) -592)>=4389)) then while true do if (((156 + 41)<(3569 -(1158 + 193 + 110))) and (v311==(0 + 0))) then v312=(0 + 0) -0;while true do if (((862 + 1105)==(2871 -(869 + 35))) and (v312==(0 -0))) then v92[v231]=v233;v75=v94[2 + 1];break;end end break;end end break;end end else v75=v75 + ((1200 -438) -((1587 -1074) + 248));end break;end end break;end if ((v227==(1759 -(222 + 1537))) or ((5236 -(279 + (448 -(93 + 65))))<=(3478 -1666))) then v228=0 + 0;v229=nil;v227=1;end if (((13040 -8645)>=3068) and (v227==2)) then v232=nil;v233=nil;v227=1 + 2;end end else local v234=532 -(76 + 456);local v235;while true do if ((v234==(1 + 0)) or ((6813 -4658)>=(3291 -(142 + 62)))) then for v261=v235,v76 do local v262=0 + 0;local v263;local v264;while true do if ((v262==(1 + (0 -0))) or (4236==(3030 -(783 + 521 + 567)))) then while true do if ((v263==(614 -(357 + 232 + 25))) or ((3279 + 199)==(2579 + 1520))) then v264=v90[v261-v235];v92[v261]=v264;break;end end break;end if ((((7251 -(178 + 204)) -4895)>=(381 + 1404)) and (v262==(1537 -(1441 + 96)))) then v263=0 + 0;v264=nil;v262=1 + 0;end end end break;end if ((v234==(428 -(69 + 359))) or (469>=(8643 -5734))) then local v245=0 + 0 + 0;while true do if ((v245==(0 + 0)) or (4694<=(178 + 3643))) then v235=v94[1324 -(533 + 789)];v76=(v235 + v93) -(143 -(114 + (74 -46)));v245=1230 -(1110 + (1928 -(854 + 955)));end if (((11283 -8905)>=(1302 -(6 + (155 -110)))) and (v245==(1 -0))) then v234=(335 -(304 + 29)) -1;break;end end end end end v75=v75 + (1915 -(231 + 1683));break;end if ((v100==0) or ((2400 -(570 + 981))>=(4264 -(1139 + 154)))) then local v109=0 -0;local v110;while true do if (((3357 + 1358)>(2342 + (3221 -950))) and (v109==(1834 -((1785 -(621 + 697)) + 1215 + 152)))) then v110=290 -(109 + 181);while true do if (((5429 -(1570 + 81))<(3730 + 529)) and (v110==(1807 -(39 + 1767)))) then v100=1;break;end if (((0 -0)==v110) or ((3340 -(2949 -1511))>(882 + 1592))) then v94=v85[v75];v95=v94[2 -1];v110=2 -1;end end break;end end end end break;end end break;end end end end A,B=v27(v11(v79));if  not A[1] then local v96=v35[4][v75] or "?";error("Script error at ["   .. v96   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)();end vv9());break;end if (2==v0) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v63=0;while true do if (v63==0) then v19=v1(v4(v30,1,1));return "";end end else local v64=0;local v65;while true do if (v64==0) then v65=v3(v1(v30,16));if v19 then local v76=v6(v65,v19);v19=nil;return v76;else return v65;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v66=1094 -(665 + 429);local v67;while true do if (v66==(0 -0)) then v67=(v31/(2^(v32-(1 + 0))))%((2 + 0)^(((v33-1) -(v32-(1 -0))) + ((1 + 0) -0)));return v67-(v67%(1 -0));end end else local v68=(2 + 0)^(v32-(1 -0));return (((v31%(v68 + v68))>=v68) and (1 -0)) or (0 + 0);end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (1583 -(1452 + 129)));v18=v18 + (1061 -(802 + 257));return (v40 * 256) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + (4 -(1 + 0)));v18=v18 + (498 -(97 + 397));return (v44 * ((53621138 -(263 + 40)) -36843619)) + (v43 * (46237 + 19299)) + (v42 * ((2033 -(777 + 39)) -(497 + 464))) + v41;end local function v24()local v45=v23();local v46=v23();return (( -(1 + (1 -0)) * v20(v46,32)) + (1720 -(575 + 1144))) * ((5 -3)^(v20(v46,21,31) -1023)) * ((((v20(v46,1973 -(1785 + (622 -435)),119 -(4 + 95)) * ((5 -(1208 -(824 + 381)))^(1510 -(1186 + 292)))) + v45)/((2 + 0)^(688 -((299 -213) + 550)))) + (3 -2));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v48={};for v61=1, #v47 do v48[v61]=v3(v2(v4(v47,v61,v61)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=887 -(763 + 124);local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (3==v49) then v56=nil;while true do local v69=0;while true do if (v69~=0) then else local v77=800 -(254 + 546);while true do if (v77==(1 + 0)) then v69=2 -1;break;end if (v77==0) then if (v50==(3 + 0)) then local v102=0;local v103;while true do if (v102~=0) then else v103=0;while true do if (v103==(0 + 0)) then local v110=0;while true do if (v110~=(2 -1)) then else v103=1 -0;break;end if (v110~=0) then else for v118=1 + 0,v23() do v52[v118-(1 + 0)]=v28();end for v120=1,v23() do v53[v120]=v23();end v110=3 -2;end end end if (v103~=1) then else return v54;end end break;end end end if (v50~=0) then else local v104=0 + 0;while true do if (v104==0) then v51={};v52={};v104=1;end if (v104==(2 -1)) then v53={};v50=1;break;end end end v77=1 -0;end end end if (v69~=(4 -3)) then else if (2==v50) then for v79=2 -1,v55 do local v80=0;local v81;local v82;while true do if (v80~=0) then else local v105=0 + 0;local v106;while true do if ((1030 -(763 + 267))==v105) then v106=0 -0;while true do if (v106==(146 -(62 + 84))) then v81=v21();v82=nil;v106=1 + 0;end if (v106~=(173 -(44 + 128))) then else v80=1911 -(1299 + 611);break;end end break;end end end if (v80~=(1 + 0)) then else if (v81==(1 + 0)) then v82=v21()~=(0 -0);elseif (v81==2) then v82=v24();elseif (v81==(1 + 2)) then v82=v25();end v56[v79]=v82;break;end end end v54[10 -7]=v21();for v83=757 -(53 + 703),v23() do local v84=0 + 0;local v85;local v86;while true do if (v84==(0 + 0)) then v85=0;v86=nil;v84=1;end if (v84==(1 + 0)) then while true do if ((0 -0)==v85) then v86=v21();if (v20(v86,1752 -(1588 + 163),1 + 0)~=(0 -0)) then else local v111=0 -0;local v112;local v113;local v114;local v115;local v116;local v117;while true do if (v111~=3) then else while true do if (v112~=1) then else v115=nil;v116=nil;v112=5 -3;end if (v112==(428 -(357 + 71))) then local v122=0 + 0;while true do if (v122~=(0 -0)) then else v113=1048 -(829 + 219);v114=nil;v122=3 -2;end if (v122~=(1 -0)) then else v112=582 -(430 + 151);break;end end end if ((1 + 1)==v112) then v117=nil;while true do if (v113~=(2 -1)) then else v116=nil;v117=nil;v113=2;end if (0==v113) then local v123=0 -0;local v124;while true do if (v123==(0 -0)) then v124=0 -0;while true do if (v124~=(1006 -(300 + 706))) then else v114=0 + 0;v115=nil;v124=1;end if (v124~=(924 -(76 + 847))) then else v113=1086 -(360 + 725);break;end end break;end end end if (v113~=(2 + 0)) then else while true do if (v114~=(0 -0)) then else local v223=0;local v224;while true do if (v223==(0 -0)) then v224=0;while true do if (v224~=(0 + 0)) then else v115=v20(v86,1846 -(573 + 1271),3 + 0);v116=v20(v86,3 + 1,6);v224=1 + 0;end if (v224~=(1 + 0)) then else v114=2 -1;break;end end break;end end end if (v114==(1 + 0)) then local v225=0 + 0;local v226;while true do if (v225~=(0 + 0)) then else v226=0;while true do if (v226~=(3 -2)) then else v114=2;break;end if (v226~=0) then else v117={v22(),v22(),nil,nil};if (v115==0) then local v315=0 -0;local v316;while true do if (v315~=0) then else v316=0 -0;while true do if (v316==(0 + 0)) then v117[3 + 0]=v22();v117[4 + 0]=v22();break;end end break;end end elseif (v115==(125 -(48 + 76))) then v117[3]=v23();elseif (v115==(5 -3)) then v117[3]=v23() -((4 -2)^(15 + 1));elseif (v115~=(3 + 0)) then else local v350=0 -0;local v351;local v352;while true do if (v350~=(1 + 0)) then else while true do if (0~=v351) then else v352=0;while true do if (v352~=(1550 -(1528 + 22))) then else v117[8 -5]=v23() -((2 -0)^(5 + 11));v117[14 -10]=v22();break;end end break;end end break;end if (v350==(0 -0)) then v351=1417 -(1111 + 306);v352=nil;v350=357 -(355 + 1);end end end v226=1 + 0;end end break;end end end if ((2 + 0)~=v114) then else local v227=731 -(339 + 392);while true do if (v227~=(1793 -(1090 + 702))) then else v114=3;break;end if (v227~=(0 + 0)) then else local v269=0 + 0;while true do if (v269~=(1449 -(149 + 1299))) then else v227=1;break;end if ((1516 -(69 + 1447))==v269) then if (v20(v116,748 -(135 + 612),3 -2)~=1) then else v117[1 + 1]=v56[v117[5 -3]];end if (v20(v116,1661 -(1658 + 1),4 -2)==1) then v117[3 -0]=v56[v117[640 -(287 + 350)]];end v269=3 -2;end end end end end if (v114~=(6 -3)) then else if (v20(v116,2 + 1,898 -(668 + 227))==(1 -0)) then v117[9 -5]=v56[v117[1859 -(636 + 1219)]];end v51[v83]=v117;break;end end break;end end break;end end break;end if (v111==(4 -2)) then v116=nil;v117=nil;v111=1 + 2;end if (v111~=(995 -(17 + 977))) then else v114=nil;v115=nil;v111=3 -1;end if (v111==0) then v112=0 -0;v113=nil;v111=1;end end end break;end end break;end end end v50=3;end if (v50==(1200 -(132 + 1067))) then v54={v51,v52,nil,v53};v55=v23();v56={};v50=2;end break;end end end break;end if (v49~=(0 -0)) then else v50=0 -0;v51=nil;v49=1;end if (v49~=2) then else v54=nil;v55=nil;v49=3;end if (v49~=(1 + 0)) then else v52=nil;v53=nil;v49=1 + 1;end end end local function v29(v35,v36,v37)local v57=0;local v58;local v59;local v60;while true do if (v57==1) then v60=v35[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==1) then v73={...};v74=v12("#",...) -1;v70=2;end if (v70==0) then v71=1;v72= -1;v70=1;end if (3==v70) then A,B=v27(v11(v75));if  not A[1] then local v87=v35[4][v71] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v70==2) then v75=nil;function v75()local v88=v58;local v89=Const;local v90=v59;local v91=v60;local v92=v27;local v93={};local v94={};local v95={};for v99=0,v74 do if (((273 + 139 + 4563)>=377) and (v99>=v91)) then v93[v99-v91]=v73[v99 + 1];else v95[v99]=v73[v99 + 1 + 0];end end local v96=(v74-v91) + 1;local v97;local v98;while true do local v100=0;local v101;while true do if (((0 -0)==v100) or ((11086 -7933)==(2795 + 29))) then v101=0 + 0;while true do if ((v101==(1672 -(1123 + 549))) or ((5221 -2479)<1114)) then v97=v88[v71];v98=v97[1];v101=1 + 0;end if ((v101==((4 -2) -1)) or ((117 + 3123)<(2864 -1757))) then if ((v98<=(20 + 0)) or ((3694 -(275 + 306))<(2616 + 489))) then if (((10794 -7048)>(3291 -(431 + 932))) and (v98<=(19 -10))) then if (((1714 -(204 + 376))<(1631 + 2475)) and (v98<=(1402 -(183 + 1215)))) then if (((518 + (2060 -(503 + 1329)))<=(3707 -(258 + 710))) and (v98<=(1051 -((425 -(204 + 135)) + 964)))) then if (((1922 -(77 + 180))==(2258 -((1153 -(370 + 246)) + 56))) and (v98==(0 -0))) then local v125=430 -(423 + 7);local v126;while true do if (((4393 -((2013 -1444) + 293))>=(1836 -(135 + 38))) and (v125==0)) then v126=v97[6 -4];v95[v126]=v95[v126](v95[v126 + 1]);break;end end elseif ((((5656 + 2581) -(4360 + 807))<3484) and  not v95[v97[2 + 0]]) then v71=v71 + (1837 -(165 + 1577 + 94));else v71=v97[1707 -(281 + 1423)];end elseif ((v98<=(8 -6)) or ((1095 + (10941 -7919))==(3508 -(87 + 1554)))) then local v127=0 -0;local v128;local v129;while true do if (((4696 -1521)<=(15026 -10494)) and (v127==(131 -((69 -46) + 108)))) then local v230=0;while true do if ((0==v230) or ((3914 -(226 + 335))<(476 + (3604 -(802 + 379))))) then v128=1671 -(48 + 1623);v129=nil;v230=2 -1;end if (((6459 -2879)>=1549) and (1==v230)) then v127=1 + 0;break;end end end if (((2615 -(1473 + 426))<=1726) and ((1697 -(525 + 1171))==v127)) then while true do if ((((4254 -(392 + 654)) -(12 + 71))>77) and ((0 -0)==v128)) then v129=v97[2 + (313 -(209 + 104))];v95[v129](v13(v95,v129 + 1,v97[510 -(348 + 159)]));break;end end break;end end elseif ((v98>3) or ((5817 -4149)>(4368 -(773 + 1007)))) then local v176=0 + 0;local v177;local v178;local v179;while true do if (((3 -2)==v176) or (3778>=4068)) then v179=nil;while true do if (((1793 + 3 + 57)<(856 + (3695 -(308 + 157)))) and (v177==(0 -0))) then local v288=0 + 0;local v289;while true do if ((v288==0) or ((1461 -(30 + 225))>(11941 -6978))) then v289=0;while true do if ((v289==1) or ((4616 -(249 + 134))<=(2913 -(2938 -(1630 + 30))))) then v177=1947 -(1527 + 419);break;end if ((4504>1270) and (v289==(465 -(369 + 93 + 3)))) then local v340=0 + 0;while true do if ((v340==((545 + 1101) -(113 + 1532))) or (2761==((4550 -(57 + 399)) -1550))) then v289=1 + 0;break;end if (((0 + 0)==v340) or (((3679 -1606) -1525)>(6675 -1963))) then v178=v97[2];v179=v95[v178];v340=1;end end end end break;end end end if ((v177==(1 -0)) or ((4521 -(636 + 582))<=((2327 -(544 + 1335)) + 2656 + 64))) then for v299=v178 + 1,v72 do v8(v179,v95[v299]);end break;end end break;end if (((2711 -(300 + 36))==(2763 -(13 + 375))) and (v176==0)) then local v260=105 -(64 + 41);while true do if ((515<=(5503 -(45 + 527))) and (v260==(1 + 0 + 0))) then v176=4 -3;break;end if (((4566 -(198 + 293))>(9825 -6868)) and (v260==(0 -0))) then v177=0;v178=nil;v260=1;end end end end else v95[v97[1 + 1]]();end elseif ((v98<=((2468 -(1288 + 80)) -(136 + (1916 -958)))) or ((4138 -(244 + 429))>=(3831 + 1148))) then if ((v98>(940 -(604 + 331))) or (((1684 -(784 + 297)) + 166)>=(2190 -1387))) then local v130=0 + 0;local v131;local v132;local v133;local v134;while true do if ((v130==(1875 -(768 + 476 + 630))) or ((5590 -3743)>=(5990 -3978))) then v133=nil;v134=nil;v130=1597 -(1444 + 151);end if ((4648>(1236 + 3095)) and (v130==(5 -3))) then while true do if ((v131==2) or ((4819 -1309)>=((2529 + 2256) -(214 + (1828 -(200 + 971)))))) then if ((v133>(0 -0)) or ((4755 -3314)<=(1967 -930))) then if ((v134<=v95[v132 + (1 -0)]) or (258>=(4658 -(223 + 270)))) then local v308=0 -0;while true do if ((v308==(109 -(68 + 41))) or ((6517 -(610 + 108 + 1195))<(1298 -(262 + 557)))) then v71=v97[1 + 2];v95[v132 + 3]=v134;break;end end end elseif ((v134>=v95[v132 + 1 + 0]) or ((4228 -2560)>1927)) then local v309=0;local v310;local v311;while true do if ((3299>(4058 -(1202 + 733))) and ((2 -1)==v309)) then while true do if ((v310==(426 -(393 + 33))) or (2929<(6378 -3653))) then v311=305 -((45 -22) + 281 + 1);while true do if (((6566 -2779)>1143) and (v311==(225 -(103 + 122)))) then v71=v97[3];v95[v132 + (3 -0)]=v134;break;end end break;end end break;end if ((v309==(0 -0)) or (4410<=2244)) then v310=1480 -(1371 + 109);v311=nil;v309=1 -0;end end end break;end if ((2474>=(2831 -(219 + 368))) and (v131==0)) then local v270=(567 -(533 + 34)) -0;while true do if (((0 -0)==v270) or ((10411 -8278)<(1688 -(938 + 681)))) then v132=v97[2 + 0];v133=v95[v132 + (633 -((1554 -(1214 + 173)) + 464))];v270=3 -2;end if (((6881 -2454)>(739 + 2886)) and (v270==1)) then v131=847 -(37 + 809);break;end end end if ((3269==(4498 -(1084 + 145))) and (v131==1)) then local v271=0;while true do if (((1995 -(1513 + 482))==v271) or ((355 + 171)>(5034 -(1028 + 228)))) then v134=v95[v132] + v133;v95[v132]=v134;v271=(1 + 0) -0;end if (((861 + 2950)==3811) and (v271==((132 -(53 + 78)) -(0 -0)))) then v131=2;break;end end end end break;end if ((v130==(0 + 0)) or ((2912 -(479 + 607))<=(1692 -(464 + 570)))) then v131=0 -0;v132=nil;v130=652 -((1559 -(1178 + 306)) + 576);end end else v95[v97[9 -7]]=v97[2 + 1];end elseif (((3787 -(699 + 85))>(2041 + 843)) and (v98<=7)) then v95[v97[928 -(458 + 468)]]=v37[v97[13 -10]];elseif (((2760 -(249 + 299 + 76))<=(14430 -10564)) and (v98>(2 + (10 -4)))) then local v180=1020 -(513 + 507);local v181;local v182;while true do if ((v180==(975 -(663 + 312))) or ((327 + 778)<=(1451 -(34 + 1145)))) then v181=0;v182=nil;v180=1;end if (((2608 -(787 + 697))<4179) and (v180==(1886 -(1674 + 211)))) then while true do if (((5999 -(1547 + (749 -(478 + 24))))<=((8990 + 2469) -7143)) and (0==v181)) then v182=v97[2];do return v95[v182](v13(v95,v182 + ((1 -0) -0),v72));end break;end end break;end end else local v183=0 -0;local v184;local v185;while true do if ((v183==(0 + 0)) or ((5409 -(178 + 1185))<=(3437 -(404 + 1125)))) then local v261=0 -0;while true do if (((736 + 679 + 1912)>806) and (v261==((1619 -(784 + 835)) + 0 + 0))) then v184=v97[7 -5];v185={};v261=(1427 -1006) -(368 + 52);end if (((1 + 0)==v261) or (4008>=(7106 -2942))) then v183=1180 -((2045 -(664 + 886)) + 684);break;end end end if ((2617>=((2428 -(832 + 1032)) + 84)) and (v183==(92 -(4 + 87)))) then for v272=(2 + 1) -2, #v94 do local v273=0 + 0;local v274;local v275;while true do if (((107 + 548)<=3107) and (v273==1)) then while true do if ((v274==(0 -(1422 -(618 + 804)))) or (2390<=485)) then v275=v94[v272];for v328=0 -0, #v275 do local v329=0 -0;local v330;local v331;local v332;local v333;while true do if ((v329==(1230 -(132 + 30 + 1067))) or ((1574 -593)==(10000 -5969))) then v332=nil;v333=nil;v329=2;end if (((1882 + (8646 -6198))>(2163 -(1475 + (671 -444)))) and (v329==(2 + 0))) then while true do if ((v330==1) or ((639 + (1737 -(355 + 834)))>(524 + 2660))) then v333=v331[2];if (((v332==v95) and (v333>=v184)) or ((4566 -(1107 + 452))==919)) then local v356=1071 -(244 + 827);while true do if ((((0 -0) + 0)==v356) or ((1026 -(2021 -1337))>(3681 -(414 + 285)))) then v185[v333]=v332[v333];v331[1958 -(1686 + 269 + 2)]=v185;break;end end end break;end if (((218 -(717 -(227 + 415)))<(726 + 380)) and (v330==(0 -0))) then local v354=882 -(331 + (1755 -(74 + 1130)));while true do if ((3967<(7759 -2897)) and (v354==0)) then v331=v275[v328];v332=v331[1];v354=1870 -(1816 + 53);end if (((1666 -((98 -52) + 509))<(6516 -(564 + 1288))) and ((1 + 0)==v354)) then v330=1;break;end end end end break;end if ((v329==(0 -0)) or (((1246 -846) + 337)>=(6625 -3927))) then local v347=0 -0;while true do if (((7405 -3431)>(8233 -5055)) and (1==v347)) then v329=(1970 -(713 + 1254)) -(4 -2);break;end if ((v347==(0 + 0)) or ((8133 -(3575 + 77))<(2126 -(28 + (1971 -1126))))) then v330=343 -(20 + 323);v331=nil;v347=1;end end end end end break;end end break;end if ((v273==0) or ((3994 -2517)>(7974 -5626))) then v274=1500 -(1453 + 47);v275=nil;v273=1 -0;end end end break;end end end elseif ((((5218 -(321 + 1339)) -(546 + 145 + 617 + 227))<=(335 + 3945)) and (v98<=(345 -(236 + 95)))) then if (((10469 -7525)<=(5817 -(219 + 616))) and (v98<=(11 + 0))) then if ((v98>(2 + 8)) or ((9753 -7069)>=(8356 -5129))) then v95[v97[2 + 0]]=v95[v97[3 + 0]][v95[v97[4]]];else v95[v97[1560 -(1302 + 256)]]={};end elseif ((((465 -279) + 4421)==(12700 -8093)) and (v98<=12)) then v95[v97[2 + (0 -0)]]=v95[v97[3 + 0]][v97[3 + 1]];elseif ((v98==13) or ((903 -(204 + 600))==(3786 -((2106 -(139 + 1228)) + (431 -(123 + 128)))))) then v95[v97[429 -(310 + 117)]]=v95[v97[1952 -(1284 + 665)]];else v95[v97[2 + 0]]=v97[1 + 2]~=0;end elseif ((v98<=(394 -(347 + 30))) or (4671>(6263 -(728 + 768)))) then if ((1728<(3273 -(380 + 838))) and (v98<=(64 -49))) then do return;end elseif ((v98==(9 + 7)) or ((2780 -(92 + 268))>(4517 -(31 + 21)))) then if ((v95[v97[1076 -(28 + 1046)]]==v97[4]) or ((2045 -725)>1436)) then v71=v71 + (2 -(1 + 0));else v71=v97[8 -5];end else local v188=0 -0;local v189;local v190;local v191;while true do if ((v188==(1 + 0)) or ((1525 -(71 + 188))>=(6830 -4246))) then v191=nil;while true do if ((v189==(965 -(361 + 604))) or ((2256 -1267)<809)) then local v290=0;while true do if ((1784<=(3990 -(365 + 46))) and (v290==(134 -(85 + 49)))) then v190=1777 -(1643 + 105 + 29);v191=nil;v290=1;end if ((v290==1) or ((101 + 152)>=(5643 -3228))) then v189=37 -(1 + 4 + 31);break;end end end if (((3494 -(1128 + 792))<(5627 -(668 + 612))) and (v189==(1 + 0))) then while true do if (((2318 -(171 + 1189))<(2244 + (1649 -(785 + 348)))) and (v190==0)) then v191=v97[2];v95[v191]=v95[v191](v13(v95,v191 + 1,v72));break;end end break;end end break;end if ((((54553 -38066) -11507)>(4060 + (1310 -(584 + 63)))) and (v188==(0 + 0))) then v189=0;v190=nil;v188=1 + 0;end end end elseif ((v98<=(6 + 12)) or ((1641 + 2730)<=(2092 + 136))) then local v140=0 -0;local v141;while true do if (((5555 -(537 + 453))==(4093 + 472)) and ((738 -(336 + 402))==v140)) then v141=v97[2 + 0];v95[v141](v13(v95,v141 + (375 -(86 + 288)),v72));break;end end elseif ((v98>(68 -49)) or (2179>(6628 -2461))) then local v192=0;local v193;local v194;local v195;local v196;while true do if (((6512 -3864)>((1123 + 47) -596)) and (v192==(1087 -(472 + 613)))) then while true do if (((1255 + 1577)<4102) and (v193==(1256 -(1020 + 236)))) then v194=v97[1208 -(1122 + 84)];v195={v95[v194](v13(v95,v194 + (3 -2),v72))};v193=1 + 0;end if ((v193==(1649 -(542 + 1106))) or (3037==(8814 -5871))) then v196=0 -0;for v301=v194,v97[7 -(1119 -(771 + 345))] do local v302=0;local v303;while true do if ((v302==(0 -0)) or ((1584 -(683 + 454))>(1846 -875))) then v303=0 -(0 + 0);while true do if (((3207 -((6470 -4589) + 71))>=117) and ((0 -(320 -(214 + 106)))==v303)) then v196=v196 + (719 -(253 + 465)) + 0;v95[v301]=v195[v196];break;end end break;end end end break;end end break;end if ((3331==(5410 -2079)) and (v192==(0 + 0 + (0 -0)))) then v193=0 + 0;v194=nil;v192=1;end if ((v192==(1 -0)) or ((7285 -(4174 -1276))<(707 + 2456))) then v195=nil;v196=nil;v192=2 + 0;end end else v95[v97[8 -6]]=v36[v97[6 -3]];end elseif ((v98<=31) or ((3685 -(1142 + 289))>(11080 -6802))) then if ((v98<=25) or ((2604 -1952)>=(11262 -6547))) then if ((v98<=(78 -56)) or ((5214 -(76 + 594))<=(7484 -5402))) then if ((v98==(667 -(136 + 510))) or ((1416 + 2899)<(365 + 1879))) then local v142=1240 -(199 + 1041);local v143;local v144;local v145;local v146;local v147;local v148;while true do if (((1617 + (12052 -9408))>(52 -27)) and (v142==(561 -(491 + 68)))) then local v231=0 + 0 + 0;while true do if (((3914 -2425)<=(2776 -(362 + 352))) and (v231==(0 -0))) then v147=nil;v148=nil;v231=1;end if ((2255<(4492 -1911)) and ((1 + 0)==v231)) then v142=7 -4;break;end end end if ((2880>=(2160 -(47 + 1126))) and (v142==((45 -(29 + 13)) -2))) then local v232=0 + 0;while true do if (((0 + 0)==v232) or ((3125 -(22 + 594))==(4796 -(540 + 327 + 317)))) then v145=nil;v146=nil;v232=(456 -(350 + 102)) -3;end if (((1 + 0)==v232) or ((1 + 10)>=3807)) then v142=5 -3;break;end end end if (((8 -5)==v142) or ((2900 -(114 + 167))>=(2124 + 2874))) then while true do if ((v143==2) or ((4996 -2098)<(774 + 61))) then local v276=0 + (0 -0);local v277;while true do if ((v276==(0 -0)) or ((1199 -783)>=(18868 -14694))) then v277=0 -0;while true do if (((3915 -(3406 -2324))==(1875 + 958)) and (v277==(1 + 0 + 0))) then v143=3;break;end if ((404<3772) and (v277==((42 + 386) -((195 -123) + 356)))) then for v334=1 + 0,v145 do v95[v146 + v334]=v147[v334];end v148=v147[488 -(159 + 328)];v277=1 + 0;end end break;end end end if (((4661 -(1921 + 1619))<((12547 -7343) -(3357 -(275 + 1102)))) and (v143==(1746 -(622 + 1121)))) then if (v148 or ((1877 -(815 + 96))<=(227 + (1952 -(432 + 1048))))) then local v291=0;local v292;while true do if ((v291==0) or (3119<(3802 -2177))) then v292=1516 -(283 + 1233);while true do if ((v292==(0 -0)) or ((4814 -(58 + 148 + 194))<((5019 -(136 + 1615)) + 480))) then v95[v146]=v148;v71=v97[(1 + 2) -(864 -(372 + 492))];break;end end break;end end else v71=v71 + 1 + 0 + 0;end break;end if (((12289 -9167)>=(1257 + 1224)) and (v143==1)) then local v278=0 + (1703 -(715 + 988));local v279;while true do if (((5927 -3076)<=(127 + 3287)) and (v278==(1584 -(548 + (2558 -(606 + 916)))))) then v279=0 -0;while true do if ((v279==(3 -2)) or ((13804 -(9114 + 565))<=(334 + 60))) then v143=2;break;end if (((0 -0)==v279) or (4324==4009)) then v146=v144 + (362 -(347 + 13));v147={v95[v144](v95[v144 + 1 + 0],v95[v146])};v279=1385 -(902 + 482);end end break;end end end if (((594 + 1678)<=2841) and (v143==(0 -0))) then local v280=0 + 0;while true do if ((v280==0) or (((512 -340) + 233)==(3775 -(53 + 49)))) then v144=v97[3 -1];v145=v97[414 -(356 + 54)];v280=1 + 0;end if (((12568 -(20254 -11364))>=(2584 + 190)) and (v280==(2 -1))) then v143=1 + 0;break;end end end end break;end if (((8447 -5799)<(10508 -7024)) and (v142==0)) then local v233=0 -(0 -0);while true do if (((3883 -2820)==(2409 -(65 + 1281))) and (((5 -3) -1)==v233)) then v142=527 -(206 + (701 -381));break;end if (((82 + 1613)<((361 -129) + 1913)) and (v233==((1006 -(461 + 406)) -(101 + 38)))) then v143=1974 -(1658 + 316);v144=nil;v233=2 -1;end end end end else local v149=0;local v150;local v151;local v152;while true do if (((3320 + 622)<(9325 -4978)) and (v149==(1 -0))) then v152={};v151=v10({},{__index=function(v242,v243)local v262=651 -(253 + 398);local v263;local v264;while true do if (((5364 -(183 + 456))>((63 -28) + 217)) and (v262==(1 -0))) then while true do if (((1759 + 121 + 544)==(2343 + 81)) and (v263==0)) then local v320=1836 -(1702 + 134);local v321;while true do if (((9259 -5172)>(603 -(1005 -633))) and (v320==(0 + 0))) then v321=1641 -(1143 + 498);while true do if ((v321==0) or (844>4523)) then v264=v152[v243];return v264[1 + 0][v264[1086 -(33 + 1051)]];end end break;end end end end break;end if ((3810>(154 + 252)) and (v262==(49 -((1396 -(781 + 578)) + (35 -23))))) then v263=0 -(797 -(292 + 505));v264=nil;v262=1 + 0;end end end,__newindex=function(v244,v245,v246)local v265=0 + 0;local v266;local v267;while true do if (((7792 -5371)>=(2554 -(786 + 476))) and (v265==0)) then v266=(1894 -(287 + 1607)) + 0;v267=nil;v265=1332 -(909 + 422);end if ((1201==(1762 -(10 + 551))) and (v265==(2 -1))) then while true do if (((274 + 1594)<=(5771 -(364 + 1108))) and (v266==(0 -0))) then v267=v152[v245];v267[972 -(267 + 704)][v267[1993 -(1307 + 684)]]=v246;break;end end break;end end end});v149=2 + 0;end if ((v149==(0 -0)) or ((1810 + 325)==(3560 + 563))) then local v234=773 -(58 + 715);while true do if (((935 + 1681)>(2103 -941)) and (v234==(1 + (0 -0)))) then v149=1;break;end if ((2480>(99 + 1676)) and (v234==(0 + 0))) then v150=v90[v97[(455 -(86 + 359)) -7]];v151=nil;v234=1;end end end if (((1 + 1 + 0)==v149) or ((336 + 120)>=(4124 -((36 -13) + 36)))) then for v247=1,v97[8 -4] do local v248=0 -0;local v249;local v250;local v251;while true do if ((v248==0) or ((6767 -2297)<(3607 -(171 + 89)))) then v249=0 + 0;v250=nil;v248=1 + 0;end if (((1 + 0)==v248) or ((1585 -731)==(5699 -((1661 -(200 + 937)) + 337)))) then v251=nil;while true do if ((v249==1) or ((1179 -(1033 -317))>(6226 -3566))) then while true do if (((1806 + 511)>=(59 -39)) and (v250==(0 -0))) then local v336=0 -0;local v337;while true do if ((v336==0) or (54==(6588 -3660))) then v337=0 + 0;while true do if (((589 -(353 + 23))<=(3708 -1655)) and (v337==(1 + 0))) then v250=404 -(114 + 289);break;end if (((2283 -(353 + 724))<=(754 + 3617)) and (v337==(852 -(317 + 535)))) then local v355=(0 -0) + 0;while true do if ((v355==(1661 -(333 + 1328))) or ((4523 -(175 + 504))<3721)) then v71=v71 + (2 -1);v251=v88[v71];v355=1967 -(168 + 1798);end if (((1385 + 2671)>=3089) and (v355==(1 -0))) then v337=374 -(239 + 134);break;end end end end break;end end end if ((v250==(1 + 0 + 0)) or (4807<(1959 -(704 + 277 + 666)))) then if (((3323 -(1886 + 589))<(5495 -((451 -299) + (1354 -813)))) and (v251[3 -2]==(11 + 2))) then v152[v247-(1 + 0)]={v95,v251[2 + (486 -(251 + 234))]};else v152[v247-((3 -2) -0)]={v36,v251[3]};end v94[ #v94 + 1]=v152;break;end end break;end if ((v249==0) or ((7041 -3227)<2155)) then v250=0;v251=nil;v249=1 + 0;end end break;end end end v95[v97[1498 -(67 + 36 + 1210 + 183)]]=v29(v150,v151,v37);break;end end end elseif ((v98<=23) or ((5878 -(245 + 869))<((4172 -(12 + 118)) -(36 + 39 + 78)))) then v37[v97[1157 -(162 + 992)]]=v95[v97[1 + 1]];elseif ((v98==(1113 -(82 + 1007))) or ((14570 -10180)>(5008 -(24 + 224)))) then local v198=602 -(181 + 421);local v199;local v200;local v201;while true do if ((v198==(1 + 0)) or (4303<(1229 -(243 + (389 -225))))) then v201=nil;while true do if ((v199==(0 + 0)) or (491>(3073 + 882))) then v200=v97[371 -(326 + 43)];v201=v95[v97[6 -3]];v199=1 + 0;end if ((v199==(1463 -((3125 -(631 + 1058)) + 26))) or ((4444 -(1858 + 31))==3150)) then v95[v200 + ((1 + 0) -0)]=v201;v95[v200]=v201[v97[4]];break;end end break;end if (((328 + 226)<(4904 -961)) and (v198==(1713 -(169 + 1544)))) then v199=0 + 0;v200=nil;v198=1 -0;end end else v95[v97[2 + 0]]= #v95[v97[9 -6]];end elseif ((v98<=((1585 -(529 + 1023)) -5)) or ((4821 -(151 + 1108))>=((2730 -1504) + 2930))) then if ((v98<=(103 -77)) or (2277>4332)) then v71=v97[5 -2];elseif ((((10577 + 7201) -13243)>=(36 + 194)) and (v98>27)) then local v203=0 -0;local v204;local v205;local v206;local v207;local v208;while true do if (((390 + 317)==(301 + 406)) and (v203==(3 -1))) then v208=nil;while true do if ((v204==0) or (1772==(1223 -(244 + 99 + 164)))) then v205=v97[2 + 0];v206,v207=v92(v95[v205](v95[v205 + (788 -(320 + 467))]));v204=4 -3;end if (((2660 -(372 + 381))<2053) and (v204==(2 -1))) then local v295=0 + 0;while true do if ((v295==(0 -0)) or ((7449 -3854)>=(3129 + 1016))) then v72=(v207 + v205) -1;v208=0;v295=3 -2;end if (((3238 -(103 + 373))<(6018 -(1693 + 234))) and (v295==(2 -1))) then v204=7 -5;break;end end end if ((((5971 -3526) -1732)<(8395 -(4437 -(129 + 372)))) and (v204==(2 + 0))) then for v304=v205,v72 do local v305=0;while true do if ((3436==(9999 -6563)) and (v305==(0 + 0 + 0))) then v208=v208 + (397 -(206 + (1769 -(172 + 1407))));v95[v304]=v206[v208];break;end end end break;end end break;end if (((431 + 195)<=(1573 + 1211)) and (v203==(1311 -(236 + 1075)))) then v204=0 -0;v205=nil;v203=1 + 0;end if ((v203==(1 -(0 + 0))) or ((6460 -(1449 + 98))<=(8115 -3442))) then v206=nil;v207=nil;v203=7 -5;end end else local v209=0 + 0;local v210;while true do if ((((6038 -(285 + 1212)) -(1333 + 340))<4279) and (v209==(0 -0))) then v210=v97[1843 -(667 + 1174)];v72=(v210 + v96) -1;v209=1 + 0;end if (((1 -0)==v209) or (((2190 -(154 + 947)) -651)>(2950 -(635 + (1215 -439))))) then for v281=v210,v72 do local v282=0;local v283;local v284;local v285;while true do if ((v282==(4 -3)) or (4898==(1355 + 519))) then v285=nil;while true do if (((3774 -(633 + 278))<=(6280 -(1736 + 158))) and (v283==(0 -0))) then v284=0 + 0;v285=nil;v283=1 + 0;end if ((v283==(1 + 0)) or ((1424 -(80 + 1047))>(53 + 3040))) then while true do if (((2398 -(576 + 985))<(5611 -(292 + 1501))) and (v284==(0 + 0))) then v285=v93[v281-v210];v95[v281]=v285;break;end end break;end end break;end if ((4198>(684 -258)) and (v282==0)) then v283=0 -0;v284=nil;v282=(61 + 142) -(198 + 4);end end end break;end end end elseif ((900==900) and (v98<=(86 -(55 + 2)))) then local v154=0 -0;local v155;while true do if (((7499 -4328)<=((6393 -(188 + 14)) -2723)) and (v154==(501 -(244 + 257)))) then v155=v97[9 -7];v95[v155]=v95[v155](v13(v95,v155 + 1,v97[1 + 2]));break;end end elseif ((v98>30) or ((3927 + 301)<(553 + 1849))) then v95[v97[608 -(33 + 573)]]=v29(v90[v97[3]],nil,v37);else local v212=0;local v213;local v214;local v215;local v216;local v217;while true do if (((3533 + 370)==3903) and (v212==(0 + (0 -0)))) then v213=0 + 0;v214=nil;v212=2 -1;end if ((v212==(9 -7)) or (((1241 -(1024 + 215)) + (1391 -1098))>=(5038 -(604 + 792)))) then v217=nil;while true do if (((3297 -(807 + 1232))==(6033 -4775)) and (v213==(1719 -(1514 + 204)))) then local v296=0 -0;while true do if ((((7590 -5853) + 3073)>(3771 -(236 + 767))) and (v296==0)) then v72=(v216 + v214) -1;v217=0 + 0;v296=1 + 0;end if (((621 -(11 + 20 + 384))==206) and (v296==(1 + 0))) then v213=1304 -(65 + 1237);break;end end end if ((v213==(2 -(126 -(49 + 77)))) or ((803 -(46 + 246))>=(965 + 712))) then for v306=v214,v72 do local v307=0 -(71 -(25 + 46));while true do if ((v307==(0 + 0)) or ((2073 + 388)<=783)) then v217=v217 + (1 -0);v95[v306]=v215[v217];break;end end end break;end if (((2066 -760)<=(4627 + 340)) and (v213==(0 -0))) then local v297=0;while true do if ((v297==(0 -0)) or ((11273 -7687)<((3251 -1247) + 437))) then v214=v97[7 -5];v215,v216=v92(v95[v214](v13(v95,v214 + 1 + 0,v97[7 -4])));v297=1725 -(504 + 1220);end if (((2510 -778)==1732) and ((1 -0)==v297)) then v213=1899 -(904 + 994);break;end end end end break;end if ((4563>=(693 + 134)) and (v212==1)) then v215=nil;v216=nil;v212=1 + 1 + 0;end end end elseif ((v98<=36) or (3760>=3823)) then if ((v98<=(25 + 8)) or (4434<=(103 + 819 + 1 + 26))) then if ((v98>(375 -(163 + 180))) or ((2481 + 1836)==(4805 -2923))) then local v156=0 + 0;local v157;while true do if ((v156==(0 -0)) or ((2055 + (4771 -2966))<=(26 + 12))) then v157=v97[2];v95[v157](v95[v157 + 1]);break;end end else local v158=1751 -((440 -259) + 1570);local v159;local v160;local v161;while true do if (((3560 + (2779 -(1948 + 9)))<=(18248 -13288)) and (v158==(0 -0))) then local v237=0 + 0;while true do if (((5403 -(427 + 499))>4064) and (v237==(1 -0))) then v158=1 + 0;break;end if (((2011 -933)<=(5447 -(3715 -(365 + 30)))) and ((79 -(62 + 17))==v237)) then v159=v97[5 -3];v160={v95[v159](v95[v159 + 1 + 0 + 0])};v237=4 -3;end end end if ((v158==(1 + 0)) or ((1426 -928)==(4943 -(63 + 12)))) then v161=0 -0;for v252=v159,v97[5 -1] do local v253=860 -(504 + (1697 -(37 + 1304)));local v254;while true do if (((7450 -2629)>=(2753 -(1617 + 216))) and (v253==(0 -0))) then v254=0;while true do if ((v254==((487 + 409) -(81 + 815))) or ((13204 -8655)<=465)) then v161=v161 + 1;v95[v252]=v160[v161];break;end end break;end end end break;end end end elseif ((721<=(764 + 249)) and (v98<=(21 + 13))) then local v162=0 -(0 + 0);local v163;local v164;local v165;local v166;while true do if (((3701 -1102)<=(5026 -(9 + 241))) and (v162==((1478 -(345 + 1128)) -(9 -6)))) then while true do if ((v163==((343 -(244 + 99)) -0)) or (4429==4311)) then local v286=0 -0;local v287;while true do if ((v286==0) or (3808<(2757 -1091))) then v287=1050 -(6 + 1044);while true do if (((5433 -1791)<4783) and (v287==(0 + 0))) then local v325=0;while true do if ((v325==(1 + 0)) or (3430<=(2881 -(104 + 1883)))) then v287=1 + 0;break;end if ((v325==(0 + 0)) or ((1734 -(51 + 280 + 125))==(712 -386))) then v164=v97[(1 + 2) -1];v165=v95[v164];v325=(878 + 97) -(309 + 665);end end end if ((v287==(1 + 0)) or ((6390 -(1290 + 575))<3479)) then v163=2 -1;break;end end break;end end end if ((v163==1) or ((3253 -(103 + 2 + 78))>=(4737 -(795 + 399)))) then v166=v95[v164 + 1 + 1];if (((6732 -4424)>(2968 -(998 + 334))) and (v166>0)) then if ((953>=((1101 + 238) -517)) and (v165>v95[v164 + (2 -1)])) then v71=v97[11 -8];else v95[v164 + (7 -4)]=v165;end elseif ((v165<v95[v164 + 1 + 0]) or ((329 -239)>((1121 -388) + 2463))) then v71=v97[3 -(0 + 0)];else v95[v164 + 3]=v165;end break;end end break;end if ((820<=(1102 + 143)) and (v162==(0 + 0))) then v163=0;v164=nil;v162=1145 -(666 + 478);end if ((4793>(262 -124)) and ((1 -0)==v162)) then local v238=0 + 0;while true do if ((4602==(2208 + 2394)) and (v238==((0 -0) -(491 -(232 + 259))))) then v165=nil;v166=nil;v238=1;end if ((v238==(2 -1)) or (((15038 -10395) -(306 + 699))>(13845 -(10767 -(332 + 1158))))) then v162=7 -5;break;end end end end elseif (((524 -(11 + 125))<(6501 -(1193 + 737))) and (v98==35)) then if ((v97[1 + 1]==v95[v97[4]]) or (4862<=(125 + 1135))) then v71=v71 + 1 + 0 + 0;else v71=v97[156 -(43 + 110)];end elseif (((3525 -(41 + (139 -89)))>(4962 -(28 + 21 + 1939))) and v95[v97[1351 -(682 + 667)]]) then v71=v71 + (761 -(403 + 357));else v71=v97[3 + 0];end elseif ((v98<=39) or ((5226 -(1335 + 236))<(530 + 20 + 68))) then if (((27 + 1916)>946) and (v98<=(27 + 10))) then local v167=217 -(98 + 119);local v168;local v169;local v170;local v171;while true do if ((244>(565 -441)) and (v167==(2 + 0))) then for v255=v168,v72 do local v256=1966 -(1336 + 630);local v257;local v258;while true do if ((v256==(527 -(255 + (698 -427)))) or ((15342 -11970)==(2549 -(400 + 354)))) then while true do if ((v257==(0 -0)) or (3194==(2841 -1448))) then v258=(0 -0) -0;while true do if (((986 + 580)<(4824 -(395 + 957))) and (v258==(0 -0))) then v171=v171 + (1373 -(357 + 1015));v95[v255]=v169[v171];break;end end break;end end break;end if (((0 -0)==v256) or ((13089 -9576)<1392)) then v257=1373 -(402 + 971);v258=nil;v256=612 -(584 + 27);end end end break;end if (((3758 -(65 + (1828 -(51 + 1754))))>=(5215 -(64 + 1592))) and (v167==1)) then local v239=0 + 0;while true do if ((v239==(1 + 0 + 0)) or (((3577 -1629) -(707 + 409))>=4604)) then v167=3 -1;break;end if (((16604 -12361)>(8910 -5037)) and (v239==(1696 -(739 + (2229 -1272))))) then v72=(v170 + v168) -(2 -1);v171=473 -(338 + 58 + 77);v239=1 -0;end end end if ((v167==(0 -0)) or ((2177 -(352 + 1359))>(1574 + 1854))) then v168=v97[2];v169,v170=v92(v95[v168](v13(v95,v168 + (1633 -(205 + 1427)),v72)));v167=2 -1;end end elseif (((6558 -(1214 + 353))>(6916 -3836)) and (v98>(27 + 11))) then for v240=v97[2],v97[3] do v95[v240]=nil;end else v95[v97[1213 -(123 + 1088)]][v97[617 -(346 + 268)]]=v95[v97[2 + 2]];end elseif (((3106 + 422)<(8555 -4965)) and (v98<=(276 -(36 + 200)))) then local v172=0;local v173;local v174;local v175;while true do if ((v172==(0 + 0)) or (((5813 -3313) -(614 + 162))==(4218 -(757 + 94)))) then v173=0 + 0;v174=nil;v172=1;end if ((v172==1) or (2505>=(2038 + 1874))) then v175=nil;while true do if (((3196 -(544 + 365))==(1914 + 373)) and (v173==1)) then while true do if (((211 + 913)>(22 + (13 -6))) and (v174==(1831 -(1259 + (2096 -(631 + 893)))))) then v175=v97[1 + (654 -(92 + 561))];do return v13(v95,v175,v72);end break;end end break;end if (((0 -0)==v173) or ((1807 + 620)>(7606 -3099))) then v174=1629 -(209 + 1420);v175=nil;v173=1 -0;end end break;end end elseif ((v98>(6 + 35)) or (((264 -192) + 1761)<839)) then local v219=0 + 0;local v220;local v221;while true do if ((v219==1) or (((8476 + 2747) -(9605 -(784 + 663)))<(2313 -(122 + 216)))) then while true do if ((((2645 + 685) -(165 + 1927))==(3326 -2088)) and (v220==(310 -(71 + 239)))) then v221=v97[1 + 1];v95[v221]=v95[v221]();break;end end break;end if (((0 -(0 + 0))==v219) or ((4144 -1908)==(3406 -(470 + 1489)))) then local v268=0 -0;while true do if ((v268==(2 -1)) or (449>(114 + 2185))) then v219=1;break;end if ((19==((661 + 463) -(256 + 849))) and (v268==0)) then v220=1806 -(1279 + 527);v221=nil;v268=1234 -(1137 + (182 -86));end end end end else v95[v97[2 + 0]][v97[3 -0]]=v97[2 + 2];end v71=v71 + (1 -0);break;end end break;end end end end v70=3;end end end;end if (v57==0) then v58=v35[1];v59=v35[2];v57=1;end end end return v29(v28(),{},v17)();end vv9());break;end end end

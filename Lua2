do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v70=0;local v71;while true do if (v70==0) then v71=v6(v62,v19);v19=nil;v70=1;end if (1==v70) then return v71;end end else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=(v31/((1109 -((2355 -(53 + 1316)) + 121))^(v32-(1 + 0))))%(2^(((v33-(1962 -(934 + 1027))) -(v32-((1796 -(1742 + 53)) + 0))) + 1 + 0));return v63-(v63%1);else local v64=(541 -(432 + 107))^(v32-(1 + 0));return (((v31%(v64 + v64))>=v64) and (1 + (1003 -(332 + 671)))) or 0;end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + (1843 -(1396 + 445)));v18=v18 + 1 + 1;return (v40 * (2098 -(292 + 1550))) + v39;end local function v23()local v41,v42,v43,v44=v2(v16,v18,v18 + 3 + 0);v18=v18 + (1063 -(714 + 345));return (v44 * (30601228 -13824012)) + (v43 * (66647 -(954 + 157))) + (v42 * (1019 -763)) + v41;end local function v24()local v45=v23();local v46=v23();return (( -(1178 -(519 + 657)) * v20(v46,1271 -(699 + 540))) + 1) * ((2 + 0)^(v20(v46,21,874 -(685 + 158)) -(2939 -(1817 + 99)))) * ((((v20(v46,245 -(230 + 11 + 3),1734 -(1444 + (1092 -(557 + 265)))) * (2^(544 -((2027 -(574 + 1009)) + (1658 -(1391 + 199)))))) + v45)/((5 -(1535 -(1470 + 62)))^(96 -44))) + (294 -(249 + 12 + 32)));end local function v25(v34)local v47;if  not v34 then v34=v23();if (v34==(0 + 0)) then return "";end end v47=v4(v16,v18,(v18 + v34) -(1764 -(1438 + 325)));v18=v18 + v34;local v48={};for v59=1, #v47 do v48[v59]=v3(v2(v4(v47,v59,v59)));end return v7(v48);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;while true do local v61=0;while true do if (v61~=(1424 -(921 + 502))) then else if (v49~=(140 -(65 + 75))) then else local v87=1074 -(63 + 1011);while true do if (v87==(5 -3)) then v49=1 + 0;break;end if (v87==0) then v50={};v51={};v87=1;end if (v87~=(1 + 0)) then else v52={};v53={v50,v51,nil,v52};v87=2;end end end break;end if (v61==(0 -0)) then if (v49==(1266 -(905 + 360))) then v54=v23();v55={};for v89=1,v54 do local v90=0;local v91;local v92;local v93;while true do if (v90==0) then local v104=0;while true do if (v104~=0) then else v91=0;v92=nil;v104=176 -(152 + 23);end if (v104==(1993 -(909 + 1083))) then v90=1;break;end end end if (v90~=1) then else v93=nil;while true do if (v91==(1 -0)) then if (v92==(1783 -(770 + 1012))) then v93=v21()~=0;elseif (v92==2) then v93=v24();elseif (v92==(3 -0)) then v93=v25();end v55[v89]=v93;break;end if (v91==(0 + 0)) then local v106=0;local v107;while true do if (v106==(1473 -(854 + 619))) then v107=0;while true do if (v107~=(232 -(49 + 182))) then else v91=1 + 0;break;end if (v107~=(0 + 0)) then else local v179=0 + 0;while true do if (v179==(0 + 0)) then v92=v21();v93=nil;v179=1324 -(252 + 1071);end if (v179==(1 + 0)) then v107=1 -0;break;end end end end break;end end end end break;end end end v53[2 + 1]=v21();v49=2 + 0;end if (v49~=(2 + 0)) then else for v94=1170 -(22 + 1147),v23() do local v95=812 -(197 + 615);local v96;local v97;while true do if (v95==1) then while true do if (v96~=0) then else v97=v21();if (v20(v97,1,1)~=0) then else local v108=977 -(912 + 65);local v109;local v110;local v111;local v112;while true do if (v108~=(2 -1)) then else v111=nil;v112=nil;v108=2;end if ((0 + 0)~=v108) then else v109=0;v110=nil;v108=1 + 0;end if (2==v108) then while true do if (v109~=2) then else local v217=0;while true do if (v217==0) then if (v20(v111,1,1)==1) then v112[1 + 1]=v55[v112[148 -(64 + 82)]];end if (v20(v111,2,7 -5)~=1) then else v112[322 -(119 + 200)]=v55[v112[3]];end v217=1 -0;end if (v217~=(1 + 0)) then else v109=1155 -(899 + 253);break;end end end if (v109==(0 -0)) then local v218=0;while true do if (v218==(1 + 0)) then v109=1;break;end if (v218==(0 + 0)) then v110=v20(v97,2,6 -3);v111=v20(v97,5 -1,1213 -(928 + 279));v218=2 -1;end end end if (v109~=3) then else if (v20(v111,7 -4,1 + 2)~=(1 -0)) then else v112[1701 -(1229 + 468)]=v55[v112[278 -(145 + 129)]];end v50[v94]=v112;break;end if (v109==(1 + 0)) then local v220=0;while true do if ((0 -0)==v220) then v112={v22(),v22(),nil,nil};if (v110==(0 + 0)) then local v254=0 + 0;local v255;while true do if (v254~=0) then else v255=0;while true do if (v255==0) then v112[3]=v22();v112[4 + 0]=v22();break;end end break;end end elseif (v110==(3 -2)) then v112[3]=v23();elseif (v110==(76 -(15 + 59))) then v112[9 -6]=v23() -((9 -7)^16);elseif (v110==3) then local v311=0;local v312;local v313;local v314;while true do if (v311==(0 + 0)) then v312=0;v313=nil;v311=1;end if (v311~=(2 -1)) then else v314=nil;while true do if (v312~=(3 -2)) then else while true do if (v313~=0) then else v314=0 -0;while true do if (v314==(0 -0)) then v112[3]=v23() -((3 -1)^16);v112[554 -(441 + 109)]=v22();break;end end break;end end break;end if (v312~=0) then else local v327=0 -0;while true do if (v327==(0 -0)) then v313=0;v314=nil;v327=293 -(33 + 259);end if (1==v327) then v312=1 -0;break;end end end end break;end end end v220=1 + 0;end if (v220~=1) then else v109=1383 -(1115 + 266);break;end end end end break;end end end break;end end break;end if (v95==(0 + 0)) then v96=0;v97=nil;v95=1;end end end for v98=1,v23() do v51[v98-(1 -0)]=v28();end for v100=470 -(333 + 136),v23() do v52[v100]=v23();end return v53;end v61=1;end end end end local function v29(v35,v36,v37)local v56=v35[1];local v57=v35[2];local v58=v35[3];return function(...)local v65=1;local v66= -1;local v67={...};local v68=v12("#",...) -1;local function v69()local v72=v56;local v73=Const;local v74=v57;local v75=v58;local v76=v27;local v77={};local v78={};local v79={};for v85=0 -(0 + 0),v68 do if ((2205<(5032 -(422 + (938 -(298 + 605))))) and (v85>=v75)) then v77[v85-v75]=v67[v85 + (1818 -(312 + (1635 -(49 + 81))))];else v79[v85]=v67[v85 + (1487 -(1375 + 111))];end end local v80=(v68-v75) + (317 -(90 + 226));local v81;local v82;while true do local v86=0 + 0;while true do if (((5904 -(649 + 545))>=((870 + 160) -414)) and ((1 + 0)==v86)) then if ((1764<(214 + 3578)) and (v82<=(9 + 11))) then if ((v82<=(28 -(5 + 14))) or (((6295 -2038) -(761 + 1097))>4008)) then if (((186 + 133)<(1348 + 697)) and (v82<=(3 + 1))) then if ((324<=(9786 -5741)) and (v82<=(1 -0))) then if ((v82>(516 -(83 + 433))) or (4492<(109 + 1478))) then if (((361 + (1419 -(447 + 63)))<=(4301 -(72 + 671))) and (v79[v81[2]]==v81[4 + 0])) then v65=v65 + (2 -1);else v65=v81[3];end else local v113=0;local v114;local v115;local v116;local v117;local v118;while true do if ((v113==0) or (2478>3097)) then v114=0;v115=nil;v113=1 + 0;end if ((v113==1) or ((14460 -10160)<(730 + 2254))) then v116=nil;v117=nil;v113=(1924 -(1467 + 454)) -1;end if ((v113==(1826 -(1321 + 353 + 150))) or (794>=(2870 -1298))) then v118=nil;while true do if ((v114==(1 + 0)) or ((3729 -2461)>=(2014 -(11 + 129)))) then local v234=0 + (0 -0);while true do if (((290 + 779)<=(2659 + 322)) and ((1602 -(1336 + 265))==v234)) then v114=1077 -(71 + 1004);break;end if ((v234==(1687 -(149 + 1538))) or ((15805 -11540)<(796 + 135))) then v117=nil;v118=nil;v234=1 + 0;end end end if ((225<=(1271 + 1501)) and (v114==2)) then while true do if (((1405 + 460)==(2264 -(51 + 348))) and (v115==(0 + 0))) then local v261=0 + 0;while true do if ((v261==(324 -(16 + 307))) or (3754==(3070 -(4 + 10)))) then v115=1058 -(220 + 837);break;end if ((v261==(0 + (653 -(311 + 342)))) or (((1694 -789) + 1589)<(639 -381))) then v116=v81[(4 -2) + 0];v117=v79[v116];v261=4 -3;end end end if ((v115==(3 -2)) or ((1811 + 547)==(3129 -(143 + 1556)))) then v118=v79[v116 + 2 + 0];if ((v118>0) or ((495 + 2273)<(2663 -(398 + 24)))) then if ((1900==(749 + 1151)) and (v117>v79[v116 + (195 -(10 + 184))])) then v65=v81[3];else v79[v116 + (6 -3)]=v117;end elseif ((1742>=(759 + 94)) and (v117<v79[v116 + (2 -1)])) then v65=v81[4 -1];else v79[v116 + (438 -(359 + 76))]=v117;end break;end end break;end if (((830 -(226 + 19))<=2281) and (v114==(0 + 0))) then local v235=0;while true do if ((v235==(1745 -(290 + 1454))) or ((4417 -(50 + 652))<=(1198 -947))) then v114=2 -1;break;end if ((v235==(1399 -(208 + 1191))) or (1933>=(5622 -(698 + 869)))) then v115=(491 -(85 + 406)) + 0;v116=nil;v235=741 -(298 + 442);end end end end break;end end end elseif ((v82<=2) or ((4457 -(1308 + 303))<=(5718 -3168))) then v79[v81[407 -(389 + 16)]]=v29(v74[v81[896 -(546 + 347)]],nil,v37);elseif ((v82==(1 + 2)) or ((364 + 30 + 96)>(1652 + 1529))) then v79[v81[1 + (195 -(134 + 60))]]=v36[v81[3]];elseif (v79[v81[773 -(678 + 93)]] or ((2155 -(39 + 526))>=((341 + 3215) -(224 + 330)))) then v65=v65 + (2 -1);else v65=v81[2 + 1];end elseif ((v82<=6) or ((1675 -733)==((1905 + 9167) -8001))) then if ((v82==(21 -16)) or ((1317 + 1393)==(553 + 90))) then local v120=0 + 0;local v121;local v122;local v123;while true do if ((772<=(2278 -(57 + 82))) and (v120==(0 + 0))) then local v221=0 -0;while true do if ((v221==(2 -1)) or ((93 + (368 -196))>=(13169 -(27673 -19289)))) then v120=1;break;end if (((3942 -(226 + 995))<(792 + 2190)) and (v221==(0 + 0))) then v121=v81[2];v122=v79[v121];v221=327 -(44 + 282);end end end if ((1==v120) or (165>=(4590 -(8 + 11)))) then v123=v81[1200 -(998 + 199)];for v230=1 -(0 -0),v123 do v122[v230]=v79[v121 + v230];end break;end end else v79[v81[2 + 0]]=v81[3]~=(1118 -(926 + 192));end elseif ((v82<=(12 -5)) or (735>=(56 + (3578 -2759)))) then local v125=0;local v126;local v127;while true do if ((v125==(0 -0)) or ((2439 -(213 + 898))==(4199 -2388))) then v126=0 + 0;v127=nil;v125=1030 -(780 + 249);end if ((v125==(2 -1)) or ((1387 + 411)>=((9077 -5047) -(173 + 1255)))) then while true do if ((2521<=(12214 -7510)) and (v126==0)) then v127=v81[1271 -(312 + 957)];v79[v127]=v79[v127](v13(v79,v127 + (1 -0),v81[3 + 0]));break;end end break;end end elseif ((v82==8) or ((19227 -15063)==3726)) then do return;end else v79[v81[2]]={};end elseif ((v82<=(13 + 1)) or ((3493 + 1350)<(1587 -748))) then if ((v82<=((28 + 1) -18)) or ((442 + 2803 + 6)<=(338 + 1344))) then if (((5162 -1136)>=2514) and (v82>10)) then local v128=0 + (1337 -(1184 + 153));local v129;local v130;local v131;while true do if (((4152 -(284 + 81))<=(2895 + 1128)) and (v128==(1 + 1 + 0))) then if ((v130>(478 -((1443 -(373 + 715)) + 123))) or ((10060 -5973)<(500 + 499))) then if ((v131<=v79[v129 + ((1823 -(118 + 73)) -(447 + 1184))]) or (4204<=((6753 -(315 + 330)) -4521))) then local v243=0 + 0;while true do if ((v243==(0 -0)) or (1483>=(5857 -(4832 -2466)))) then v65=v81[4 -1];v79[v129 + (1561 -(408 + 1150))]=v131;break;end end end elseif ((1937<=(3821 -(305 + 76))) and (v131>=v79[v129 + 1 + 0])) then local v244=(83 -(14 + 69)) -0;local v245;while true do if ((v244==((0 -0) -0)) or (979<=((2880 -(230 + 8)) -((2194 -(93 + 890)) + 536)))) then v245=0;while true do if (((882 + 2716)>(896 + (6904 -4666))) and ((0 + 0)==v245)) then v65=v81[2 + 1 + 0];v79[v129 + (6 -3)]=v131;break;end end break;end end end break;end if (((14241 -9308)==(1303 + 3630)) and (v128==(279 -((549 -(281 + 105)) + 116)))) then v129=v81[2 + 0];v130=v79[v129 + 1 + 1];v128=1 -0;end if ((v128==((2 -1) + 0)) or (((989 -(482 + 67)) + 4527)<=(1003 -(376 + 2)))) then local v222=0;while true do if ((v222==1) or ((6271 -(517 + 825))==(1103 + 766))) then v128=2 + 0;break;end if ((v222==(0 + 0)) or ((4366 + (729 -276))<1166)) then v131=v79[v129] + v130;v79[v129]=v131;v222=1;end end end end else local v132=(1130 -(492 + 638)) -0;local v133;local v134;while true do if (((1155 + 2898)>3262) and (v132==(1 -0))) then while true do if (((863 + (3773 -2377))<(3730 + 402)) and (v133==((483 -(446 + 37)) -0))) then v134=v81[261 -(13 + 246)];do return v13(v79,v134,v66);end break;end end break;end if ((v132==0) or ((2501 -(1802 + 17))>(8009 -4575))) then v133=0 -0;v134=nil;v132=1 + 0;end end end elseif ((4598>=(326 + 678)) and (v82<=(20 -8))) then local v135=0;local v136;local v137;while true do if ((v135==(2 -1)) or ((1601 + 406)==(8717 -6472))) then v79[v136 + 1 + 0]=v137;v79[v136]=v137[v81[1682 -((3023 -(1624 + 81)) + 360)]];break;end if ((v135==(1441 -(463 + 978))) or ((6587 -3360)==2723)) then local v225=(1848 -1477) -(72 + 218 + 81);while true do if (((1396 -((1670 -1070) + 173 + 135))==(2170 -(1535 + 147))) and (v225==(350 -(308 + 42)))) then v136=v81[1622 -(609 + 1011)];v137=v79[v81[3]];v225=1 + 0 + 0;end if ((v225==(1 + 0)) or (2210>=4654)) then v135=1 + 0;break;end end end end elseif ((1113<=2677) and (v82>(35 -22))) then local v182=0 -0;local v183;local v184;local v185;while true do if (((2971 -1036)==(1657 + 278)) and ((1 + 0)==v182)) then v185=nil;while true do if (((11307 -6942)==((6371 -(54 + 33)) -(660 + 1259))) and (v183==0)) then v184=0 + 0 + 0;v185=nil;v183=2 -1;end if ((v183==1) or ((2259 -(1322 + 90))<(117 + 52))) then while true do if (((407 + 208)<(4298 -2388)) and (v184==(0 -0))) then v185=v81[666 -(269 + 178 + 217)];v79[v185](v13(v79,v185 + 1,v81[3]));break;end end break;end end break;end if (((5430 -(654 + 713))>(6099 -3155)) and (v182==(0 + 0))) then v183=0 -0;v184=nil;v182=1 + 0;end end else local v186=372 -(21 + 36 + 315);local v187;local v188;local v189;local v190;while true do if ((v186==0) or ((221 + 31)==(972 -(298 + 237)))) then v187=0 -(657 -(391 + 266));v188=nil;v186=1169 -(1151 + 17);end if (((3874 -(10 + 33))>=1822) and (((952 -(154 + 796)) + 0)==v186)) then while true do if (((1 + 1)==v187) or (2834==(6640 -4867))) then for v262=1 + 0,v81[12 -(2 + 6)] do local v263=0 -0;local v264;while true do if (((366 + 839)<((1214 -(368 + 361)) + 2372)) and (v263==((1575 -(1401 + 173)) -0))) then if (((6110 -(32 + 1197))==(1632 + 3249)) and (v264[1]==(69 -44))) then v190[v262-(3 -2)]={v79,v264[(3257 -(1341 + 25)) -(1855 + 33)]};else v190[v262-(1152 -(1094 + 57))]={v36,v264[3]};end v78[ #v78 + (132 -(122 + 9))]=v190;break;end if ((v263==(779 -(426 + 353))) or ((3445 -1528)==(4937 -2089))) then v65=v65 + 1;v264=v72[v65];v263=2 -1;end end end v79[v81[2 -0]]=v29(v188,v189,v37);break;end if ((v187==(0 -0)) or ((1354 -((306 -230) + 670))==(3141 -2104))) then local v257=1754 -(1733 + 21);while true do if ((v257==(1345 -(612 + 733))) or ((1045 -(178 + 385))>=(7773 -3394))) then v188=v74[v81[1461 -(737 + 721)]];v189=nil;v257=1;end if ((2691<4101) and (v257==1)) then v187=4 -3;break;end end end if (((8107 -5974)==((3027 -(729 + 1245)) + 1080)) and (v187==(1507 -((2936 -(605 + 957)) + 132)))) then local v258=0 -0;while true do if ((3262==((19947 -14904) -1781)) and (((208 + 92) -(92 + 207))==v258)) then v187=4 -2;break;end if (((325 + 1394)==(1243 + 476)) and (v258==(0 -0))) then v190={};v189=v10({},{__index=function(v289,v290)local v303=0 -0;local v304;local v305;while true do if ((v303==1) or (4461>=(1186 + 3805))) then while true do if (((0 + 0)==v304) or (((3151 -1166) -(183 + 705 + 491))>(12486 -8567))) then v305=v190[v290];return v305[3 -2][v305[9 -7]];end end break;end if ((v303==(204 -(63 + 141))) or ((121 + 1781)>=((2537 + 1873) -(735 + 241)))) then v304=0;v305=nil;v303=1 + 0;end end end,__newindex=function(v291,v292,v293)local v306=0 -0;local v307;local v308;while true do if (((541 + (914 -467))==(717 + 271)) and (v306==(1 -0))) then while true do if (((146 + 2 + 4)<=(2205 + 1657)) and (v307==(0 -(0 + 0)))) then v308=v190[v292];v308[1 + 0 + 0][v308[2]]=v293;break;end end break;end if (((4397 -1397)==3000) and (v306==(1741 -(1245 + 496)))) then v307=0 + 0;v308=nil;v306=(519 -(30 + 19)) -(378 + 91);end end end});v258=2 -1;end end end end break;end if (((84 -30)<=(2124 -1186)) and ((2 -1)==v186)) then v189=nil;v190=nil;v186=2;end end end elseif (((978 + 1207)>=(2827 -(194 + 623))) and (v82<=(13 + 4))) then if (((235 + 3193)<=((16684 -(34 + 175)) -11860)) and (v82<=15)) then local v138=0 + 0;local v139;local v140;while true do if ((v138==1) or ((6855 -3055)<=(2444 -(843 + 1120)))) then for v232=v139 + (3 -2),v66 do v8(v140,v79[v232]);end break;end if (((5089 -(1298 + 116))<(2995 + 737)) and ((0 -0)==v138)) then v139=v81[2 + 0];v140=v79[v139];v138=1 -0;end end elseif ((v82==16) or (((10707 -7579) -((569 -(161 + 32)) + 128))>4397)) then v79[v81[2 + 0]]=v79[v81[661 -(302 + 356)]][v81[(960 -(124 + 821)) -11]];else v79[v81[3 -1]]();end elseif ((v82<=18) or ((127 + 2076)==(1797 + 1995))) then local v141=1632 -(366 + 1266);local v142;while true do if (((7878 -5831)<((5790 + 1770) -4724)) and (v141==0)) then v142=v81[1 + 1];v79[v142](v79[v142 + (1 -0)]);break;end end elseif (((5692 -(435 + 547))==(3019 + 1691)) and (v82==(1826 -(335 + 1472)))) then if (((8174 -(5788 -(854 + 667)))>(282 -(317 -207))) and (v81[1088 -(934 + 152)]==v79[v81[4]])) then v65=v65 + 1 + 0;else v65=v81[3];end elseif (((2800 -(5 + 20))<=(1173 + 2199)) and  not v79[v81[992 -(463 + 527)]]) then v65=v65 + (1 -0);else v65=v81[3];end elseif ((3262<=(5187 -(762 + 288))) and (v82<=30)) then if (((2390 + 1109 + 458)>(3861 -(964 + 940))) and (v82<=(95 -70))) then if ((v82<=(5 + 17)) or ((3379 -(356 + 1407))<(918 + 571))) then if ((v82>(1858 -(1747 + 2 + 88))) or ((3098 + (1714 -(290 + 1228)))<=(4849 -3358))) then local v143=1476 -(1351 + 125);local v144;local v145;local v146;local v147;local v148;while true do if ((549<=(4898 -(956 + 628))) and (v143==((851 -(785 + 65)) + 0 + 0))) then local v226=0 + 0;while true do if ((v226==(1891 -(288 + 1603))) or ((1450 -(759 + 418))>=(2419 -(578 + 535)))) then v146=nil;v147=nil;v226=1 + 0;end if ((v226==(2 -1)) or (4641<=2830)) then v143=1326 -(1307 + 17);break;end end end if (((133 + 369)==(1967 -(641 + 824))) and (v143==(958 -(576 + 382)))) then v144=0 + 0 + 0;v145=nil;v143=1048 -(582 + 465);end if (((5028 -(1102 + 479 + 207))>=(2957 -1190)) and (v143==2)) then v148=nil;while true do if ((3947>=2096) and (v144==((1260 -(757 + 501)) + 0))) then for v246=v145,v66 do local v247=0 + 0;while true do if (((11153 -(8014 -(383 + 286)))>(520 + 146)) and (v247==0)) then v148=v148 + 1 + 0;v79[v246]=v146[v148];break;end end end break;end if (((3511 + 864)>=(7689 -5379)) and (v144==(3 -(593 -(114 + 477))))) then local v238=0;while true do if (((4692 -(149 + 661))<((66923 -53422) -8857)) and (v238==(0 + 0))) then local v265=0;while true do if (((4 -(1636 -(196 + 1437)))==v265) or ((9193 -6553)>=(18200 -(14984 -(616 + 726))))) then v238=1251 -(384 + 866);break;end if ((v265==((1555 -(1125 + 430)) -0)) or ((3263 -(401 + 713))<(2528 -1528))) then v66=(v147 + v145) -(1832 -(460 + 1371));v148=0;v265=(303 + 217) -(448 + 58 + 13);end end end if (((1884 -(647 + 1236))==v238) or (241>=1178)) then v144=1 + 1;break;end end end if (((1143 + 1006)>713) and (v144==(0 + 0 + 0))) then local v239=0;local v240;while true do if (((4724 -(1055 + 236))<(6474 -(964 + (2859 -2054)))) and (v239==(0 + 0))) then v240=0 -0;while true do if (((4863 -(344 + 186))>=((862 + 365) -(378 + 339))) and (v240==(0 + 0 + 0))) then v145=v81[5 -3];v146,v147=v76(v79[v145](v13(v79,v145 + 1,v66)));v240=1661 -(1187 + 473);end if ((v240==(1 + 0 + 0)) or ((2465 -1161)==(6830 -(574 + 1387)))) then v144=877 -(340 + 536);break;end end break;end end end end break;end end else local v149=1134 -(187 + 3 + 944);local v150;local v151;local v152;local v153;while true do if (((18204 -13399)>((3200 -1491) -(51 + 493))) and (v149==(55 -(15 + 39)))) then v152=nil;v153=nil;v149=214 -(82 + 130);end if ((4419>(661 + 3276)) and (v149==(0 -0))) then v150=0 -(990 -(447 + 543));v151=nil;v149=1;end if ((v149==(2 -0)) or ((1416 -997)<((251 + 224) -166))) then while true do if ((v150==(1 + 0)) or ((3413 -1599)>(280 + 2440))) then v153=1106 -(714 + 392);for v248=v151,v81[1 + 3] do local v249=0;local v250;local v251;while true do if ((v249==(0 + 0)) or ((909 -(135 + 567))>=3300)) then v250=1456 -((1492 -(154 + 124)) + 242);v251=nil;v249=3 -2;end if (((2880 + 587)>(5988 -3355)) and (v249==(1 + 0))) then while true do if ((v250==((0 -0) + 0)) or (171>(5528 -(68 + 1806)))) then v251=0 -0;while true do if ((((2125 -(219 + 579)) + 1130)==(1807 + 650)) and (v251==0)) then v153=v153 + 1;v79[v248]=v152[v153];break;end end break;end end break;end end end break;end if (((5228 -(1056 + 749))==(660 + 2763)) and (v150==(0 -0))) then v151=v81[236 -((1482 -(122 + 1236)) + 110)];v152={v79[v151](v79[v151 + 1 + 0])};v150=905 -(464 + 440);end end break;end end end elseif ((v82<=(95 -72)) or ((6222 -((2334 -1214) + 530))<=(1516 + 2568))) then v79[v81[3 -1]]=v79[v81[619 -(213 + 403)]][v79[v81[3 + 1]]];elseif ((v82==((525 -(449 + 71)) + 19)) or ((388 -131)>(17859 -13356))) then local v192=0;local v193;local v194;while true do if (((450 + 136)<=(3521 -(15 + 17))) and (v192==0)) then v193=0;v194=nil;v192=1029 -(663 + 365);end if ((1102==(150 + 952)) and (v192==((2 -1) -0))) then while true do if ((v193==(1 -0)) or (917>(1553 + 745))) then for v266=v194,v66 do local v267=0 -0;local v268;local v269;while true do if (((2460 + 241)<(8698 -(4060 + 171))) and (v267==0)) then local v294=1763 -(1238 + 525);while true do if ((v294==1) or (155==(928 -(124 + 257)))) then v267=1;break;end if ((0==v294) or ((427 + 83)==(5172 -2596))) then v268=0 + 0;v269=nil;v294=(1 + 1) -1;end end end if (((3284 -(118 + 11))==(4529 -(1129 + 245))) and (v267==1)) then while true do if (((1276 -(241 + 288))>=(1142 -513)) and (v268==(0 -0))) then v269=v77[v266-v194];v79[v266]=v269;break;end end break;end end end break;end if (((7 + (1 -0))<(920 -((1785 -1279) + 100))) and (v193==(0 + 0))) then local v259=0;while true do if (((1252 -(518 + 734))==v259) or ((2004 -((2341 -(208 + 1429)) + 1139))>=(724 + 920))) then v194=v81[2];v66=(v194 + v80) -(1518 -(1339 + 178));v259=1 + (63 -(46 + 17));end if (((1266 + 3539)==(2557 + 2248)) and (v259==(3 -(744 -(149 + 593))))) then v193=1957 -(1524 + 432);break;end end end end break;end end else v79[v81[4 -2]]=v79[v81[8 -5]];end elseif (((14 + 107)<(360 + 1551)) and (v82<=(27 + 0))) then if (((614 + 401)>=(26 + 41)) and (v82>26)) then local v155=1636 -(1195 + 441);local v156;local v157;local v158;local v159;local v160;local v161;local v162;while true do if ((v155==(1 + 0)) or ((2106 -(1269 + 78))<=(1646 -(1253 + 169)))) then v158=nil;v159=nil;v155=2;end if (((1708 + 1556)>=1093) and (v155==(0 + 0))) then v156=630 -(34 + 82 + (1750 -(518 + 718)));v157=nil;v155=1 -0;end if (((357 + 279)<4812) and (v155==((25 -15) -7))) then v162=nil;while true do if ((2==v156) or ((493 -(173 + 199))>=1336)) then v161=nil;v162=nil;v156=3;end if ((744==(1189 -(42 + 403))) and (v156==(1 + 0))) then local v241=449 -(15 + 99 + 335);while true do if (((4970 -2468)>=2078) and (v241==((0 -0) -0))) then v159=nil;v160=nil;v241=470 -(87 + 382);end if ((v241==(1 + 0 + (188 -(104 + 84)))) or ((3170 + 83)<=(988 + (3543 -(1133 + 583))))) then v156=1 + 1;break;end end end if ((2293<=((70226 -51289) -14391)) and (v156==(1736 -(1113 + (1674 -1054))))) then while true do if ((v157==(3 + 0)) or (2206<=(3645 -(58 + 1937)))) then if (v162 or ((110 + 11)>3218)) then local v283=0 -0;while true do if ((v283==(0 + (484 -(367 + 117)))) or ((2742 -1148)>(3111 -(104 + 37)))) then v79[v160]=v162;v65=v81[3 + 0];break;end end else v65=v65 + (3 -(1118 -(1095 + 21)));end break;end if ((v157==(5 -3)) or ((5031 -((640 -475) + 554))<=(24 + 2081))) then local v270=0;while true do if ((v270==(0 -0)) or ((3701 -(81 + (147 -100)))==(2312 -(238 + 1394)))) then local v295=0;while true do if (((4570 -(183 + 474))==((5417 -(304 + 374)) -((1470 -898) + 254))) and (v295==(1 + 0))) then v270=3 -2;break;end if (((13020 -9317)<4943) and (v295==(0 + 0))) then for v322=762 -(681 + 80),v159 do v79[v160 + v322]=v161[v322];end v162=v161[1];v295=1;end end end if ((v270==1) or (916>=(1325 + 1844))) then v157=3;break;end end end if (((683 + 1220)>=(505 -(169 + 128))) and (v157==(1 + 0))) then local v271=0;local v272;while true do if (((585 + 1061)>(44 + 60)) and ((325 -(159 + 166))==v271)) then v272=0 -0;while true do if ((((14360 -9841) -(84 + 755 + 237))<4437) and ((0 + 0)==v272)) then v160=v158 + 2;v161={v79[v158](v79[v158 + (927 -(355 + 571))],v79[v160])};v272=913 -(45 + 867);end if ((v272==(604 -(551 + 52))) or (((6607 -4022) -(1094 + 418))<(1740 -(427 + 903)))) then v157=2;break;end end break;end end end if ((((4461 -2848) -(315 + 75))>(207 + 718)) and (v157==(0 + 0))) then local v273=0 -0;local v274;while true do if ((v273==(0 + (0 -0))) or ((3311 -(309 + (469 -235)))<=(4043 -2589))) then v274=1187 -(728 + (1949 -(1067 + 423)));while true do if ((v274==1) or ((15366 -10369)<=(16240 -12464))) then v157=1 + 0 + 0;break;end if ((v274==0) or ((7385 -3752)<=(2336 + 804))) then local v320=1867 -((2337 -(158 + 577)) + 265);while true do if ((v320==0) or ((13588 -8595)<(6507 -(251 + 1616)))) then v158=v81[2];v159=v81[1760 -(1423 + 333)];v320=16 -(13 + 2);end if (((2123 -(779 + (1814 -(1334 + 375))))==(2675 -(854 + 582))) and (v320==1)) then v274=1 + 0;break;end end end end break;end end end end break;end if ((((4206 + 827) -(50 + 113 + 64))>=(282 + 3319)) and (v156==(0 -0))) then v157=0;v158=nil;v156=1;end end break;end if ((v155==(1036 -(733 + 301))) or (((6058 -(52 + 1941)) -(22 + 79 + 1078))<(1221 + 870))) then v160=nil;v161=nil;v155=2 + 1;end end else v79[v81[5 -3]][v81[3]]=v81[4 + 0];end elseif (((3250 -(61 + (57 -43)))>3009) and (v82<=28)) then v79[v81[6 -4]]=v37[v81[776 -(590 + 183)]];elseif ((v82==29) or ((185 -113)==(10565 -5743))) then local v196=0 -0;local v197;local v198;local v199;local v200;local v201;while true do if (((5255 -(1131 + 821))>(2301 + 578)) and (v196==(0 + 0))) then v197=0 + 0;v198=nil;v196=1 + 0;end if ((v196==(3 -2)) or ((1811 -(75 + 127))==(2537 -1625))) then v199=nil;v200=nil;v196=1495 -(1447 + 46);end if (((1184 + (2292 -1690))==(3123 -1337)) and (v196==(7 -5))) then v201=nil;while true do if ((1062<=(2750 + 1131)) and (v197==(2 -1))) then v66=(v200 + v198) -(1847 -(1579 + 267));v201=(0 + 0) -(0 + 0);v197=854 -(706 + 146);end if (((8611 -6769)<(5622 -(683 + 330))) and (v197==(0 + 0))) then v198=v81[378 -(79 + 297)];v199,v200=v76(v79[v198](v13(v79,v198 + (2 -1),v81[5 -2])));v197=1 + 0;end if (((10202 -5371)>((892 + 4546) -2238)) and (v197==(7 -5))) then for v275=v198,v66 do local v276=(1292 -(654 + 638)) + 0;while true do if ((616==(2393 -(147 + 1630))) and (v276==0)) then v201=v201 + 1;v79[v275]=v199[v201];break;end end end break;end end break;end end else local v202=0;local v203;local v204;local v205;local v206;local v207;local v208;while true do if (((6684 -(1852 + 40))>((1963 + 1457) -621)) and (v202==(2 + 0))) then v207=nil;v208=nil;v202=(1319 -(83 + 1234)) + 1;end if ((v202==(0 -0)) or ((11491 -7113)<(22 + 2340))) then v203=605 -(107 + 498);v204=nil;v202=983 -(799 + 183);end if ((v202==(1322 -(1260 + 61))) or ((2625 -1772)<=(292 + 507))) then v205=nil;v206=nil;v202=1 + 1;end if (((2688 -(802 + 581))>=(92 + 177)) and (v202==(5 -2))) then while true do if ((v203==(520 -(396 + 124))) or ((6435 -2578)<=3197)) then v204=382 -(299 + 83);v205=nil;v203=(88 -(50 + 34)) -3;end if ((v203==(1 + 0)) or ((3638 -(918 + 569))>=4664)) then v206=nil;v207=nil;v203=1753 -(187 + 288 + (2900 -(890 + 734)));end if ((v203==(5 -(2 + 1))) or ((8870 -4630)==(2931 -(662 + 534)))) then v208=nil;while true do if ((v204==2) or (4293==(2011 + 2468))) then for v297=v205,v66 do local v298=887 -(342 + 545);local v299;while true do if ((((167 + 2728) -2161)<=(3380 -(427 + 1448))) and (v298==0)) then v299=0;while true do if (((7674 -3770)>=287) and (v299==(566 -(295 + 271)))) then v208=v208 + (3 -2);v79[v297]=v206[v208];break;end end break;end end end break;end if (((937 -(17 + 37))<=(6497 -3889)) and (v204==(0 -0))) then local v284=900 -(132 + 768);local v285;while true do if (((0 + 0)==v284) or ((3777 + (26 -13))<=(6257 -3337))) then v285=0 + 0;while true do if (((3119 -(199 + 386))<=(1531 + 1247)) and ((2 -1)==v285)) then v204=2 -1;break;end if ((739<(11142 -6594)) and (v285==0)) then local v324=(414 -(14 + 400)) + 0;while true do if ((1971<=(3032 + 1404)) and (1==v324)) then v285=1;break;end if (((4683 -3658)==(3951 -2926)) and (v324==(0 -0))) then v205=v81[2];v206,v207=v76(v79[v205](v79[v205 + 1 + 0]));v324=1868 -(1851 + 16);end end end end break;end end end if ((v204==(2 -1)) or ((14855 -10773)<(1071 + 506))) then local v286=0 -0;while true do if ((v286==0) or ((9713 -5811)<(3679 -(30 + 4)))) then local v318=0;while true do if ((v318==1) or ((1267 -778)>(524 + 790))) then v286=2 -1;break;end if ((v318==(0 -0)) or ((3286 -1780)<(3762 -2864))) then v66=(v207 + v205) -(3 -2);v208=0 -0;v318=1 + 0;end end end if ((v286==(330 -(26 + (695 -392)))) or ((720 + 1885)<2448)) then v204=2 -0;break;end end end end break;end end break;end end end elseif ((v82<=(99 -64)) or ((4775 -(1113 + (2114 -(1066 + 301))))>=(3955 + 876))) then if (((8501 -(5424 -(22 + 4)))==(3899 -(86 + 150 + 560))) and (v82<=(251 -(6 + 213)))) then if (((85 + 71)<=(5332 -3421)) and (v82>(12 + (69 -50)))) then local v165=0;local v166;while true do if (((738 + 1585)>(3450 -(5640 -3596))) and (v165==(560 -(152 + (652 -(214 + 30)))))) then v166=v81[2 + 0];v79[v166]=v79[v166]();break;end end else local v167=1203 -(1095 + 108);local v168;local v169;while true do if ((((4448 -(4 + 317)) -(582 + 217))>2666) and (v167==(1 + 0))) then while true do if (((5182 -(35 + 224))==(7863 -2940)) and (v168==(119 -(68 + 51)))) then v169=v81[2 + 0];v79[v169]=v79[v169](v79[v169 + (1760 -(1000 + 759))]);break;end end break;end if ((((1893 -762) + 360)>386) and (v167==(1030 -(490 + 540)))) then v168=1386 -(91 + 32 + 1263);v169=nil;v167=194 -((905 -(633 + 235)) + 156);end end end elseif (((968 + 864)>1389) and (v82<=(94 -61))) then local v170=0 + 0;local v171;local v172;while true do if ((v170==(1 + 0)) or (3970>=4406)) then while true do if (((1867 + 1263)==3130) and (v171==(489 -(174 + 315)))) then v172=v81[1 + 1];v79[v172](v13(v79,v172 + 1 + 0,v66));break;end end break;end if (((349 + 799)<1223) and (v170==(0 + 0))) then v171=(0 -0) + 0;v172=nil;v170=1188 -(36 + 1151);end end elseif (((1792 + 308)==(4079 -1979)) and (v82==(75 -41))) then local v209=706 -(50 + 656);local v210;local v211;while true do if (((4103 -2331)<=(3294 -((42 -17) + 412))) and (v209==0)) then v210=1324 -((1663 -(295 + 431)) + 387);v211=nil;v209=2 -1;end if ((2134>(7637 -5800)) and (v209==(2 -1))) then while true do if (((2081 + 953)>((6358 -3716) -(234 + 13))) and (v210==0)) then v211=v81[2];v79[v211]=v79[v211](v13(v79,v211 + (941 -(752 + 188)),v66));break;end end break;end end else for v228=v81[1 + 1],v81[3 + 0] do v79[v228]=nil;end end elseif ((v82<=(6 + 32)) or ((13012 -10004)<2721)) then if ((v82<=36) or ((2062 + 1899)>=(7208 -2849))) then v79[v81[2 + 0]][v81[3]]=v79[v81[4 + 0]];elseif ((v82>37) or (153>(2267 + 677))) then v79[v81[2]]=v81[3 + 0];else v65=v81[3];end elseif ((v82<=(36 + 3)) or (3631<=(1823 -879))) then local v174=0 + 0;local v175;local v176;local v177;local v178;while true do if (((4276 -(102 + 427))>(1648 -650)) and (v174==(5 -3))) then while true do if ((v175==(3 -2)) or (((6193 -2288) -(1727 + 141))>=(4391 -(271 + 113)))) then v178=nil;while true do if (((3275 -(164 + 1017))==(5470 -3376)) and (v176==(0 + 0))) then local v277=(67 + 507) -(301 + 273);local v278;while true do if (((2293 + (3089 -(249 + 733)))>=(1725 -(313 + 434))) and (v277==0)) then v278=0 -0;while true do if (((11505 -9136)>(2003 -1393)) and (v278==(0 -0))) then v177=v81[8 -6];v178=v79[v177];v278=1;end if (((3873 -1671)==(2667 -(408 + 57))) and (v278==(3 -2))) then v176=1;break;end end break;end end end if ((v176==(1753 -(1282 + 470))) or ((4094 -(84 + 1194))>=3217)) then for v282=v177 + (1724 -(1295 + 428)),v81[1878 -(7 + 1868)] do v8(v178,v79[v282]);end break;end end break;end if ((0==v175) or ((1729 -(50 + 355))>=(3460 -(33 + 80)))) then v176=(1771 -(243 + 637)) -(8 + 883);v177=nil;v175=987 -(862 + 124);end end break;end if ((v174==(0 -0)) or ((5416 -(244 + 578))==643)) then v175=0 + 0;v176=nil;v174=951 -(619 + 331);end if ((v174==(781 -(659 + 121))) or ((2593 -1013)>2470)) then v177=nil;v178=nil;v174=1781 -(1196 + 583);end end elseif ((v82==(80 -40)) or ((5071 -(37 + 129))<(260 + 678))) then local v213=0;local v214;local v215;while true do if (((5084 -(920 + 9 + 319))==(4593 -(295 + 462))) and (v213==(1 -0))) then while true do if ((v214==(0 -0)) or ((13 + 331)>(2786 + 2119))) then v215=v81[2 + 0];do return v79[v215](v13(v79,v215 + (1 -0),v66));end break;end end break;end if ((v213==(700 -(437 + 263))) or ((1881 + 233)<=(701 + 658))) then v214=0 -0;v215=nil;v213=1098 -(405 + 692);end end else v79[v81[2]]= #v79[v81[3]];end v65=v65 + (988 -(899 + 52 + 36));break;end if (((625 -362)<(463 + (1935 -(1440 + 418)))) and (v86==0)) then v81=v72[v65];v82=v81[1 + 0];v86=3 -2;end end end end A,B=v27(v11(v69));if  not A[1] then local v83=0;local v84;while true do if (v83==0) then v84=v35[4][v65] or "?";error("Script error at ["   .. v84   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end vv9());break;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v62=v2(v0(v29,16));if v18 then local v75=0;local v76;while true do if (1==v75) then return v76;end if (v75==0) then v76=v5(v62,v18);v18=nil;v75=1;end end else return v62;end end end);local function v19(v30,v31,v32)if v32 then local v63=93 -(37 + 56);local v64;while true do if (v63==(1542 -(59 + 1483))) then v64=(v30/(2^(v31-1)))%((860 -(224 + 634))^(((v32-1) -(v31-((968 + 150) -((743 -(535 + 178)) + 1087)))) + 1 + 0));return v64-(v64%((1 -0) + 0));end end else local v65=0 + 0;local v66;while true do if (v65==(202 -(185 + 17))) then v66=2^(v31-(1 -0));return (((v30%(v66 + v66))>=v66) and (1099 -(758 + 340))) or (0 + 0);end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=0 -0;local v39;local v40;while true do if ((231 -(228 + 2))==v38) then return (v40 * ((774 -325) -193)) + v39;end if (v38==0) then v39,v40=v1(v15,v17,v17 + (1511 -(966 + 543)));v17=v17 + (4 -(531 -(26 + 503)));v38=1 + 0;end end end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + (12 -9));v17=v17 + (389 -(364 + 21));return (v44 * (16778850 -(1573 + 61))) + (v43 * ((67840 -(461 + 803)) -(939 + 101))) + (v42 * (1589 -((1365 -(708 + 338)) + 1014))) + v41;end local function v23()local v45=v22();local v46=v22();return (( -(2 + 0) * v19(v46,32)) + (461 -((339 -222) + 343))) * (((3771 -1966) -(1712 + 91))^(v19(v46,21,110 -79) -(2853 -1830))) * ((((v19(v46,1 + 0,8 + 12) * ((1741 -(467 + 1272))^(69 -((41 -12) + 8)))) + v45)/((891 -(222 + 667))^(102 -50))) + (2 -1));end local function v24(v33)local v47;if  not v33 then local v67=0;while true do if ((1989 -((1696 -(286 + 1345)) + 1924))==v67) then v33=v22();if (v33==(0 -0)) then return "";end break;end end end v47=v3(v15,v17,(v17 + v33) -(2 -1));v17=v17 + v33;local v48={};for v60=997 -(156 + 840), #v47 do v48[v60]=v2(v1(v3(v47,v60,v60)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (1~=v49) then else local v73=0 + 0;while true do if (v73==(3 -2)) then v49=6 -4;break;end if (v73==0) then v52=nil;v53=nil;v73=1 + 0;end end end if (v49~=(1550 -(1330 + 218))) then else v54=nil;v55=nil;v49=1451 -(1158 + 290);end if (v49==(11 -8)) then v56=nil;while true do local v77=0 -0;while true do if (v77==1) then if (v50~=(1 + 0)) then else local v96=0 -0;while true do if (v96==(539 -(518 + 20))) then v56={};v50=1659 -(304 + 1353);break;end if (v96~=(549 -(287 + 262))) then else v54={v51,v52,nil,v53};v55=v22();v96=1 + 0;end end end if (v50~=(284 -(259 + 25))) then else local v97=0 -0;while true do if (v97==(3 -2)) then v53={};v50=1 + 0;break;end if (v97~=(0 -0)) then else v51={};v52={};v97=1 + 0;end end end break;end if (v77~=(0 -0)) then else local v93=0 -0;while true do if (v93==1) then v77=4 -3;break;end if (v93~=(1577 -(271 + 1306))) then else if (v50~=2) then else local v98=0 -0;while true do if (v98==(1877 -(1279 + 598))) then for v101=1557 -(1552 + 4),v55 do local v102=0 -0;local v103;local v104;while true do if (v102==(426 -(276 + 149))) then if (v103==(1 -0)) then v104=v20()~=(0 + 0);elseif (v103==(2 + 0)) then v104=v23();elseif (v103~=3) then else v104=v24();end v56[v101]=v104;break;end if (v102~=0) then else v103=v20();v104=nil;v102=1;end end end v54[3]=v20();v98=2 -1;end if (v98==(2 -1)) then for v105=1 + 0,v22() do local v106=0 -0;local v107;local v108;while true do if (v106~=(0 + 0)) then else local v114=1842 -(930 + 912);while true do if (v114==1) then v106=3 -2;break;end if (v114~=(1869 -(1138 + 731))) then else v107=0;v108=nil;v114=710 -(462 + 247);end end end if ((3 -2)~=v106) then else while true do if (v107~=(1669 -(1272 + 397))) then else v108=v20();if (v19(v108,1,2 -1)==0) then local v218=727 -(525 + 202);local v219;local v220;local v221;local v222;local v223;local v224;while true do if (v218~=(3 -0)) then else while true do if ((2 + 0)==v219) then v224=nil;while true do if (v220==(1388 -(298 + 1090))) then local v300=0 + 0;while true do if (v300==0) then v221=0;v222=nil;v300=2 -1;end if ((2 -1)~=v300) then else v220=1;break;end end end if (v220~=1) then else v223=nil;v224=nil;v220=2;end if (v220~=2) then else while true do if (v221~=2) then else local v314=0 + 0;local v315;while true do if (v314==0) then v315=1185 -(368 + 817);while true do if ((1 + 0)==v315) then v221=3;break;end if (v315~=(0 + 0)) then else if (v19(v223,1 + 0,1)~=(1 -0)) then else v224[1471 -(961 + 508)]=v56[v224[2]];end if (v19(v223,2,388 -(288 + 98))==(1 + 0)) then v224[3]=v56[v224[7 -4]];end v315=2 -1;end end break;end end end if (v221~=(2 + 1)) then else if (v19(v223,3,92 -(85 + 4))==(616 -(148 + 467))) then v224[4]=v56[v224[728 -(533 + 191)]];end v51[v105]=v224;break;end if ((0 -0)==v221) then local v317=0 -0;local v318;local v319;while true do if (v317~=0) then else v318=1918 -(1666 + 252);v319=nil;v317=1132 -(343 + 788);end if (v317==1) then while true do if ((0 -0)~=v318) then else v319=0 + 0;while true do if (v319==(1051 -(1022 + 29))) then local v345=0 + 0;while true do if (v345~=(1734 -(876 + 857))) then else v319=1 + 0;break;end if (0==v345) then v222=v19(v108,2 + 0,7 -4);v223=v19(v108,4 + 0,125 -(99 + 20));v345=1 + 0;end end end if (v319~=(326 -(231 + 94))) then else v221=1 -0;break;end end break;end end break;end end end if (v221==(2 -1)) then local v320=0;local v321;while true do if (v320==(0 + 0)) then v321=0 -0;while true do if (v321==(1 + 0)) then v221=2;break;end if (v321~=(0 -0)) then else local v341=0 -0;while true do if ((1 + 0)~=v341) then else v321=3 -2;break;end if ((0 + 0)==v341) then local v346=0;while true do if (v346==(0 -0)) then v224={v21(),v21(),nil,nil};if (v222==0) then local v348=0;local v349;local v350;while true do if ((0 -0)~=v348) then else v349=0;v350=nil;v348=1 + 0;end if (v348~=1) then else while true do if (v349~=0) then else v350=0;while true do if ((0 + 0)==v350) then v224[9 -6]=v21();v224[4]=v21();break;end end break;end end break;end end elseif (v222==1) then v224[357 -(290 + 64)]=v22();elseif (v222==(965 -(587 + 376))) then v224[8 -5]=v22() -((2 + 0)^16);elseif (v222==(875 -(823 + 49))) then local v353=0 -0;while true do if (v353==0) then v224[427 -(263 + 161)]=v22() -(2^(35 -19));v224[4]=v21();break;end end end v346=1 + 0;end if (v346~=(2 -1)) then else v341=1 + 0;break;end end end end end end break;end end end end break;end end break;end if (v219==0) then local v271=0 -0;while true do if (v271==1) then v219=1;break;end if ((0 + 0)==v271) then v220=131 -(120 + 11);v221=nil;v271=1;end end end if (v219~=(1046 -(272 + 773))) then else local v272=0 + 0;while true do if (v272~=(1 + 0)) then else v219=474 -(147 + 325);break;end if (v272==0) then v222=nil;v223=nil;v272=1;end end end end break;end if (v218~=(1 + 0)) then else v221=nil;v222=nil;v218=4 -2;end if (v218==(0 + 0)) then v219=543 -(360 + 183);v220=nil;v218=1 + 0;end if ((1 + 1)==v218) then v223=nil;v224=nil;v218=178 -(114 + 61);end end end break;end end break;end end end v50=3;break;end end end if (v50==(10 -7)) then local v99=0;while true do if ((0 -0)~=v99) then else for v109=1 + 0,v22() do v52[v109-(2 -1)]=v27();end for v111=98 -(50 + 47),v22() do v53[v111]=v22();end v99=316 -(122 + 193);end if ((2 -1)~=v99) then else return v54;end end end v93=1 -0;end end end end end break;end if (v49==(0 + 0)) then local v74=0 + 0;while true do if (1~=v74) then else v49=1;break;end if (v74~=(0 + 0)) then else v50=0 -0;v51=nil;v74=1572 -(7 + 1564);end end end end end local function v28(v34,v35,v36)local v57=v34[1];local v58=v34[2];local v59=v34[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v11("#",...) -1;local function v72()local v78=v57;local v79=Const;local v80=v58;local v81=v59;local v82=v26;local v83={};local v84={};local v85={};for v90=0 -0,v71 do if ((v90>=v81) or (526>(2614 -(881 + 279)))) then v83[v90-v81]=v70[v90 + 1 + 0];else v85[v90]=v70[v90 + 1];end end local v86=(v71-v81) + 1;local v87;local v88;while true do local v91=0 + 0;local v92;while true do if ((((2308 + 410) -(401 + 1083))<(1148 + 3117)) and (v91==(0 + 0))) then v92=0 + 0;while true do if ((v92==(0 -0)) or (3487<=(2535 -(486 + (2959 -1875))))) then v87=v78[v68];v88=v87[(4 + 0) -3];v92=1;end if ((1384==1384) and (v92==(1279 -(481 + 797)))) then if ((v88<=(124 -(51 + 53))) or ((2100 -1121)<(174 -115))) then if ((v88<=(577 -(182 + 386))) or ((3424 + 43)<(580 + 40))) then if ((980>12) and (v88<=(4 + 0))) then if (((1622 -(578 + 10))==(1657 -(200 + 423))) and (v88<=(1 + 0))) then if ((v88==0) or (2864>(4227 + (2323 -(724 + 1252))))) then if (((9296 -(26726 -20735))<=(3290 + 473)) and (v87[5 -3]==v85[v87[4]])) then v68=v68 + 1 + 0;else v68=v87[1349 -(1030 + 316)];end elseif (((1576 + 479)>(5145 -(4766 -1305))) and v85[v87[2 + 0]]) then v68=v68 + (4 -3);else v68=v87[3];end elseif (((21271 -16806)>=(6 + 4439)) and (v88<=2)) then v85[v87[2 + 0]]=v85[v87[3 + 0]][v87[1710 -(1623 + 83)]];elseif ((v88==3) or ((4178 -(44 + (1515 -(771 + 118))))<=(126 + 1109))) then v85[v87[1 + (3 -2)]]=v36[v87[(10 -3) -4]];else local v160=0 -(0 -0);local v161;local v162;local v163;local v164;local v165;while true do if (((1896 -(145 + 57))>(2465 -(1987 -444))) and (v160==(0 -(0 + 0)))) then v161=1420 -((71 -39) + 1388);v162=nil;v160=1;end if (((5535 -(387 + 1548))>=3256) and (v160==(1209 -(151 + (2013 -956))))) then v163=nil;v164=nil;v160=3 -1;end if ((v160==(2 + 0)) or ((427 + 483)>(612 + 1232))) then v165=nil;while true do if ((v161==(1706 -(1677 + 29))) or ((88 + 2324)>(5577 -(633 + (2198 -(1706 + 26)))))) then local v260=0 -0;while true do if ((1161>=980) and (v260==(2 -1))) then v161=231 -(103 + (381 -254));break;end if ((v260==(0 -0)) or ((1038 + 686)>(1346 + 920))) then v162=v87[4 -2];v163,v164=v82(v85[v162](v12(v85,v162 + 1 + 0,v87[2 + 1])));v260=1014 -(574 + 439);end end end if (((176 -121)<((55850 -37039) -14098)) and ((1463 -(144 + 223 + 1095))==v161)) then v69=(v164 + v162) -1;v165=0 + 0;v161=2;end if (((1786 + 300)>(223 + 85)) and (v161==2)) then for v273=v162,v69 do local v274=0 -0;while true do if ((v274==(278 -(151 + 127))) or ((334 + 57)>=(1023 + 256))) then v165=v165 + (38 -((1350 -(432 + 888)) + 7));v85[v273]=v163[v165];break;end end end break;end end break;end end end elseif ((((42 -29) + 472)<(3940 -(420 + 539))) and (v88<=((1843 -(570 + 118)) -(835 + 314)))) then if ((2441>(2405 -(53 + 28 + 716))) and (v88>((1174 -(69 + 1091)) -9))) then local v116=0;local v117;local v118;local v119;local v120;local v121;while true do if ((v116==2) or ((3324 + 323)>4655)) then v121=nil;while true do if (((101 + 2796)>(3875 -1972)) and (v117==(1 + 1))) then while true do if ((4403>(3752 -(134 + 7))) and ((2 -1)==v118)) then v121=v85[v119 + 2];if ((v121>(0 + (0 -0))) or ((1235 -568)>=(2945 + 725))) then if ((4348<4368) and (v120>v85[v119 + 1 + 0])) then v68=v87[(3179 -1753) -(460 + 963)];else v85[v119 + 3]=v120;end elseif ((v120<v85[v119 + 1 + 0]) or ((4157 -(675 + 123))<10)) then v68=v87[6 -3];else v85[v119 + (9 -6)]=v120;end break;end if (((45 + 1)<=(6006 -1412)) and (v118==0)) then local v275=0 -0;local v276;while true do if ((4149>=(11950 -7900)) and (v275==((0 -0) + 0))) then v276=0;while true do if ((v276==((1 -0) -0)) or (4505>=(18037 -13423))) then v118=1 + 0;break;end if (((0 -0)==v276) or ((754 + 87)>=(17232 -12862))) then local v322=0 + 0;while true do if (((4117 -(11 + 153))<=(4467 -(38 + 135))) and ((0 + 0)==v322)) then v119=v87[7 -5];v120=v85[v119];v322=567 -(476 + 90);end if ((v322==1) or ((5785 -(4 + (2706 -1591)))==((2597 + 851) -(136 + 1641)))) then v276=1;break;end end end end break;end end end end break;end if ((v117==(1 + 0)) or ((2744 + 817)<(1149 -(112 + 542)))) then local v234=0 + 0;while true do if ((v234==(0 -0)) or ((616 + 2860)==(1175 + 465))) then v120=nil;v121=nil;v234=1;end if ((3179<=(10804 -6213)) and ((1 -0)==v234)) then v117=(1809 -1297) -(232 + 278);break;end end end if (((8010 -5833)<(2685 + 221)) and (v117==((0 -0) + 0))) then v118=270 -(13 + 257);v119=nil;v117=1;end end break;end if (((0 -0)==v116) or (741>(5135 -(39 + 301)))) then v117=0;v118=nil;v116=1;end if ((v116==(2 -1)) or ((2450 + 1466)<=(2864 -(571 + 663)))) then v119=nil;v120=nil;v116=2;end end else v68=v87[4 -1];end elseif (((1948 -(463 + 1415))<(789 -464)) and (v88<=(5 + 2))) then local v122=0;local v123;local v124;while true do if (((1721 + 934)<(2825 + 1682)) and (v122==(3 -2))) then while true do if (((0 + 0)==v123) or (((418 -268) -68)>((1588 + 1120) -(591 + 1103)))) then v124=v87[1528 -(1199 + 327)];v85[v124]=v85[v124](v85[v124 + 1 + 0]);break;end end break;end if ((v122==(0 + 0)) or ((8328 -5223)>=3205)) then v123=0 + 0;v124=nil;v122=(2 -1) + 0;end end elseif ((3108>=(3532 -(159 + 202 + 629))) and (v88==(1604 -(105 + 1491)))) then local v166=0;local v167;local v168;local v169;while true do if (((1 -0)==v166) or ((3532 -1579)<1921)) then v169=nil;while true do if ((3617>(5350 -3730)) and (v167==(1 -0))) then while true do if ((v168==(0 + 0)) or ((1137 + 477 + 736)<(2373 -(665 + 12)))) then v169=v87[(434 -(260 + 171)) -1];v85[v169]=v85[v169]();break;end end break;end if (((0 -0)==v167) or (1721>=(12461 -8213))) then local v261=1737 -(1718 + 19);while true do if ((4823>(9020 -5520)) and (v261==(0 + 0 + 0))) then v168=0 + 0;v169=nil;v261=631 -(174 + 456);end if ((((5372 -(176 + 912)) -1602)<2965) and ((1 -0)==v261)) then v167=1 + 0 + (0 -0);break;end end end end break;end if (((2859 + 2009)>=(668 + 1619)) and (v166==0)) then v167=0 -0;v168=nil;v166=1 -0;end end else local v170=0;local v171;local v172;local v173;while true do if (((120 + 182)<=(2518 -1184)) and ((2 -1)==v170)) then v173=913 -(826 + 87);for v236=v171,v87[1473 -(1458 + 11)] do local v237=0 + 0;while true do if (((6364 -4025)<=(4965 -(279 + 284))) and (v237==0)) then v173=v173 + (3 -2);v85[v236]=v172[v173];break;end end end break;end if ((v170==(1194 -((1663 -(64 + 425)) + 20))) or (4962<(55 + 1187))) then v171=v87[368 -(252 + 114)];v172={v85[v171](v85[v171 + 1])};v170=3 -2;end end end elseif ((v88<=(1593 -(563 + 1016))) or ((5507 -(942 + 819))==(9193 -4618))) then if ((v88<=(33 -22)) or ((5387 -(27 + 553))<=(2960 -(1283 + 578)))) then if ((v88>(1063 -(340 + 713))) or ((10473 -6975)<257)) then v85[v87[448 -(302 + 144)]]=v87[4 -1]~=(814 -(650 + 164));else v85[v87[1078 -(253 + 823)]]=v35[v87[3 -0]];end elseif (((3332 -(635 + 1127))<4463) and (v88<=(9 + 3))) then local v127=(1168 -(147 + 1021)) -0;local v128;local v129;while true do if (((239 + 608)<=(9653 -5921)) and ((0 + (0 -0))==v127)) then v128=630 -(155 + 475);v129=nil;v127=1926 -((1621 -(44 + 1330)) + 1678);end if (((460 + 2594)<=(3893 -(272 + 390))) and (v127==((30 + 1611) -(685 + 955)))) then while true do if ((v128==0) or (((1785 -(1230 + 296)) + 1620)<=(430 -314))) then v129=v87[1 + 1];v85[v129](v12(v85,v129 + (2 -1),v87[2 + 1]));break;end end break;end end elseif ((v88>(285 -(182 + 90))) or ((92 + 1386)>4746)) then local v174=0;local v175;local v176;local v177;while true do if ((((541 + 2322) -1264)<=(10547 -7795)) and (v174==(1 -(0 + 0)))) then v177=nil;while true do if ((v175==1) or ((6756 -2542)<=2906)) then for v278=v176 + 1 + 0,v69 do v7(v177,v85[v278]);end break;end if (((1335 -(964 + 157))<(3226 -(35 + 49))) and (v175==(0 -0))) then local v262=0;local v263;while true do if ((4446>=(883 -358)) and (v262==(1305 -(1112 + 193)))) then v263=0 + 0;while true do if ((4843==(6014 -(1041 + (206 -76)))) and (v263==(1 + 0))) then v175=1;break;end if (((1577 -(853 + 158))<(1161 + 1946)) and (v263==(0 -0))) then local v310=567 -(166 + 220 + 181);while true do if ((v310==(2 -1)) or (((1621 -726) + 3706)<(4180 -(591 + 963)))) then v263=563 -(222 + 340);break;end if (((0 -0)==v310) or ((143 -93)>2307)) then v176=v87[1702 -(510 + 1190)];v177=v85[v176];v310=2 -1;end end end end break;end end end end break;end if ((v174==(0 -0)) or ((25 + 3296)>((1940 -(234 + 632)) + 3137))) then local v230=0 + 0;while true do if (((6847 -((2452 -1065) + 471))>=(6485 -(1023 + 482))) and (v230==(0 + 0))) then v175=0 + 0;v176=nil;v230=1 + 0;end if ((4328==(5539 -(28 + 86 + 1097))) and (v230==(1859 -(1401 + 457)))) then v174=1646 -(808 + 837);break;end end end end else local v178=0 + 0;local v179;while true do if ((3764<=4967) and (v178==(0 + 0))) then v179=v87[2];v85[v179](v12(v85,v179 + 1,v69));break;end end end elseif (((74 + 14)<4475) and (v88<=((47 + 17) -47))) then if (((2393 -1400)<=(5526 -(331 + 1234))) and (v88<=(738 -(179 + 544)))) then local v130=0 + 0;local v131;local v132;local v133;local v134;local v135;while true do if ((v130==(2 + 0)) or ((361 -232)>=4945)) then v135=nil;while true do if (((569 -222)<(4093 -(3322 -(1426 + 228)))) and (v131==(0 -0))) then local v238=0 + 0;while true do if ((v238==(2 -1)) or ((2225 -(46 + 18))>(13790 -9962))) then v131=1;break;end if (((2996 -2377)<=(1357 + 3153)) and ((0 -0)==v238)) then v132=v87[2];v133,v134=v82(v85[v132](v85[v132 + 1 + 0]));v238=1;end end end if (((3086 -(11 + 55 + 1636))==(2252 -868)) and ((1 + 0)==v131)) then local v239=0;while true do if (((2 -1)==v239) or ((1453 + 2300)==(7457 -3045))) then v131=2;break;end if ((v239==(0 -0)) or ((2739 -1447)==(5175 -2611))) then v69=(v134 + v132) -(4 -3);v135=0;v239=1 + 0 + 0;end end end if (((2414 + 1971)==4385) and (v131==(192 -(157 + 33)))) then for v249=v132,v69 do local v250=(0 + 0) -0;local v251;while true do if ((v250==(0 + 0 + 0)) or ((3084 -(339 + 901))<=1540)) then v251=0;while true do if ((v251==(0 -0)) or (2453>(9698 -6462))) then v135=v135 + 1 + 0;v85[v249]=v133[v135];break;end end break;end end end break;end end break;end if ((v130==(1496 -(123 + 443 + 930))) or (((5420 -2958) + 1105)>(1908 + 2811))) then v131=0 + 0;v132=nil;v130=1 + 0;end if ((v130==(1 + 0 + 0)) or ((6067 -3106)>(2270 + 1750))) then v133=nil;v134=nil;v130=2;end end elseif ((v88>(59 -43)) or ((1069 -(328 + 282 + 167))>(9557 -4867))) then local v180=0 -0;local v181;local v182;while true do if (((2479 + 2481)>(1832 + 247)) and (v180==(0 + 0))) then v181=0 -0;v182=nil;v180=1591 -(658 + 932);end if ((v180==(1 -0)) or ((886 + 174)==(5712 -3486))) then while true do if (((3496 -2305)<=1815) and (v181==(0 -(1900 -(328 + 1572))))) then v182=v87[1555 -(216 + 1337)];do return v85[v182](v12(v85,v182 + (2 -1),v69));end break;end end break;end end else v36[v87[1 + 2]]=v85[v87[1898 -(897 + 999)]];end elseif ((v88<=((113 -72) -23)) or ((3606 -1351)<=(4940 -3136))) then v85[v87[2 + (0 -0)]]=v85[v87[3]];elseif ((v88==(44 -25)) or ((4929 -(779 + 335))<(549 -221))) then v85[v87[3 -1]]= #v85[v87[3 + 0]];else for v225=v87[4 -2],v87[(57 + 853) -(891 + 16)] do v85[v225]=nil;end end elseif ((v88<=(85 -(44 + 10))) or ((3158 + 512)<=(3342 -2513))) then if ((v88<=((129 + 378) -(228 + (930 -676)))) or ((405 + 1612)<(455 + 195))) then if (((1674 -602)<(5028 -(25 + 463))) and (v88<=((177 -103) -(26 + 26)))) then if ((1059>(3030 -2268)) and (v88==(6 + (41 -26)))) then local v137=0 -0;local v138;local v139;while true do if ((v137==0) or ((7296 -5348)>=((1108 + 3584) -(25 + 780)))) then v138=0 + 0;v139=nil;v137=1 + 0;end if (((1622 -(110 + 107))>(128 + 410)) and (v137==(267 -(195 + 71)))) then while true do if (((0 -0)==v138) or ((810 + 1261)<=1835)) then v139=v87[3 -1];v85[v139]=v85[v139](v12(v85,v139 + (2 -(1465 -(1288 + 176))),v87[1795 -(366 + 1426)]));break;end end break;end end else local v140=0 + 0;local v141;local v142;while true do if (((2149 + 1472)==(4141 -(516 + 4))) and (v140==0)) then local v227=0;while true do if (((323 + 2618)>=2002) and (v227==0)) then v141=0 -0;v142=nil;v227=1;end if ((2150<2409) and (v227==1)) then v140=491 -(102 + 388);break;end end end if ((1252==1252) and (v140==(266 -(44 + 221)))) then while true do if ((v141==(0 + 0)) or ((1169 + (3043 -(81 + 213)))==3674)) then v142=v87[1233 -(787 + 444)];do return v12(v85,v142,v69);end break;end end break;end end end elseif (((4678 -(206 + 846))<(5153 -(997 + 125))) and (v88<=(17 + 6))) then if ((v85[v87[1 + 1 + 0]]==v87[2 + 2]) or ((5253 -(886 + 220))>=(16458 -(20972 -9184)))) then v68=v68 + 1 + 0;else v68=v87[3];end elseif (((12386 -9731)>(190 + 715)) and (v88==(9 + 15))) then v85[v87[1 + 1]][v87[6 -3]]=v85[v87[2 + 1 + 1]];else local v186=0 + 0;local v187;local v188;while true do if (((3261 + 182)<=(4760 -(628 + 619))) and (v186==0)) then v187=(1804 -(235 + 243)) -(1273 + 53);v188=nil;v186=1296 -(212 + 1083);end if ((1==v186) or ((20095 -15287)<=(929 + 2532))) then while true do if ((0==v187) or (2407<(482 + 1120))) then local v264=1454 -(39 + (2768 -(886 + 467)));while true do if ((v264==(1124 -(547 + 577))) or (387>(4596 -3408))) then v188=v87[2];v69=(v188 + v86) -(2 -1);v264=1 + (0 -0);end if (((1634 -(1141 + 492))==v264) or ((830 + 3353)<=(1566 + 1310 + 38))) then v187=330 -(147 + 182);break;end end end if (((1941 + 880)<(4361 -925)) and (v187==(1 + 0))) then for v279=v188,v69 do local v280=1428 -(310 + 1118);local v281;local v282;local v283;while true do if (((0 -0)==v280) or ((33 + 862)<744)) then v281=0 -0;v282=nil;v280=1555 -(1433 + 121);end if ((v280==(1 + 0)) or ((11564 -(10115 -(1262 + 240)))<=(110 -48))) then v283=nil;while true do if (((1892 -1074)<(3244 -(305 + 81))) and (v281==(1 -0))) then while true do if ((944<=4138) and (v282==(0 -0))) then v283=v83[v279-v188];v85[v279]=v283;break;end end break;end if (((1832 + 2631 + 347)>=(567 -(233 + 94))) and (v281==(0 -0))) then v282=1834 -(1328 + 506);v283=nil;v281=1 -0;end end break;end end end break;end end break;end end end elseif ((v88<=(1213 -(264 + 39 + 882))) or (((2187 -(949 + 58)) -(286 + 51 + 703))>1219)) then if ((v88<=26) or ((5747 -1801)==4771)) then local v143=1738 -((2921 -(573 + 628)) + 18);local v144;local v145;local v146;while true do if ((v143==(0 + 0)) or ((2250 -((2293 -(1310 + 661)) + 972))<(948 -178))) then v144=0 -0;v145=nil;v143=1;end if ((v143==(70 -(9 + 60))) or (3030<2991)) then v146=nil;while true do if ((v144==(1 -0)) or (3708==(5862 -(860 + 118)))) then v85[v145 + (1446 -(1321 + 124))]=v146;v85[v145]=v146[v87[(923 -(436 + 485)) + 2]];break;end if (((3725 -2168)<((1828 + 2860) -1570)) and (v144==(0 + 0))) then local v243=0 -0;while true do if ((v243==(1 -0)) or ((2900 -(1528 -990))>(4498 -(95 + 500)))) then v144=1;break;end if ((0==v243) or ((1438 -(1680 -899))>(1225 + (2985 -(444 + 1052))))) then v145=v87[9 -7];v146=v85[v87[1658 -(1410 + 245)]];v243=797 -(484 + 312);end end end end break;end end elseif ((v88>(1677 -((3532 -2616) + 734))) or ((4155 + 325)==(344 -(98 + 87)))) then v85[v87[4 -2]]=v85[v87[826 -(136 + 581 + 106)]][v85[v87[625 -(160 + 73 + 388)]]];else local v190=0 + (0 -0);local v191;local v192;while true do if ((v190==(0 -0)) or ((2769 -(705 + 122))==3523)) then local v231=0 -0;while true do if ((4212>(1804 -(546 + 660))) and ((112 -(25 + 48 + 39))==v231)) then v191=v87[5 -3];v192={};v231=2 -1;end if (((1 + 0)==v231) or (2450>4908)) then v190=1;break;end end end if (((4962 -(266 + 1650))<=4472) and (v190==(164 -(141 + 22)))) then for v244=1 + 0, #v84 do local v245=0 -0;local v246;while true do if ((v245==(1206 -(29 + 1177))) or ((1549 + 1808)<=(1730 -(56 + 1427)))) then v246=v84[v244];for v292=0 -0, #v246 do local v293=0 + 0;local v294;local v295;local v296;while true do if (((8838 -6838)==(3341 -(526 + 815))) and (v293==(1755 -(474 + 1280)))) then v296=v294[1 + 1];if ((((1285 -625) + 3566)<=(2438 + 2392)) and (v295==v85) and (v296>=v191)) then local v323=123 -(81 + 42);while true do if ((v323==(0 + 0)) or ((5206 -(79 + 634))==(2007 -409))) then v192[v296]=v295[v296];v294[421 -(216 + 204)]=v192;break;end end end break;end if ((v293==((0 -0) -0)) or ((625 -(202 + 57))>(7787 -(13228 -9596)))) then local v307=0;while true do if (((149 + 2954)==(6779 -3676)) and (((2092 -(579 + 262)) -(700 + 550))==v307)) then v293=1;break;end if (((1139 -(421 + 164))<=(1563 -602)) and (v307==(1467 -(1439 + 28)))) then v294=v246[v292];v295=v294[1782 -(1309 + 472)];v307=216 -((946 -(374 + 371)) + 14);end end end end end break;end end end break;end end end elseif ((v88<=(942 -(331 + 582))) or (2730>(3345 -(39 + 119 + 73)))) then do return;end elseif ((v88>30) or (((11080 -7673) -(710 + 818))<(2572 -(74 + 975)))) then local v193=0;local v194;local v195;local v196;local v197;local v198;local v199;while true do if ((v193==(5 -3)) or ((2064 + 2796)<(1870 -(211 + 804)))) then v198=nil;v199=nil;v193=3 + 0;end if (((639 + 3658)==(17053 -12756)) and (v193==3)) then while true do if ((((1948 + 2842) -2035)==(2892 -(133 + 4))) and (v194==(1 -0))) then v197=v195 + (7 -5);v198={v85[v195](v85[v195 + (3 -2)],v85[v197])};v194=1 + 1;end if (((11702 -9045)>(926 + 896)) and (v194==(981 -((480 -(35 + 176)) + 709)))) then if (v199 or ((70 + 3)>(1010 + 2857))) then local v297=0 -0;local v298;while true do if (((50 + 898)<(478 + 3272)) and (v297==(0 -0))) then v298=0 + 0;while true do if ((320<=(1891 -1259)) and (v298==(1260 -(827 + 433)))) then v85[v197]=v199;v68=v87[8 -5];break;end end break;end end else v68=v68 + 1 + 0;end break;end if ((v194==(2 + 0)) or ((2409 -(1055 + 822))>=(14401 -10233))) then for v284=1 + 0,v196 do v85[v197 + v284]=v198[v284];end v199=v198[1 -0];v194=1511 -(1168 + (1051 -711));end if ((v194==(0 + 0)) or (4251<=((797 -546) + 144))) then v195=v87[5 -3];v196=v87[6 -2];v194=2 -1;end end break;end if ((v193==(0 -(0 -0))) or ((1627 -(612 + 927))>(1919 + 804))) then v194=(310 -(149 + 39)) -(71 + 51);v195=nil;v193=2 -1;end if (((994 + 2613)>=(3807 -(261 + 100))) and (v193==(1 -0))) then v196=nil;v197=nil;v193=1 + 1;end end else local v200=(371 -(77 + 294)) -0;local v201;local v202;local v203;local v204;while true do if (((10901 -8709)>=1073) and (v200==1)) then v203=nil;v204=nil;v200=(735 + 372) -(4 + 1101);end if ((v200==(0 + 0)) or ((4545 -2495)==4816)) then v201=1453 -(1211 + 242);v202=nil;v200=(1223 -(585 + 636)) -1;end if (((1028 -519)<4302) and (v200==(5 -3))) then while true do if ((((7400 -5309) -(66 + 1340))<=4830) and ((1777 -(874 + 902))==v201)) then v204=0 -0;for v286=v202,v87[(52 + 1006) -((4209 -3292) + 137)] do local v287=0 + 0;local v288;while true do if (((7228 -4967)<((5425 -(249 + 1717)) -(376 + 283))) and (v287==(0 -0))) then v288=0 + (681 -(656 + 25));while true do if ((0==v288) or ((5216 -(6 + 261))<=(1531 -(1276 + 157)))) then v204=v204 + (1 -0);v85[v286]=v203[v204];break;end end break;end end end break;end if ((v201==(0 -0)) or ((6830 -(401 + 1538))==(6183 -2980))) then v202=v87[1 + 1];v203={v85[v202](v12(v85,v202 + 1,v69))};v201=4 -3;end end break;end end end elseif ((v88<=(774 -(537 + 201))) or ((460 + (1887 -853))>=(366 + 2834))) then if ((v88<=(1976 -(1899 + (159 -(20 + 95))))) or ((2138 + 2153)>=(6468 -(153 + 630 + 728)))) then if ((v88>((1105 -(561 + 465)) -(765 -(648 + 70)))) or ((1184 -(320 + 422))>(4465 -3316))) then v85[v87[1 + 1]]=v28(v80[v87[1290 -(489 + 798)]],nil,v36);else local v148=758 -(534 + 224);local v149;local v150;local v151;while true do if (((2825 + 684)>=(3387 -926)) and (v148==(0 + 0))) then local v228=1432 -(708 + 724);while true do if (((6371 -(1107 + 737))>(2428 -(407 + 1366))) and (v228==(1 + 0))) then v148=1846 -(843 + (4500 -3498));break;end if (((17547 -13353)>(418 + 436)) and (v228==(0 -0))) then v149=v87[2 -0];v150=v85[v149 + 2];v228=1;end end end if (((655 + 775)>(270 + 306)) and (v148==(2 -1))) then v151=v85[v149] + v150;v85[v149]=v151;v148=1 + 1;end if (((416 -313)<3160) and ((3 -1)==v148)) then if ((v150>(0 + 0)) or ((3726 -(326 + 943))<(2501 -1491))) then if ((v151<=v85[v149 + ((576 -(275 + 299)) -1)]) or ((4903 -(534 + 344))==(1890 -(240 + 873)))) then local v252=0 + 0;local v253;while true do if ((((6571 -3936) + 194)==2829) and (v252==(1733 -(266 + 1467)))) then v253=0 + 0;while true do if ((v253==(0 + 0)) or (2296<=2263)) then v68=v87[4 -1];v85[v149 + (1601 -(990 + 608))]=v151;break;end end break;end end end elseif (((1602 -(16 + 1296))<(5391 -1803)) and (v151>=v85[v149 + (3 -2)])) then local v254=0 -0;local v255;local v256;while true do if ((v254==1) or ((4697 -(155 + 140))<=(5117 -(1295 + 399)))) then while true do if (((719 + 890)<=3420) and (v255==(594 -(579 + 15)))) then v256=0 -0;while true do if ((v256==0) or ((1361 + 1931)<(2886 -(425 + 990)))) then v68=v87[2 + 1];v85[v149 + 3]=v151;break;end end break;end end break;end if ((v254==(0 -0)) or ((588 + 3478)==(2923 -(161 + 1230)))) then v255=(0 -0) + 0;v256=nil;v254=3 -2;end end end break;end end end elseif ((v88<=((624 -(66 + 535)) + 11)) or ((19499 -14507)==(1390 -(247 + 163)))) then local v152=1008 -(743 + 265);local v153;local v154;local v155;local v156;local v157;while true do if (((6562 -4346)>=1191) and (v152==(2 + 0))) then v157=nil;while true do if (((2741 + 1023)==(17374 -13610)) and (v153==((28 + 552) -(156 + 423)))) then local v247=0;while true do if ((3580<=3963) and (v247==(0 + 0))) then v69=(v156 + v154) -(1 -0);v157=(119 -(108 + 11)) -0;v247=1;end if ((v247==(1 -(0 + 0))) or (4896<249)) then v153=768 -(701 + 65);break;end end end if ((347<=(7703 -5421)) and (v153==(1666 -(23 + 1643)))) then local v248=687 -(556 + 131);while true do if (((652 -(99 + 314))<4128) and (v248==(0 -0))) then v154=v87[1 + 1];v155,v156=v82(v85[v154](v12(v85,v154 + (1 -(0 + 0)),v69)));v248=1;end if ((v248==(3 -2)) or ((5235 -(674 + 690))==1436)) then v153=1 -0;break;end end end if ((v153==(1 + 1)) or (2521>(15423 -11016))) then for v257=v154,v69 do local v258=0 + 0;local v259;while true do if (((2393 -(877 + 1073))>=431) and (v258==(0 -0))) then v259=442 -(112 + 330);while true do if (((7293 -(4669 -(1350 + 267)))<(4821 -(53 + 134))) and (v259==(0 -0))) then v157=v157 + (1 -0);v85[v257]=v155[v157];break;end end break;end end end break;end end break;end if (((1 + 0)==v152) or ((2239 + 57)==(48 + 466))) then v155=nil;v156=nil;v152=5 -3;end if ((v152==0) or (4244>(4320 -(52 + 11)))) then v153=(0 + 0) -0;v154=nil;v152=339 -(87 + 251);end end elseif (((1536 -745)<=(2427 -(1129 + 348))) and (v88==35)) then local v205=14 -(8 + 6);local v206;local v207;while true do if (((2905 -((1917 -(276 + 1182)) + 990))<(1060 + 3380)) and (v205==((2 -1) + 0))) then while true do if ((v206==0) or (3566==(824 + 1926))) then v207=v87[229 -(144 + 83)];v85[v207](v85[v207 + (1077 -(1053 + 23))]);break;end end break;end if ((0==v205) or ((12990 -8483)<(3599 + 191))) then local v232=(0 + 0) -0;while true do if ((v232==(0 + 0)) or ((2685 + 1268)<(1952 + 830))) then v206=0 -0;v207=nil;v232=1 + 0;end if ((v232==1) or ((2952 + 1557)<=2516)) then v205=1;break;end end end end else local v208=0;local v209;local v210;while true do if (((2306 + 877)==3183) and ((1629 -(156 + 1472))==v208)) then while true do if ((v209==(1074 -(1037 + 37))) or ((6031 -(1262 + 597))<=((5581 -(598 + 1145)) -(37 + 839)))) then v210=v87[(3 -2) + 1];v85[v210]=v85[v210](v12(v85,v210 + 1,v69));break;end end break;end if ((v208==0) or ((799 -(132 + 42))==345)) then v209=0;v210=nil;v208=1;end end end elseif ((890<4365) and (v88<=(112 -73))) then if ((v88<=(26 + 11)) or (2403>2638)) then if (((6396 -3546)==(3976 -(705 + 421))) and  not v85[v87[2]]) then v68=v68 + 1;else v68=v87[3];end elseif (((1954 -(744 + 770))<(2327 -(8 + 1 + 598))) and (v88>38)) then local v211=0 + 0;local v212;local v213;local v214;local v215;while true do if (((1497 -(298 + 565))<=(3530 -(1529 + 419))) and (v211==0)) then local v233=1805 -(673 + 1132);while true do if ((v233==(4 -3)) or ((1999 -(345 + 527))<245)) then v211=(979 -(754 + 224)) + 0;break;end if (((2050 -(500 + 498))==1052) and (v233==(0 + 0))) then v212=1338 -((2617 -(1002 + 924)) + 647);v213=nil;v233=1;end end end if ((v211==(781 -(385 + 395))) or ((466 + 3117)<(2354 + 62))) then v214=nil;v215=nil;v211=5 -(657 -(500 + 154));end if ((v211==(1 + 1)) or ((2131 -1427)>=3143)) then while true do if ((v212==(0 + 0)) or ((11301 -(7359 -(126 + 183)))==((8331 -6044) -(323 + (782 -368))))) then local v266=0 -0;local v267;while true do if ((v266==0) or (376>1189)) then v267=0 + 0;while true do if ((v267==((3 -1) -1)) or ((3681 + 43)<(8619 -4947))) then v212=1;break;end if ((v267==(0 -0)) or ((2155 -1220)>(1691 + 12))) then v213=v80[v87[7 -4]];v214=nil;v267=1;end end break;end end end if ((v212==1) or ((136 + 1892)>((4316 + 731) -1703))) then local v268=1401 -(1040 + 361);local v269;while true do if ((3128>(2369 -(531 + 49))) and (v268==0)) then v269=0 + 0;while true do if ((v269==(1 + 0)) or ((255 + 2578)<=((86 + 3119) -(610 + 490 + 685)))) then v212=1562 -((2134 -(83 + 587)) + 96);break;end if ((v269==(1628 -(1226 + 358 + 44))) or (1451>(5040 -3188))) then local v311=0 -0;while true do if (((96 -(77 + 18))==v311) or ((1037 -(457 + 396))>3879)) then v269=1 + 0;break;end if ((v311==(1403 -(1146 + 142 + 105 + 10))) or ((2508 -(125 + 82))<(1953 -(1140 + (859 -485))))) then v215={};v214=v9({},{__index=function(v331,v332)local v336=0 + 0 + 0;local v337;local v338;while true do if (((199 + 24)<=(5205 -(166 + 108))) and (v336==(773 -(615 + 158)))) then v337=0 + 0;v338=nil;v336=(2 -1) -(949 -(309 + 640));end if (((59 + 27)<(4067 -(522 + 278 + 9))) and (v336==(3 -2))) then while true do if (((8438 -5010)>(3938 -(238 + 338))) and ((0 + 0)==v337)) then local v347=1534 -(942 + 592);while true do if (((392 + 437)<4980) and (v347==(1450 -(1405 + 45)))) then v338=v215[v332];return v338[1 + 0][v338[406 -(144 + 260)]];end end end end break;end end end,__newindex=function(v333,v334,v335)local v339=0;local v340;while true do if ((v339==(0 -0)) or ((737 -466)>=(3472 -(397 + 804)))) then v340=v215[v334];v340[2 -1][v340[2 + 0]]=v335;break;end end end});v311=1 + 0;end end end end break;end end end if ((v212==(2001 -(1731 + 268))) or ((4495 -(366 + 415))<1968)) then for v289=(1 -0) -(0 -0),v87[732 -(508 + 220)] do local v290=0 + 0;local v291;while true do if (((6187 -(261 + 1120))>=(1593 -361)) and ((1 -0)==v290)) then if ((v291[1]==(544 -(139 + 387))) or ((969 -(23 + 42 + 1))>(5900 -(644 + 519)))) then v215[v289-((367 + 225) -(155 + 436))]={v85,v291[3]};else v215[v289-(1291 -(185 + 1105))]={v35,v291[1166 -(94 + 1069)]};end v84[ #v84 + 1 + 0]=v215;break;end if (((1918 -1488)<(461 + 175)) and (v290==((2201 -(898 + 572)) -(98 + 633)))) then local v303=0 -0;while true do if (((4913 -(733 + 126))<=(7208 -2794)) and (v303==((0 -0) + 0))) then v68=v68 + ((1905 -(72 + 1831)) -1);v291=v78[v68];v303=1 + 0;end if (((5091 -((640 -185) + 193))==((2245 -740) + 2938)) and ((1183 -(798 + 384))==v303)) then v290=1;break;end end end end end v85[v87[7 -5]]=v28(v213,v214,v36);break;end end break;end end else v85[v87[2]]();end elseif ((v88<=(68 -28)) or ((786 -481)>=565)) then v85[v87[383 -(59 + 322)]]={};elseif ((v88==41) or (((6668 -4931) -(187 + 55))>(6560 -2215))) then v85[v87[1 + 1]]=v87[1 + 1 + 1];else v85[v87[1940 -(606 + 1332)]][v87[1 + 2]]=v87[2 + 2];end v68=v68 + 1 + 0 + 0;break;end end break;end end end end A,B=v26(v10(v72));if  not A[1] then local v89=v34[4][v68] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)();end vv8());end

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v66=0;while true do if (0==v66) then v18=v0(v3(v29,1,1));return "";end end else local v67=v2(v0(v29,16));if v18 then local v72=v5(v67,v18);v18=nil;return v72;else return v67;end end end);local function v19(v30,v31,v32)if v32 then local v68=(v30/((9 -7)^(v31-((2 -1) -0))))%(2^(((v32-1) -(v31-(751 -(707 + 43)))) + 1 + 0));return v68-(v68%(4 -3));else local v69=0;local v70;while true do if (v69==(0 -0)) then v70=(5 -3)^(v31-(3 -2));return (((v30%(v70 + v70))>=v70) and (651 -(113 + 537))) or ((1405 -(67 + 248)) -(642 + 448));end end end end local function v20()local v37=1972 -(1340 + 632);local v38;while true do if (v37==((2362 -(199 + 599)) -(1394 + 169))) then return v38;end if (v37==(0 + 0)) then v38=v1(v15,v17,v17);v17=v17 + (1 -0);v37=(2 + 0) -1;end end end local function v21()local v39=464 -((1134 -(810 + 288)) + 428);local v40;local v41;while true do if (v39==(0 + 0)) then v40,v41=v1(v15,v17,v17 + (826 -(453 + 371)));v17=v17 + (1088 -(971 + 115));v39=1;end if (v39==(1 -0)) then return (v41 * 256) + v40;end end end local function v22()local v42=0 -0;local v43;local v44;local v45;local v46;while true do if (v42==(1014 -(498 + 515))) then return (v46 * 16777216) + (v45 * (299670 -234134)) + (v44 * (398 -142)) + v43;end if (v42==(0 + 0 + 0)) then v43,v44,v45,v46=v1(v15,v17,v17 + (3 -0));v17=v17 + 2 + 2;v42=(478 + 461) -(593 + 345);end end end local function v23()local v47=0 + 0;local v48;local v49;while true do if (v47==(645 -(334 + 310))) then return (( -((5 -3) + 0) * v19(v49,30 + 2)) + (532 -(347 + 184))) * ((213 -((364 -165) + 12))^(v19(v49,1 + 20,394 -(182 + 181)) -(2325 -(880 + 422)))) * ((((v19(v49,2 -1,723 -(234 + 336 + 133)) * (2^(32 + 0))) + v48)/((867 -(671 + 194))^(112 -60))) + 1 + 0);end if (v47==(0 + 0)) then v48=v22();v49=v22();v47=2 -(3 -2);end end end local function v24(v33)local v50;if  not v33 then local v71=1734 -(1267 + 467);while true do if (v71==((0 + 0) -0)) then v33=v22();if (v33==(0 + 0)) then return "";end break;end end end v50=v3(v15,v17,(v17 + v33) -1);v17=v17 + v33;local v51={};for v63=2 -1, #v50 do v51[v63]=v2(v1(v3(v50,v63,v63)));end return v6(v51);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v52=0 + 0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v65=457 -(30 + 427);while true do if (v65==(1 + 0)) then if (v52~=0) then else local v79=0;while true do if ((1 -0)~=v79) then else v55={};v52=1 + 0;break;end if (v79==(0 + 0)) then v53={};v54={};v79=1 + 0;end end end if (v52==(439 -(70 + 366))) then local v80=0;local v81;while true do if (v80==(0 + 0)) then v81=0 -0;while true do if (v81==(0 + 0)) then for v110=1,v22() do v54[v110-(4 -3)]=v27();end for v112=1,v22() do v55[v112]=v22();end v81=1172 -(634 + 537);end if ((283 -(192 + 90))==v81) then return v56;end end break;end end end break;end if (v65~=(0 + 0)) then else if (v52==2) then local v82=0;while true do if (v82~=1) then else for v85=2 -1,v22() do local v86=0;local v87;local v88;local v89;while true do if (1==v86) then v89=nil;while true do if (v87==1) then while true do if (v88~=(0 -0)) then else v89=v20();if (v19(v89,2 -1,1)~=0) then else local v120=812 -(97 + 715);local v121;local v122;local v123;local v124;local v125;while true do if (v120~=0) then else v121=0;v122=nil;v120=1;end if ((3 -1)==v120) then v125=nil;while true do if (v121==(1791 -(353 + 1437))) then local v126=0;while true do if ((1637 -(869 + 767))~=v126) then else v121=2;break;end if (v126~=(0 -0)) then else local v127=0;while true do if (1~=v127) then else v126=1;break;end if (v127~=(0 -0)) then else v124=nil;v125=nil;v127=1;end end end end end if (v121~=(346 -(165 + 181))) then else v122=0 + 0;v123=nil;v121=1;end if ((6 -4)==v121) then while true do if ((929 -(239 + 688))==v122) then local v128=0;local v129;while true do if (v128==(0 + 0)) then v129=0 -0;while true do if (v129==1) then v122=1868 -(572 + 1293);break;end if (0~=v129) then else local v255=0;while true do if (v255==0) then local v286=0 -0;while true do if (1==v286) then v255=2 -1;break;end if (0==v286) then if (v19(v124,764 -(560 + 203),1)==(1138 -(555 + 582))) then v125[2]=v58[v125[3 -1]];end if (v19(v124,2,4 -2)==1) then v125[3]=v58[v125[5 -2]];end v286=1 + 0;end end end if (v255==(1 + 0)) then v129=2 -1;break;end end end end break;end end end if (v122==(3 + 0)) then if (v19(v124,3,3 + 0)~=(2 -1)) then else v125[618 -(570 + 44)]=v58[v125[4]];end v53[v85]=v125;break;end if (v122==(1093 -(523 + 569))) then local v131=0 + 0;local v132;local v133;while true do if (v131==0) then v132=0;v133=nil;v131=3 -2;end if (v131==(1 + 0)) then while true do if (v132==0) then v133=0 + 0;while true do if (v133==(1 + 0)) then v122=2 + 0;break;end if (v133~=0) then else v125={v21(),v21(),nil,nil};if (v123==0) then local v311=0;local v312;while true do if (v311~=0) then else v312=0 + 0;while true do if (v312~=(0 -0)) then else v125[5 -2]=v21();v125[4]=v21();break;end end break;end end elseif (v123==1) then v125[1518 -(143 + 1372)]=v22();elseif (v123==2) then v125[1845 -(1657 + 185)]=v22() -(2^(11 + 5));elseif (v123==(1685 -(1010 + 672))) then local v353=0 -0;while true do if (v353==(654 -(623 + 31))) then v125[3]=v22() -((7 -5)^(5 + 11));v125[1 + 3]=v21();break;end end end v133=2 -1;end end break;end end break;end end end if (v122==(0 -0)) then local v134=0 + 0;while true do if (v134==0) then local v241=0;while true do if (v241==0) then v123=v19(v89,2 + 0,3);v124=v19(v89,5 -1,5 + 1);v241=903 -(660 + 242);end if (v241~=1) then else v134=1;break;end end end if ((54 -(7 + 46))~=v134) then else v122=1;break;end end end end break;end end break;end if (v120==(1202 -(1011 + 190))) then v123=nil;v124=nil;v120=2;end end end break;end end break;end if (0==v87) then v88=0 + 0;v89=nil;v87=2 -1;end end break;end if (v86==(0 + 0)) then local v114=0 -0;while true do if (v114==1) then v86=1 + 0;break;end if (v114==(0 -0)) then v87=0 + 0;v88=nil;v114=1;end end end end end v52=4 -1;break;end if (v82==(0 + 0)) then for v90=1 + 0,v57 do local v91=0;local v92;local v93;while true do if (v91~=(1 + 0)) then else if (v92==(1504 -(197 + 1306))) then v93=v20()~=0;elseif (v92==2) then v93=v23();elseif (v92==3) then v93=v24();end v58[v90]=v93;break;end if (v91~=0) then else local v116=0;while true do if (v116==1) then v91=1 + 0;break;end if (v116==(0 + 0)) then v92=v20();v93=nil;v116=1;end end end end end v56[3]=v20();v82=1 + 0;end end end if (v52~=(1 + 0)) then else local v83=0;while true do if (v83~=1) then else v58={};v52=5 -3;break;end if (v83~=(0 -0)) then else v56={v53,v54,nil,v55};v57=v22();v83=2 -1;end end end v65=1;end end end end local function v28(v34,v35,v36)local v59=0;local v60;local v61;local v62;while true do if (0==v59) then v60=v34[1];v61=v34[2];v59=1;end if (v59==1) then v62=v34[3];return function(...)local v73=0;local v74;local v75;local v76;local v77;local v78;while true do if (v73==3) then A,B=v26(v10(v78));if  not A[1] then local v94=v34[4][v74] or "?";error("Script error at ["   .. v94   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (1==v73) then v76={...};v77=v11("#",...) -1;v73=2;end if (v73==2) then v78=nil;function v78()local v95=v60;local v96=Const;local v97=v61;local v98=v62;local v99=v26;local v100={};local v101={};local v102={};for v106=0 + (0 -0),v77 do if (((1295 + 3566)>=(139 + 2643)) and (v106>=v98)) then v100[v106-v98]=v76[v106 + (732 -(326 + 405))];else v102[v106]=v76[v106 + 1];end end local v103=(v77-v98) + (1419 -(1241 + 177));local v104;local v105;while true do local v107=0;local v108;local v109;while true do if (((1398 -529)<3421) and (v107==(0 + 0))) then v108=1214 -(573 + 641);v109=nil;v107=1 -0;end if ((((7820 -(1207 + 419)) -(940 + 779))<=(1867 + 2996)) and (v107==((5 + 64) -(45 + 23)))) then while true do if ((v108==(1733 -(505 + 1228))) or ((5190 -1584)==28)) then v109=0 -0;while true do if ((v109==(0 -0)) or (((29698 -23684) -2364)<=(3587 -1991))) then local v119=0 -0;while true do if (((9754 -6074)>=(92 + 215)) and (v119==1)) then v109=1;break;end if ((v119==0) or ((214 + 1108)==(4353 -((556 -186) + 389)))) then v104=v95[v74];v105=v104[2 -1];v119=1 + 0;end end end if ((1==v109) or ((1944 -(863 + 379))>(3043 -(1429 + 250)))) then if ((v105<=(17 + 3)) or ((7625 -5704)>=(5484 -2400))) then if (((6852 -4267)==(9848 -7263)) and (v105<=(21 -(6 + 6)))) then if (((3291 + 602)>(4167 -(120 + 227))) and (v105<=4)) then if ((v105<=(2 -1)) or ((4935 -(1421 + 491))==(6355 -3573))) then if (((2051 -620)>(2661 -1741)) and (v105==(1815 -(611 + 1204)))) then local v135=0 + 0;local v136;local v137;while true do if (((7436 -(9264 -6671))>=(4494 -(704 + 1010))) and (v135==((1764 -(1020 + 323)) -(315 + 105)))) then while true do if ((v136==(1679 -(1188 + 491))) or ((3319 -(2437 + 44))>=(954 + 3652))) then v137=v104[6 -4];v102[v137]=v102[v137](v12(v102,v137 + 1 + 0,v75));break;end end break;end if ((4219>(5228 -((1365 -(249 + 134)) + (2714 -1726)))) and (v135==(0 -0))) then local v242=(1 + 10) -(5 + 6);while true do if (((566 + 2660)>(390 + 826)) and ((2 -1)==v242)) then v135=1 -0;break;end if (((0 -0)==v242) or ((11 + 42)>=(2950 -(130 + 655)))) then v136=967 -(80 + (1944 -1057));v137=nil;v242=1 + 0;end end end end else local v138=1882 -(208 + 164 + 1510);local v139;local v140;while true do if ((v138==1) or ((2756 -(84 + 256))>(1547 + 1341))) then for v250=v139 + (851 -(759 + (772 -(443 + 238)))),v75 do v7(v140,v102[v250]);end break;end if ((v138==0) or ((94 + 1930)<=(875 -466))) then v139=v104[(1744 -(1652 + 90)) + 0];v140=v102[v139];v138=3 -2;end end end elseif (((4980 -3711)<4393) and (v105<=(2 + 0))) then local v141=187 -((217 -138) + 108);local v142;local v143;local v144;local v145;local v146;local v147;while true do if (((2866 -(1148 + (1102 -514)))<=1564) and (v141==(7 -(117 -(33 + 79))))) then v146=nil;v147=nil;v141=3;end if (((2287 -(24 + 574))<=2048) and (v141==(1 -0))) then local v243=1840 -(1522 + 318);while true do if (((4 -3)==v243) or ((4433 -(1699 + 249))<=(1056 -(245 + 17)))) then v141=1224 -(675 + 547);break;end if (((16963 -12080)==(4679 + 204)) and (v243==(0 -0))) then v144=nil;v145=nil;v243=1 + 0 + 0;end end end if ((v141==3) or ((2172 -(874 + 527))>=(9106 -5560))) then while true do if (((4957 -(554 + 161))>(1624 + 522)) and (v142==(1212 -(443 + 767)))) then local v257=0 + 0;local v258;while true do if (((10271 -(3520 + 1776))>=(3375 -(17 + 12))) and (v257==(0 -0))) then v258=1203 -(144 + 410 + 649);while true do if (((5028 -(479 + 149))>(472 + 951)) and (v258==(768 -(337 + 431)))) then local v320=22 -(12 + 10);while true do if ((v320==(2 -(1 + 0))) or (3770<=(1684 -469))) then v258=(763 -(603 + 159)) -0;break;end if (((3284 -(17 + 670))<=(6289 -(343 + 1482))) and (v320==(0 + (1142 -(424 + 718))))) then for v347=582 -((129 -66) + (1718 -1200)),v144 do v102[v145 + v347]=v146[v347];end v147=v146[167 -(106 + 60)];v320=4 -3;end end end if ((v258==(259 -(216 + 42))) or ((1897 + 159)==(897 + 3256))) then v142=3;break;end end break;end end end if ((v142==(435 -(184 + 251))) or ((943 -(122 + 31))<(70 -38))) then local v259=(580 -(279 + 108)) -(41 + 152);local v260;while true do if ((((1958 + 557) -(1357 + 336))<=4383) and (0==v259)) then v260=356 -(154 + 202);while true do if ((3250>1570) and (v260==0)) then v143=v104[2];v144=v104[9 -5];v260=1 -0;end if (((8409 -5960)>(649 + 1277)) and (v260==(3 -2))) then v142=1;break;end end break;end end end if (((868 + (38 -21))<(4366 -(4 + 14))) and (v142==(2 -1))) then local v261=0;local v262;while true do if ((v261==0) or (((23365 -12626) -6896)<(10924 -(1722 + 5462)))) then v262=1471 -(218 + 1253);while true do if ((v262==(1 + 0)) or ((14189 -10225)<=(2241 -(713 + 734)))) then v142=2;break;end if (((0 + 0)==v262) or (4973==3339)) then v145=v143 + 2 + 0;v146={v102[v143](v102[v143 + 1],v102[v145])};v262=1 + 0;end end break;end end end if ((v142==(3 + 0)) or ((4538 -(636 + 57))<=2301)) then if (v147 or (2744>3417)) then local v277=0 -0;while true do if (((5479 -(310 + 1654))==(2310 + 1135 + 70)) and (v277==(0 + 0))) then v102[v145]=v147;v74=v104[8 -5];break;end end else v74=v74 + 1 + 0;end break;end end break;end if (((2403 -988)>(2240 -(290 + 1628))) and (v141==(0 -0))) then local v244=554 -(444 + 110);while true do if ((v244==(1 + 0)) or (319>=(9223 -6345))) then v141=262 -(162 + 99);break;end if (((2387 -(210 + 130 + (5358 -3932)))==621) and (v244==(0 -0))) then v142=858 -(629 + 229);v143=nil;v244=1298 -(857 + 440);end end end end elseif (((4838 -(875 + 381))>=(144 + 276)) and (v105==(1937 -(763 + 1171)))) then local v183=330 -(87 + 243);local v184;local v185;local v186;local v187;local v188;while true do if (((255 -92)<(2724 -(866 + (223 -148)))) and (v183==(0 + 0))) then v184=1854 -(1660 + 194);v185=nil;v183=1 + 0;end if ((v183==(1 + 1)) or ((53 + 229)>((3501 -1380) -(450 + 1053)))) then v188=nil;while true do if (((5798 -(771 + 230))==(5681 -(801 + 83))) and (v184==(0 + 0))) then v185=143 -(122 + 21);v186=nil;v184=1;end if ((v184==(2 + 0)) or ((5065 -(50 + 38))==(3663 + 5))) then while true do if ((v185==0) or ((3896 + 383)<(4334 -3083))) then local v314=0 -0;local v315;while true do if (((4665 -(88 + 51))>(2655 + 460)) and (v314==(0 + 0))) then v315=0;while true do if ((v315==(700 -(337 + 362))) or ((2242 -(1062 + 11))<=(326 + 216))) then v185=1 -0;break;end if ((2821>=(313 + 866)) and (v315==(0 -0))) then v186=v104[3 -1];v187=v102[v186];v315=1 + 0;end end break;end end end if ((v185==(1 + 0)) or ((1238 + 142)>2088)) then v188=v102[v186 + 2];if (((1910 + 1363)>(8083 -5277)) and (v188>0)) then if ((v187>v102[v186 + 1 + 0]) or (((568 -334) + 3691)<(4948 -(1414 + 555)))) then v74=v104[2 + 1];else v102[v186 + ((2248 -(259 + 73)) -(89 + 394 + 1430))]=v187;end elseif (((858 -470)<(7529 -2878)) and (v187<v102[v186 + (635 -(266 + 368))])) then v74=v104[4 -(1750 -(380 + 1369))];else v102[v186 + 3]=v187;end break;end end break;end if ((1==v184) or ((4474 -(210 + 40))<=(3204 + 372))) then local v278=0 -0;while true do if (((3672 -(132 + 96))>=(1938 -(523 + 356))) and ((1 + 0)==v278)) then v184=1570 -(809 + 759);break;end if ((v278==(1404 -(1279 + 125))) or (329==3534)) then v187=nil;v188=nil;v278=1686 -(1536 + 149);end end end end break;end if ((2753==(1182 + 1571)) and (v183==(4 -3))) then v186=nil;v187=nil;v183=2;end end else v102[v104[384 -(297 + 85)]][v104[3]]=v104[10 -6];end elseif ((v105<=(3 + 3)) or ((3066 -1808)<=(16 + 1 + 2))) then if (((8819 -6419)<=3931) and (v105>5)) then for v180=v104[1359 -(1182 + 175)],v104[3] do v102[v180]=nil;end else v102[v104[1 + 1]]= #v102[v104[(298 -(137 + 160)) + 2]];end elseif ((2383==(523 + 1860)) and (v105<=(594 -(273 + (1554 -(930 + 310)))))) then local v149=0 -0;local v150;local v151;while true do if (((194 + 2118)==2312) and (v149==1)) then while true do if ((v150==(0 -0)) or ((5336 -(1770 + 131))<(1423 + 533))) then v151=v104[1 + 1 + 0];v102[v151]=v102[v151](v102[v151 + (2 -1)]);break;end end break;end if (((13 + 142)==155) and (v149==(1364 -(285 + (1401 -(311 + 11)))))) then local v245=1690 -(1132 + 558);while true do if ((v245==(0 + 0)) or (4804<=(5278 -(399 + 457)))) then v150=0 -0;v151=nil;v245=1;end if (((1779 + 793)>=(4098 -(106 + 1435))) and (v245==(1 + 0))) then v149=1829 -(116 + 1712);break;end end end end elseif ((v105>8) or (4289<(7219 -4379))) then if (((3423 -(108 + 58))<=(5798 -(524 + 479))) and (v104[1 + 1]==v102[v104[3 + 1]])) then v74=v74 + (180 -(92 + 87));else v74=v104[5 -2];end else local v190=(1970 -(986 + 984)) -0;local v191;local v192;local v193;local v194;while true do if ((668<=(8946 -4031)) and (v190==0)) then v191=0 -(0 -0);v192=nil;v190=1 + (1971 -(774 + 1197));end if (((2 + 0)==v190) or (3214<(3062 -(832 + 307)))) then while true do if ((v191==(516 -(356 + 159))) or ((1134 -(636 + 47))>(954 + 3125))) then v194={};v193=v9({},{__index=function(v287,v288)local v306=0 -0;local v307;while true do if ((v306==(0 + 0)) or ((1819 -(519 + 1166))>4780)) then local v328=(0 -0) + 0;while true do if ((v328==(0 + (1667 -(1294 + 373)))) or ((3441 -(63 + 82 + 816))<(130 + 1860))) then v307=v194[v288];return v307[1 + 0][v307[1 + 1]];end end end end end,__newindex=function(v289,v290,v291)local v308=(0 -0) -0;local v309;while true do if ((v308==(1481 -(173 + 1308))) or ((4488 -2552)>(2078 + 1484 + 191))) then v309=v194[v290];v309[1044 -(996 + 47)][v309[2 + 0]]=v291;break;end end end});v191=5 -3;end if ((((1681 + 2853) -((4797 -3609) + 562))==(6089 -3305)) and (v191==2)) then for v292=2 -1,v104[7 -3] do local v293=565 -(564 + 1);local v294;local v295;while true do if ((209==(203 + 6)) and (v293==(1147 -(666 + 481)))) then v294=0;v295=nil;v293=1 + 0;end if (((1507 + (2511 -1072))==(7848 -4902)) and ((1404 -(341 + 1062))==v293)) then while true do if ((1==v294) or ((214 + 881)<53)) then if (((4582 -(403 + 1174))==(539 + 2466)) and (v295[1]==20)) then v194[v292-((1 -0) + 0)]={v102,v295[3 + 0]};else v194[v292-(1693 -(539 + 1153))]={v35,v295[3]};end v101[ #v101 + (2 -1)]=v194;break;end if ((2906>=(2752 -(284 + 903))) and ((0 + 0)==v294)) then local v342=0;while true do if ((((4839 -(727 + 478)) -(69 + 1190))>=(46 + 16)) and (v342==0)) then v74=v74 + (958 -(401 + 556));v295=v95[v74];v342=1 -0;end if ((v342==(960 -(388 + 571))) or ((5500 -2451)>=4422)) then v294=651 -(570 + 80);break;end end end end break;end end end v102[v104[(2 + 2) -2]]=v28(v192,v193,v36);break;end if (((17625 -13678)<4951) and ((955 -(144 + 811))==v191)) then v192=v97[v104[3 + 0]];v193=nil;v191=1353 -(163 + 1189);end end break;end if ((v190==1) or ((2889 + 49)>4422)) then v193=nil;v194=nil;v190=1605 -(948 + 556 + 99);end end end elseif ((v105<=(62 -48)) or (((4545 -1084) -1015)>=(14649 -10730))) then if ((v105<=(6 + 5)) or ((62 + 216 + 1157)==387)) then if ((v105>(692 -(34 + 648))) or ((3039 -(1168 + 171 + 5))==(997 + 1073))) then v102[v104[1248 -(206 + 1040)]]=v28(v97[v104[3]],nil,v36);else local v153=0 -0;local v154;local v155;while true do if ((v153==(1208 -(1103 + 105))) or ((2011 -(39 + 6 + 0))>(3494 + 1256))) then v154=572 -(355 + 217);v155=nil;v153=1;end if (((5062 -(85 + 72))>=2100) and ((1 + 0)==v153)) then while true do if (((10116 -7153)>(370 + 429)) and (v154==0)) then v155=v104[2 + 0];v102[v155](v12(v102,v155 + 1 + 0,v104[(1931 -1488) -((629 -300) + 111)]));break;end end break;end end end elseif ((1217>(1361 -(1137 + 176))) and (v105<=12)) then v36[v104[3]]=v102[v104[1 + 1]];elseif (((6122 -(3691 -(345 + 21)))>(5990 -4436)) and (v105>(28 -15))) then local v195=644 -(492 + 152);local v196;local v197;while true do if (((4 -3)==v195) or ((1821 + 2983)<(984 + 3584))) then while true do if (((22675 -17839)>=(669 + 2424)) and (v196==(1381 -(1169 + 212)))) then v197=v104[2 -0];v102[v197](v12(v102,v197 + 1 + 0,v75));break;end end break;end if (((3949 -(247 + 651))>(7531 -5357)) and (v195==0)) then v196=0 + 0;v197=nil;v195=514 -(67 + 446);end end else local v198=1080 -(31 + 1049);local v199;local v200;local v201;while true do if (((1444 -590)<=(4458 -2888)) and (v198==(1853 -(863 + 989)))) then v201=0 + 0;for v264=v199,v104[16 -12] do local v265=1880 -(27 + 1853);local v266;while true do if (((1581 -(831 + 9))==741) and (v265==0)) then v266=1812 -(1186 + 626);while true do if ((v266==(0 -0)) or ((3972 -(195 + 486))<(863 + (3696 -(1250 + 540))))) then v201=v201 + 1 + (1128 -(562 + 566));v102[v264]=v200[v201];break;end end break;end end end break;end if (((4213 -(4164 -(20 + 852)))>(158 + 279)) and (v198==0)) then v199=v104[601 -(25 + 574)];v200={v102[v199](v102[v199 + 1])};v198=1 -0;end end end elseif (((128 + 24 + 2)<(230 + 381)) and (v105<=17)) then if ((v105<=15) or ((4045 -2389)>=3872)) then local v157=1440 -(633 + 807);local v158;local v159;while true do if (((8862 -5863)==(2516 + (1649 -1166))) and (v157==0)) then v158=638 -(10 + 628);v159=nil;v157=2 -1;end if ((v157==((9 -5) -3)) or ((9344 -4714)<=(235 + (1481 -(146 + 467))))) then while true do if ((v158==0) or ((5690 -((460 -250) + 286 + 1023))<(8786 -6001))) then v159=v104[(2603 -738) -(1655 + 208)];do return v102[v159](v12(v102,v159 + 1,v75));end break;end end break;end end elseif (((942 + 3352)>(4141 -3158)) and (v105>(215 -(179 + 20)))) then v102[v104[5 -3]]=v102[v104[3]][v102[v104[18 -14]]];else local v203=0 + 0;local v204;while true do if ((v203==(0 -0)) or ((5161 -(662 + 191))<(5428 -1970))) then v204=v104[8 -6];v102[v204]=v102[v204](v12(v102,v204 + (52 -(22 + 29)),v104[1398 -(203 + 1192)]));break;end end end elseif (((2545 + 459)<4935) and (v105<=(8 + 10))) then v74=v104[3];elseif ((v105==19) or (2553<=(565 -412))) then local v205=0 + 0;local v206;local v207;local v208;local v209;local v210;while true do if ((1913<=(470 + (4666 -3003))) and (v205==(2 -1))) then v208=nil;v209=nil;v205=1 + 1;end if (((3383 -(87 + 457))>(6361 -4630)) and (v205==(5 -3))) then v210=nil;while true do if ((v206==(0 -0)) or ((1527 + 2123)==(3341 -(812 + 992)))) then v207=v104[2 -0];v208,v209=v99(v102[v207](v102[v207 + (1648 -(1123 + 524))]));v206=1;end if ((v206==1) or ((1057 + 2266)==(4400 -(81 + 819)))) then v75=(v209 + v207) -1;v210=0 + 0;v206=2;end if (((1221 -(864 + 355))==v206) or (3844<=(313 + 6))) then for v296=v207,v75 do local v297=0;local v298;local v299;while true do if (((2344 + (173 -129))==2388) and ((0 + 0)==v297)) then v298=0 + (0 -0);v299=nil;v297=1 + 0;end if ((v297==(3 -2)) or ((2265 + 1576)<1453)) then while true do if ((v298==(964 -(942 + 22))) or ((221 + 659)>(2871 + 380))) then v299=(0 + 0) -0;while true do if (((7033 -2601)>=((828 + 3834) -2336)) and (v299==(0 + 0))) then v210=v210 + 1;v102[v296]=v208[v210];break;end end break;end end break;end end end break;end end break;end if (((13330 -10101)>=(2743 -666)) and (v205==0)) then v206=0;v207=nil;v205=1;end end else v102[v104[2]]=v102[v104[1 + 2]];end elseif ((v105<=(934 -(877 + 26))) or ((6581 -4765)<935)) then if (((230 + 40)==(176 + 63 + 31)) and (v105<=(1659 -(937 + 697)))) then if (((73 + 721)<=(24 + 1615)) and (v105<=(1 + 21))) then if (((9509 -4965)>=(1934 + 817)) and (v105==(223 -(140 + 62)))) then do return;end else local v160=0;local v161;local v162;while true do if ((0==v160) or ((66 + 40 + 39)==(7289 -5191))) then v161=731 -(272 + 459);v162=nil;v160=2 -1;end if (((20 -(11 + 8))==v160) or (4616<=1733)) then while true do if (((18499 -13595)>=(7685 -5808)) and (v161==(849 -(45 + 804)))) then v162=v104[1 + 1];v102[v162](v102[v162 + 1 + 0]);break;end end break;end end end elseif ((v105<=(78 -55)) or ((235 + 1114 + 1704)<=1376)) then v102[v104[1571 -(906 + 663)]]={};elseif (((2132 -571)==((3331 -(41 + 134)) -(1244 + 351))) and (v105==(94 -70))) then v102[v104[2]]=v36[v104[8 -5]];else local v213=0;local v214;local v215;local v216;while true do if ((1521<=(8246 -5446)) and (v213==1)) then v216=nil;while true do if (((2192 + 2582)>(933 + 1570)) and (v214==(0 -0))) then v215=0 + 0;v216=nil;v214=1 -0;end if ((v214==(1 -0)) or ((3869 -(365 + 570))<(758 + 1646))) then while true do if ((2198>1593) and (v215==(840 -(256 + (642 -(39 + 19)))))) then local v316=1616 -(1136 + 480);while true do if ((v316==0) or (4348>=(3545 + 886))) then v216=v104[2 -0];v75=(v216 + v103) -(1 -(0 + 0));v316=1 + 0;end if ((((3 -2) + 0)==v316) or ((1123 + 38)<(944 -598))) then v215=1 + 0;break;end end end if (((21 + 436)<(2043 -(14 + 61))) and (v215==1)) then for v322=v216,v75 do local v323=0;local v324;local v325;while true do if (((4262 + 648)>(4323 -(1165 + 315))) and (v323==(0 -0))) then v324=1393 -(56 + 1337);v325=nil;v323=(1272 -(653 + 616)) -2;end if (((2915 + 1472)>=1655) and (((1 -0) + 0)==v323)) then while true do if ((1557<=2421) and (v324==(0 + 0))) then v325=v100[v322-v216];v102[v322]=v325;break;end end break;end end end break;end end break;end end break;end if ((3577>=1247) and (v213==0)) then v214=1511 -(63 + 1448);v215=nil;v213=1;end end end elseif ((v105<=(18 + 10)) or ((8964 -4400)<(1373 + 1910))) then if (((4283 -(264 + 152))>=1983) and (v105<=(1747 -(346 + 1375)))) then local v164=0 -0;local v165;local v166;local v167;local v168;while true do if ((v164==(1 + 0)) or ((19700 -15207)<=(2807 -(69 + 29)))) then local v246=428 -(38 + 390);while true do if ((((5943 -(268 + 721)) -(93 + 568))>(2130 + 1426)) and (v246==((725 -(424 + 301)) -0))) then v167=nil;v168=nil;v246=1480 -((1424 -783) + 795 + 43);end if ((v246==(1 -0)) or (3268==(4111 -(240 + (1790 -(598 + 860)))))) then v164=2;break;end end end if ((v164==(0 + (0 -0))) or ((1501 + 2137)<(864 + 582))) then local v247=0 -0;while true do if ((2286<=((9242 -4640) -2199)) and (v247==(878 -(357 + 520)))) then v164=1 + 0;break;end if ((v247==(1222 -(1128 + 94))) or ((1596 -(535 + 361))<=(1074 -(1001 + 7)))) then v165=0;v166=nil;v247=1 + 0;end end end if (((191 + 2611)==((7740 -(199 + 402)) -4337)) and (v164==(1 + 1))) then while true do if ((v165==(1 -0)) or ((9895 -6427)<1831)) then v168=0;for v273=v166,v104[1249 -(1236 + 9)] do local v274=0;local v275;local v276;while true do if ((v274==(2 -1)) or ((2323 -(1141 + (1388 -(930 + 97))))>=((1737 -1054) + 492))) then while true do if (((1149 + (415 -(65 + 7)))<3223) and (v275==0)) then v276=0 + 0;while true do if (((14132 -(10637 -(291 + 844)))==(45 + 1750 + 2835)) and (v276==((3476 -(464 + 1400)) -(1579 + 33)))) then v168=v168 + 1 + 0;v102[v273]=v167[v168];break;end end break;end end break;end if ((v274==((3370 -2164) -(52 + 1154))) or ((2238 -(593 + 768))>(4198 -(632 + 173)))) then v275=0 + 0;v276=nil;v274=1 + 0;end end end break;end if (((5465 -(1533 + 143))>=(3013 -(67 + 90))) and (0==v165)) then local v267=851 -(149 + 702);local v268;while true do if ((v267==0) or (2428>(10108 -7467))) then v268=0 + (1026 -(931 + 95));while true do if ((v268==0) or (4372<=((1064 + 2118) -1492))) then v166=v104[3 -1];v167={v102[v166](v12(v102,v166 + (229 -(177 + 51)),v75))};v268=2 -1;end if ((v268==(1 + 0)) or ((4368 + (1473 -1012))<((9491 -(142 + 702)) -4966))) then v165=1 + 0;break;end end break;end end end end break;end end elseif ((v105==(12 + 15)) or (459>=(10282 -5473))) then local v217=854 -(33 + 821);local v218;local v219;local v220;while true do if (((12284 -8777)<(4255 -(134 + 107))) and (v217==(1 + 0))) then v220=nil;while true do if (((6436 -3436)==(5385 -2385)) and (v218==(1604 -((2783 -(79 + 1710)) + 609)))) then for v300=(3 -2) + 0, #v101 do local v301=58 -(44 + 14);local v302;while true do if ((0==v301) or ((2519 -(895 + 418))<867)) then v302=v101[v300];for v330=(1231 + 443) -(600 + 1074), #v302 do local v331=1143 -(78 + 1065);local v332;local v333;local v334;while true do if (((3368 -(660 + 1164))==((1650 -(808 + 245)) + 947)) and (v331==0)) then local v350=142 -(120 + 22);while true do if ((1714<(6551 -3219)) and ((1 + 0)==v350)) then v331=1 + 0;break;end if ((v350==(0 + 0)) or (333>(5483 -(634 + 24)))) then v332=v302[v330];v333=v332[31 -(23 + 7)];v350=1;end end end if ((v331==(467 -(404 + 62))) or ((4873 -(1739 + 137))<1684)) then v334=v332[79 -(22 + 55)];if (((v333==v102) and (v334>=v219)) or (1310==(5132 -(496 + 1491)))) then local v359=0;local v360;while true do if ((v359==(1067 -(125 + (1907 -(20 + 945))))) or ((6923 -3751)<=(276 + 1491))) then v360=0;while true do if ((v360==((818 -(552 + 266)) -0)) or ((5657 -3653)==484)) then v220[v334]=v333[v334];v332[1 -0]=v220;break;end end break;end end end break;end end end break;end end end break;end if (((42 + 1524)>(347 + 108 + 1048)) and (v218==(0 + 0))) then local v280=0 -0;while true do if (((0 -0)==v280) or (4559<=(3941 -(861 + 152)))) then v219=v104[79 -(46 + 31)];v220={};v280=1 + 0;end if (((4990 -(224 + 778))>=(2026 + 201)) and (v280==(1 + (0 -0)))) then v218=1 + 0;break;end end end end break;end if ((3772<((2604 + 1440) -(10 + 2))) and (v217==(0 -0))) then v218=(303 + 151) -(264 + (589 -399));v219=nil;v217=1 + 0;end end else v102[v104[2 + 0]][v104[2 + 0 + (2 -1)]]=v102[v104[1508 -(1436 + 68)]];end elseif (((5512 -2849)>(5420 -3028)) and (v105<=(126 -97))) then v102[v104[119 -(106 + 11)]]=v35[v104[3 + 0]];elseif ((v105>(23 + 7)) or ((2100 -(269 + 306))<=(951 -462))) then v102[v104[545 -(538 + 5)]]=v104[(25 + 409) -(219 + 93 + (1750 -(472 + 1159)))]~=(298 -(68 + 230));else v102[v104[1674 -(750 + 922)]]=v104[1263 -(1160 + 100)];end elseif ((v105<=(34 + 2)) or (3995<=(739 + 2280))) then if ((v105<=(9 + 24)) or (1647==(2720 -(1212 + 426)))) then if ((v105==(23 + 9)) or ((5768 -(983 + 385))<(1277 + 2196))) then local v170=0 -(0 + 0);local v171;local v172;local v173;while true do if (((857 -(41 + 15))>=(356 + 430)) and (v170==(1333 -((1576 -895) + 86 + 565)))) then v173=nil;while true do if ((4787>=(135 + 874)) and (v171==0)) then local v269=309 -(290 + 19);local v270;while true do if ((2358==(1963 + 395)) and ((0 -0)==v269)) then v270=0 + 0;while true do if ((4691>4661) and (0==v270)) then local v326=0;while true do if ((692<=(221 + 1038)) and (v326==(0 -0))) then v172=v104[614 -(295 + (1019 -(8 + 694)))];v173=v102[v104[1 + 2]];v326=1661 -(1221 + 439);end if ((v326==((1217 + 463) -((4575 -2914) + 18))) or ((7568 -(3778 -(732 + 235)))<=(2403 + 1311))) then v270=1;break;end end end if ((v270==(732 -((1866 -(1496 + 67)) + 428))) or (1365>1804)) then v171=2 -1;break;end end break;end end end if ((v171==(827 -(685 + 141))) or (1333>=(6478 -3579))) then v102[v172 + (155 -(79 + 75))]=v173;v102[v172]=v173[v104[93 -(37 + 52)]];break;end end break;end if ((v170==(0 + 0 + 0)) or (((4100 -(751 + 1200)) -(17 + 118))>=(5331 -(235 + 175 + 354)))) then local v248=0 + 0;while true do if ((v248==(459 -((1235 -(471 + 483)) + 177))) or ((5994 -((3103 -(370 + 1547)) + 399))<(1855 -(335 + 1098)))) then v170=2 -(3 -2);break;end if (((525 + 23 + 182)<=(1600 -(106 + 5))) and (v248==(0 + 0))) then v171=0 -0;v172=nil;v248=2 -1;end end end end else local v174=0 + 0;local v175;local v176;local v177;local v178;while true do if ((4999==(6835 -(73 + 1763))) and (v174==(180 -(84 + 96)))) then local v249=0 -0;while true do if ((v249==1) or ((2264 -(1200 + 45))>(3090 -(846 + 17)))) then v174=547 -(386 + 160);break;end if (((2329 -(307 + 1632))<=(11819 -9381)) and (v249==(0 -0))) then v175=v104[537 -(323 + 212)];v176,v177=v99(v102[v175](v12(v102,v175 + ((1571 -(79 + 1490)) -1),v104[3])));v249=1 + 0;end end end if ((((1121 -(213 + 597)) + 138)<(3085 -(277 + 1068))) and (v174==2)) then for v251=v175,v75 do local v252=0 -0;local v253;while true do if (((3102 + 748)>=((45423 -35793) -6032)) and (v252==(1557 -(1329 + 228)))) then v253=0 + 0;while true do if (((6288 -3779)==(6699 -4190)) and (v253==(0 -0))) then v178=v178 + (1 -0);v102[v251]=v176[v178];break;end end break;end end end break;end if ((3914==(3700 + 214)) and (v174==1)) then v75=(v177 + v175) -(1855 -(487 + 1367));v178=0;v174=2;end end end elseif (((6662 -3030)==(301 + 287 + 1184 + 1860)) and (v105<=(1037 -((1136 -(580 + 110)) + 557)))) then v102[v104[2 + 0]]();elseif (((1597 -(574 + 15 + 725))<(11070 -7669)) and (v105==(28 + 7))) then local v224=920 -(437 + 483);local v225;local v226;local v227;local v228;local v229;while true do if ((v224==((0 -0) + 0)) or (((3329 -(231 + 1653)) -607)>=3548)) then v225=0 + 0;v226=nil;v224=1 + 0;end if (((2636 -(126 + 43))<=(9400 -5282)) and (v224==((9 -4) -3))) then v229=nil;while true do if ((2==v225) or ((4189 -(187 + (3868 -2447)))>(4435 -(907 + 82)))) then for v303=v226,v75 do local v304=0;local v305;while true do if ((v304==(458 -(73 + 385))) or (1828>=(7497 -3314))) then v305=0;while true do if (((4265 -(207 + 1134))<(5701 -(432 + 919))) and (v305==((773 -(566 + 207)) + 0))) then v229=v229 + (2 -1) + 0;v102[v303]=v227[v229];break;end end break;end end end break;end if (((3714 -(38 + 19))>(410 + 2596)) and (v225==(1 + 0))) then local v281=1945 -((3115 -(27 + 1293)) + 150);while true do if (((3035 + 1533)>(244 + (734 -(321 + 260)))) and (v281==((0 + 0) -0))) then v75=(v228 + v226) -1;v229=(1935 -(1243 + 112)) -(533 + 47);v281=1 + 0;end if (((371 + 58)<1760) and (v281==(376 -(13 + 65 + 297)))) then v225=(100 -(77 + 21)) -0;break;end end end if (((0 -0)==v225) or ((2800 -1456)==((481 + 2944) -(194 + 1143)))) then local v282=0;while true do if ((543==(1901 -(351 + 1007))) and (v282==1)) then v225=222 -(66 + 155);break;end if ((v282==(0 + 0 + 0)) or ((6519 -(1077 + 843))<(18033 -14262))) then v226=v104[2];v227,v228=v99(v102[v226](v12(v102,v226 + (724 -(308 + 415)),v75)));v282=1461 -((1310 -(78 + 611)) + 839);end end end end break;end if (((2502 + 313)>((3067 -883) -1401)) and (v224==(700 -((97 -60) + 662)))) then v227=nil;v228=nil;v224=2;end end else local v230=726 -(462 + 264);local v231;local v232;local v233;local v234;local v235;while true do if (((15790 -10909)==4881) and (v230==(4 -3))) then v233=nil;v234=nil;v230=2;end if (((2123 + 1615)>(199 + 112)) and (v230==(2 -0))) then v235=nil;while true do if (((4049 -(619 + 518))==(10562 -(5751 + 1899))) and (v231==(0 -0))) then local v283=0 + 0;while true do if ((v283==(366 -(242 + 124))) or ((3364 -1064)>=(4079 -(297 + 1438)))) then v232=0;v233=nil;v283=1023 -((1427 -(32 + 405)) + 32);end if ((v283==(1273 -(1249 + 23))) or ((910 + 546)==3021)) then v231=1860 -(1254 + 605);break;end end end if ((((7694 -(791 + 2)) -(4299 -1143))==(5609 -(228 + 1636))) and (v231==1)) then local v284=(2760 -(1612 + 199)) -(351 + 598);while true do if ((v284==(1 + 0 + 0)) or ((326 + 431)>(190 + 2650))) then v231=5 -3;break;end if (((3762 -1799)<(6489 -(608 + 1013))) and (v284==0)) then v234=nil;v235=nil;v284=1 -0;end end end if ((v231==2) or ((2288 -1496)>(5161 -((1996 -(1300 + 656)) + 128)))) then while true do if (((6275 -4640)==(4367 -2732)) and (v232==(521 -(440 + 80)))) then local v317=0 + 0;while true do if ((v317==0) or ((3267 -(36 + 307))==(7624 -3715))) then v235=v102[v233] + v234;v102[v233]=v235;v317=1 + 0;end if ((v317==1) or ((5123 -(117 + 50))<=(470 + 810))) then v232=2;break;end end end if ((v232==(1871 -(1123 + 748))) or ((2350 -954)>=((6467 -(106 + 1570)) -(484 + 1017)))) then local v318=0 + 0;local v319;while true do if (((1928 + 332)<=(7031 -4380)) and (v318==(0 + 0))) then v319=(8853 -6931) -(1668 + 254);while true do if ((v319==1) or ((9391 -4899)<=(3095 -((1050 -(39 + 438)) + 487)))) then v232=1 + 0;break;end if (((0 + 0)==v319) or ((2741 + 193)<=(5161 -2379))) then local v356=231 -(93 + 138);while true do if ((96<=(575 + 1349)) and (v356==(1 -0))) then v319=(1789 -(1651 + 137)) + 0;break;end if ((v356==(0 + 0)) or ((1500 + 1829)<(1643 + 744))) then v233=v104[1 + 1];v234=v102[v233 + 2];v356=1137 -(515 + 621);end end end end break;end end end if ((v232==2) or (((6862 -2733) -1451)<=((535 + 2495) -(13 + 396)))) then if ((v234>0) or ((10762 -7127)<((6424 -2606) -(183 + 51)))) then if ((v235<=v102[v233 + 1]) or (672>=(252 + 3647))) then local v344=0 -0;local v345;while true do if ((v344==(0 + 0)) or ((5364 -1655)<(4312 -(882 + (2109 -1621))))) then v345=0;while true do if ((v345==(1278 -(586 + 692))) or ((2076 -1356)<=(1771 -1068))) then v74=v104[4 -1];v102[v233 + ((13 -8) -2)]=v235;break;end end break;end end end elseif ((v235>=v102[v233 + ((502 -257) -(147 + 97))]) or ((1559 + 3111)<(2893 -((1050 -(741 + 245)) + 62)))) then local v346=950 -(42 + 908);while true do if ((v346==((227 + 156) -((782 -(191 + 420)) + 212))) or ((352 + 2546)>(3598 -(8 + 17)))) then v74=v104[3];v102[v233 + 1 + 2]=v235;break;end end end break;end end break;end end break;end if (((3842 -(1516 + 410))<=(4490 -(465 + 108))) and (v230==(0 + 0))) then v231=(0 -0) + 0;v232=nil;v230=1 + 0 + 0;end end end elseif (((1031 + 812)<(5881 -(1157 + 146))) and (v105<=(1919 -((3676 -2494) + 698)))) then if ((v105<=(8 + 29)) or ((2448 -(99 + 1430))>=(2909 -1002))) then if ( not v102[v104[504 -(207 + 295)]] or ((2289 -(849 + 837))>(4079 -(223 + 12)))) then v74=v74 + 1;else v74=v104[6 -3];end elseif ((v105==(125 -((85 -45) + 47))) or (3395<=(838 + 1230))) then local v236=0 -0;local v237;local v238;while true do if (((644 + 968)<(4159 -(1444 + 291))) and (v236==(0 + 0))) then v237=0;v238=nil;v236=1 + 0 + 0;end if ((v236==1) or ((11341 -(1931 + 5565))<((13860 -(786 + 699)) -9869))) then while true do if ((v237==(530 -(492 + 38))) or ((139 + 501)==3526)) then v238=v104[1 + 1];v102[v238]=v102[v238]();break;end end break;end end else local v239=0 + 0;local v240;while true do if (((442 + 3213)>=1099) and (v239==(0 + 0 + 0))) then v240=v104[1584 -(184 + 1398)];do return v12(v102,v240,v75);end break;end end end elseif ((711<(2173 -(73 + 162))) and (v105<=(85 -45))) then v102[v104[4 -2]]=v102[v104[3]][v104[1612 -(358 + 1079 + 171)]];elseif ((v105>((1822 -(265 + 313)) -(1023 + 180))) or (3227==((762 -441) + 189))) then if (((188 + 775)<=2553) and (v102[v104[2]]==v104[4])) then v74=v74 + 1 + 0;else v74=v104[3];end elseif (v102[v104[1990 -(70 + 1918)]] or ((1990 + (1501 -(57 + 69)))==(1414 + 63 + 960))) then v74=v74 + (2 -1);else v74=v104[10 -7];end v74=v74 + 1 + 0;break;end end break;end end break;end end end end v73=3;end if (v73==0) then v74=1;v75= -1;v73=1;end end end;end end end return v28(v27(),{},v16)();end vv8());end
